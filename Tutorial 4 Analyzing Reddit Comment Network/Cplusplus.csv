,author,body,body_html,created_utc,distinguished,edited,id,is_submitter,link_id,parent_id,permalink,replies,saved,score,stickied,submission,subreddit,subreddit_id
0,parkotron,"[A Tour of C++](https://www.stroustrup.com/Tour.html) is generally considered to be the best high level overview of the language.

That said, modern C++ is very, very far from just a superset of C. If you wish to really learn the language, I'd recommend treating it as a brand new language that you are learning from scratch. (You just happen to have a leg up because you know what a pointer is, are familiar with the built-in types, etc.) Attempting to treat C++ as a few features that you can tack on to your C knowledge, is typically a road to unidiomatic and problematic C++ code.","<div class=""md""><p><a href=""https://www.stroustrup.com/Tour.html"">A Tour of C++</a> is generally considered to be the best high level overview of the language.</p>

<p>That said, modern C++ is very, very far from just a superset of C. If you wish to really learn the language, I&#39;d recommend treating it as a brand new language that you are learning from scratch. (You just happen to have a leg up because you know what a pointer is, are familiar with the built-in types, etc.) Attempting to treat C++ as a few features that you can tack on to your C knowledge, is typically a road to unidiomatic and problematic C++ code.</p>
</div>",1598369244.0,,False,g2t4p9j,False,t3_igcdoo,t3_igcdoo,/r/Cplusplus/comments/igcdoo/where_to_learn_c_while_already_knowing_c/g2t4p9j/,1,False,18,False,igcdoo,Cplusplus,t5_2qh6x
1,DrCharlesTinglePhD,"I'm in the same situation. I already knew C very well, and wanted to learn C++. My experience so far is that knowledge of C will not get you very far. Mostly the mental model of how things work under the hood will help you, because the underlying execution and memory model for C is the same as for C++. And the expression syntax is mostly the same. But that's only maybe 10% of what you need to know.

C is small and simple; C++ is big and complicated. C++ written by someone who really knows the language won't look very much like C at all. Templates and RAII, neither of which exist in C, tend to permeate everything in C++. So you should really just treat it like you're learning a new language.

The first thing you need to know is that in 2011, a new standard came out, called C++11, and it added some things that were very useful. Pre-C++11 and post-C++11 code are very different. But you really need to know both, because all the new code you should be writing should be post-C++11, using all the new features, but you'll almost certainly have to deal with (i.e. read, understand, interface with, and update) pre-C++11 code. There have been a couple more standards since then, C++14 and C++17, but they weren't such big changes.

The most helpful resources for me so far have been Bjarne Stroustrup's The C++ Programming Language, and Scott Meyers's Effective C++ (third edition, and maybe the second too, if you're a completionist) and Effective Modern C++. (""Modern C++"" is what people often say to talk about C++ after C++11.) The ""Effective"" books cover a lot of dark corners in the language that people tend to get wrong, and C++ easily has more dark corners than any other language. People often recommend Stroustrup's A Tour of C++, but I found that it skips over a lot of essential detail.

Make sure to look through the standard library reference. Most languages have little more than standard algorithms, data structures, and system interfaces in their standard library, but C++ has a lot of things that are basically language features in the standard library (and strangely, not covered in any C++ ""language manual"" that I could find).","<div class=""md""><p>I&#39;m in the same situation. I already knew C very well, and wanted to learn C++. My experience so far is that knowledge of C will not get you very far. Mostly the mental model of how things work under the hood will help you, because the underlying execution and memory model for C is the same as for C++. And the expression syntax is mostly the same. But that&#39;s only maybe 10% of what you need to know.</p>

<p>C is small and simple; C++ is big and complicated. C++ written by someone who really knows the language won&#39;t look very much like C at all. Templates and RAII, neither of which exist in C, tend to permeate everything in C++. So you should really just treat it like you&#39;re learning a new language.</p>

<p>The first thing you need to know is that in 2011, a new standard came out, called C++11, and it added some things that were very useful. Pre-C++11 and post-C++11 code are very different. But you really need to know both, because all the new code you should be writing should be post-C++11, using all the new features, but you&#39;ll almost certainly have to deal with (i.e. read, understand, interface with, and update) pre-C++11 code. There have been a couple more standards since then, C++14 and C++17, but they weren&#39;t such big changes.</p>

<p>The most helpful resources for me so far have been Bjarne Stroustrup&#39;s The C++ Programming Language, and Scott Meyers&#39;s Effective C++ (third edition, and maybe the second too, if you&#39;re a completionist) and Effective Modern C++. (&quot;Modern C++&quot; is what people often say to talk about C++ after C++11.) The &quot;Effective&quot; books cover a lot of dark corners in the language that people tend to get wrong, and C++ easily has more dark corners than any other language. People often recommend Stroustrup&#39;s A Tour of C++, but I found that it skips over a lot of essential detail.</p>

<p>Make sure to look through the standard library reference. Most languages have little more than standard algorithms, data structures, and system interfaces in their standard library, but C++ has a lot of things that are basically language features in the standard library (and strangely, not covered in any C++ &quot;language manual&quot; that I could find).</p>
</div>",1598399169.0,,False,g2uuuzg,False,t3_igcdoo,t3_igcdoo,/r/Cplusplus/comments/igcdoo/where_to_learn_c_while_already_knowing_c/g2uuuzg/,2,False,3,False,igcdoo,Cplusplus,t5_2qh6x
2,rodrigocfd,"I believe a good first contact would be writing a class which has a constructor and a destructor, and then store a bunch of instances in a vector. And do it without any pointers.

It will give you an insight of RAII, which I believe should be the first C++ concept ever taught to anyone.","<div class=""md""><p>I believe a good first contact would be writing a class which has a constructor and a destructor, and then store a bunch of instances in a vector. And do it without any pointers.</p>

<p>It will give you an insight of RAII, which I believe should be the first C++ concept ever taught to anyone.</p>
</div>",1598370159.0,,False,g2t6vv3,False,t3_igcdoo,t3_igcdoo,/r/Cplusplus/comments/igcdoo/where_to_learn_c_while_already_knowing_c/g2t6vv3/,0,False,2,False,igcdoo,Cplusplus,t5_2qh6x
3,Vanvan6,"I just started this free course on Coursera, [C++ For C Programmers, Part A](https://www.coursera.org/learn/c-plus-plus-a).","<div class=""md""><p>I just started this free course on Coursera, <a href=""https://www.coursera.org/learn/c-plus-plus-a"">C++ For C Programmers, Part A</a>.</p>
</div>",1598377655.0,,False,g2tny66,False,t3_igcdoo,t3_igcdoo,/r/Cplusplus/comments/igcdoo/where_to_learn_c_while_already_knowing_c/g2tny66/,0,False,1,False,igcdoo,Cplusplus,t5_2qh6x
4,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1598378211.0,,1598550680.0,g2tp4cf,False,t3_igcdoo,t1_g2t4p9j,/r/Cplusplus/comments/igcdoo/where_to_learn_c_while_already_knowing_c/g2tp4cf/,1,False,7,False,igcdoo,Cplusplus,t5_2qh6x
5,csp256,I'd also suggest watching whichever cppcon videos you can. You can learn a hell of a lot that way once you've got a good foundation.,"<div class=""md""><p>I&#39;d also suggest watching whichever cppcon videos you can. You can learn a hell of a lot that way once you&#39;ve got a good foundation.</p>
</div>",1598407920.0,,False,g2vaozm,False,t3_igcdoo,t1_g2uuuzg,/r/Cplusplus/comments/igcdoo/where_to_learn_c_while_already_knowing_c/g2vaozm/,0,False,3,False,igcdoo,Cplusplus,t5_2qh6x
6,elektritekt,"For the STL overview, I found Jonathan Boccara of FluentCPP.com to be very helpful. He has an hour long tour of ""the entire"" STL, which if nothing else, is good for just being aware of items.","<div class=""md""><p>For the STL overview, I found Jonathan Boccara of FluentCPP.com to be very helpful. He has an hour long tour of &quot;the entire&quot; STL, which if nothing else, is good for just being aware of items.</p>
</div>",1598881537.0,,False,g3gra26,False,t3_igcdoo,t1_g2uuuzg,/r/Cplusplus/comments/igcdoo/where_to_learn_c_while_already_knowing_c/g3gra26/,0,False,2,False,igcdoo,Cplusplus,t5_2qh6x
7,Doroc0,"Wait what?

Using C in C++ was Cheating?

How? Why?","<div class=""md""><p>Wait what?</p>

<p>Using C in C++ was Cheating?</p>

<p>How? Why?</p>
</div>",1598380698.0,,False,g2tucpf,True,t3_igcdoo,t1_g2tp4cf,/r/Cplusplus/comments/igcdoo/where_to_learn_c_while_already_knowing_c/g2tucpf/,1,False,6,False,igcdoo,Cplusplus,t5_2qh6x
8,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1598382657.0,,1598550677.0,g2tyfvm,False,t3_igcdoo,t1_g2tucpf,/r/Cplusplus/comments/igcdoo/where_to_learn_c_while_already_knowing_c/g2tyfvm/,1,False,5,False,igcdoo,Cplusplus,t5_2qh6x
9,more_exercise,"Huh. I read it like Student A wrote C code, then sold it to Student B. This cheating was found out because no other students wrote this style.","<div class=""md""><p>Huh. I read it like Student A wrote C code, then sold it to Student B. This cheating was found out because no other students wrote this style.</p>
</div>",1598389506.0,,False,g2uclqp,False,t3_igcdoo,t1_g2tyfvm,/r/Cplusplus/comments/igcdoo/where_to_learn_c_while_already_knowing_c/g2uclqp/,0,False,2,False,igcdoo,Cplusplus,t5_2qh6x
10,fromwithin,"Game development, standalone (not web) application development, high-frequency trading, anything else that requires the fastest possible execution time.","<div class=""md""><p>Game development, standalone (not web) application development, high-frequency trading, anything else that requires the fastest possible execution time.</p>
</div>",1605036190.0,,False,gbuwd57,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbuwd57/,0,False,21,False,jrrch1,Cplusplus,t5_2qh6x
11,reddituser15326,"If you’re in the US, lots of defense contractors using c++, especially for digital signal processing.","<div class=""md""><p>If you’re in the US, lots of defense contractors using c++, especially for digital signal processing.</p>
</div>",1605038168.0,,False,gbv0htv,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbv0htv/,1,False,19,False,jrrch1,Cplusplus,t5_2qh6x
12,violentlymickey,I use C and C++ as an embedded devices engineer.,"<div class=""md""><p>I use C and C++ as an embedded devices engineer.</p>
</div>",1605036794.0,,False,gbuxm2f,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbuxm2f/,0,False,14,False,jrrch1,Cplusplus,t5_2qh6x
13,Azarux,Computer vision. I’m mostly into algorithms and prototypes with Python but sometimes it’s necessary to provide a working one in C++,"<div class=""md""><p>Computer vision. I’m mostly into algorithms and prototypes with Python but sometimes it’s necessary to provide a working one in C++</p>
</div>",1605038381.0,,False,gbv0xus,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbv0xus/,1,False,8,False,jrrch1,Cplusplus,t5_2qh6x
14,PizzaPartify,"Game engines, browser engines and systems closer to the hardware (Yes I know C is used more here), amongst other things.","<div class=""md""><p>Game engines, browser engines and systems closer to the hardware (Yes I know C is used more here), amongst other things.</p>
</div>",1605036327.0,,False,gbuwnim,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbuwnim/,0,False,8,False,jrrch1,Cplusplus,t5_2qh6x
15,MathsDaddy,"Many products where performance is very important (like milliseconds make a difference important) will use something like C or C++, with C++ more prevalent as the project/codebase gets larger. It’s the primary language at my current job, which involves writing software for a system that interacts with electrocardiogram catheters in real-time.","<div class=""md""><p>Many products where performance is very important (like milliseconds make a difference important) will use something like C or C++, with C++ more prevalent as the project/codebase gets larger. It’s the primary language at my current job, which involves writing software for a system that interacts with electrocardiogram catheters in real-time.</p>
</div>",1605040364.0,,False,gbv53kh,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbv53kh/,1,False,5,False,jrrch1,Cplusplus,t5_2qh6x
16,Norishoe,"Game development, things with Python usually go with c++ also.","<div class=""md""><p>Game development, things with Python usually go with c++ also.</p>
</div>",1605036185.0,,False,gbuwcsj,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbuwcsj/,0,False,4,False,jrrch1,Cplusplus,t5_2qh6x
17,kamielonreddit,I'm in communications. We make a dispatching application. All in c++ because of the speed.,"<div class=""md""><p>I&#39;m in communications. We make a dispatching application. All in c++ because of the speed.</p>
</div>",1605042301.0,,False,gbv93z8,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbv93z8/,0,False,4,False,jrrch1,Cplusplus,t5_2qh6x
18,mredding,"I've used C++ in writing video games, tools -  lots of tools, high speed trading, and libraries. There are so many problems within problems - since I work for employers that use C++, we're parsing IO, threading work, and sorting elaborate data structures. I've interviewed or worked with companies writing their own compilers and translators, companies making CNC machines and testing equipment for cellphones and radios, bench test equipment, IoT, web services, CDNs, blockchain exchanges, and military contractors making reconnaissance drones.

There's nothing you can't do in C++, but don't marry to a particular language, either. The most important thing in finding employment is the fit. The language of choice is an implementation detail. If you fit, then we'll bring you on and teach you what you don't already know to be successful here.","<div class=""md""><p>I&#39;ve used C++ in writing video games, tools -  lots of tools, high speed trading, and libraries. There are so many problems within problems - since I work for employers that use C++, we&#39;re parsing IO, threading work, and sorting elaborate data structures. I&#39;ve interviewed or worked with companies writing their own compilers and translators, companies making CNC machines and testing equipment for cellphones and radios, bench test equipment, IoT, web services, CDNs, blockchain exchanges, and military contractors making reconnaissance drones.</p>

<p>There&#39;s nothing you can&#39;t do in C++, but don&#39;t marry to a particular language, either. The most important thing in finding employment is the fit. The language of choice is an implementation detail. If you fit, then we&#39;ll bring you on and teach you what you don&#39;t already know to be successful here.</p>
</div>",1605046414.0,,False,gbvhdf2,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbvhdf2/,0,False,4,False,jrrch1,Cplusplus,t5_2qh6x
19,perolan,"A lot of windows development, win32, anything with drivers. Desktop applications in general with things like QT, etc. A lot of times it just comes down to the company and what they want to use because there are so many tools available","<div class=""md""><p>A lot of windows development, win32, anything with drivers. Desktop applications in general with things like QT, etc. A lot of times it just comes down to the company and what they want to use because there are so many tools available</p>
</div>",1605037333.0,,False,gbuyquf,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbuyquf/,0,False,3,False,jrrch1,Cplusplus,t5_2qh6x
20,N45HV1LL3,We use it for RT control / operations of industrial sorting equipment for the recycling industry.,"<div class=""md""><p>We use it for RT control / operations of industrial sorting equipment for the recycling industry.</p>
</div>",1605042343.0,,False,gbv971l,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbv971l/,0,False,2,False,jrrch1,Cplusplus,t5_2qh6x
21,cdashery,"Im a software engineer and work on embedded firmware, operating systems, device drivers, and middlewear for network cards. Anything hardware development related uses C++.","<div class=""md""><p>Im a software engineer and work on embedded firmware, operating systems, device drivers, and middlewear for network cards. Anything hardware development related uses C++.</p>
</div>",1605046891.0,,False,gbviavr,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbviavr/,0,False,2,False,jrrch1,Cplusplus,t5_2qh6x
22,ty55101,"Along with these others, accounting and other bank systems. Remember you can just type C++ into job boards and find some positions.","<div class=""md""><p>Along with these others, accounting and other bank systems. Remember you can just type C++ into job boards and find some positions.</p>
</div>",1605058974.0,,False,gbw4p7r,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbw4p7r/,0,False,2,False,jrrch1,Cplusplus,t5_2qh6x
23,CoryLevy,I work in the infosec field and I’m developing an anti virus software using C and C++.,"<div class=""md""><p>I work in the infosec field and I’m developing an anti virus software using C and C++.</p>
</div>",1605092635.0,,False,gbxb9j7,False,t3_jrrch1,t3_jrrch1,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbxb9j7/,0,False,2,False,jrrch1,Cplusplus,t5_2qh6x
24,turkishjedi21,Ohohoho that's what I like to hear,"<div class=""md""><p>Ohohoho that&#39;s what I like to hear</p>
</div>",1605038548.0,,False,gbv1ahx,True,t3_jrrch1,t1_gbv0htv,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbv1ahx/,1,False,5,False,jrrch1,Cplusplus,t5_2qh6x
25,Krusss,I agree with this. Currently doing computer vision in C++ for real time applications.,"<div class=""md""><p>I agree with this. Currently doing computer vision in C++ for real time applications.</p>
</div>",1605039590.0,,False,gbv3hom,False,t3_jrrch1,t1_gbv0xus,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbv3hom/,0,False,5,False,jrrch1,Cplusplus,t5_2qh6x
26,nderflow,"""OK Jim, it's time to test the v0.1 software release.  You get on the table while I re-check the location of the femoral artery in the user documentation.""","<div class=""md""><p>&quot;OK Jim, it&#39;s time to test the v0.1 software release.  You get on the table while I re-check the location of the femoral artery in the user documentation.&quot;</p>
</div>",1605090225.0,,False,gbx91bf,False,t3_jrrch1,t1_gbv53kh,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gbx91bf/,0,False,2,False,jrrch1,Cplusplus,t5_2qh6x
27,PizzaPartify,"User name checks out :P

(This is a joke)","<div class=""md""><p>User name checks out :P</p>

<p>(This is a joke)</p>
</div>",1605286233.0,,False,gc607i8,False,t3_jrrch1,t1_gbv1ahx,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gc607i8/,1,False,3,False,jrrch1,Cplusplus,t5_2qh6x
28,turkishjedi21,"Lmaooo I'm surprised I hadnt noticed that. I just feel like working in missiles n shit would be cool.

Funnily enough, my brother is an EE from purdue, and works for raytheon. Builds guidance systems for missiles or something.

Our dad is from turkey, so his security clearance (needed to get the job) took longer than normal lol","<div class=""md""><p>Lmaooo I&#39;m surprised I hadnt noticed that. I just feel like working in missiles n shit would be cool.</p>

<p>Funnily enough, my brother is an EE from purdue, and works for raytheon. Builds guidance systems for missiles or something.</p>

<p>Our dad is from turkey, so his security clearance (needed to get the job) took longer than normal lol</p>
</div>",1605286432.0,,False,gc60m62,True,t3_jrrch1,t1_gc607i8,/r/Cplusplus/comments/jrrch1/what_jobs_use_c/gc60m62/,0,False,2,False,jrrch1,Cplusplus,t5_2qh6x
29,Ikkepop,"Dont be deceived. Usually C++ jobs will tackle projects that require years of accumulated knowledge, and generally will have high barrier of entry. While you can pickup all those webby things in a year or so. You will need to know your way around machine internals, kernel level code, memory management, arcane and complicated buildsystems, hellosh dependency management, in some instances fair bit of math, prestine debugging skills in etc. Not to mention c++ being so huge and so full of legacy no man on earth claims to mastered it all.","<div class=""md""><p>Dont be deceived. Usually C++ jobs will tackle projects that require years of accumulated knowledge, and generally will have high barrier of entry. While you can pickup all those webby things in a year or so. You will need to know your way around machine internals, kernel level code, memory management, arcane and complicated buildsystems, hellosh dependency management, in some instances fair bit of math, prestine debugging skills in etc. Not to mention c++ being so huge and so full of legacy no man on earth claims to mastered it all.</p>
</div>",1597405107.0,,1597405393.0,g1fjr93,False,t3_i9jvxd,t3_i9jvxd,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g1fjr93/,1,False,40,False,i9jvxd,Cplusplus,t5_2qh6x
30,forgottenqueue,"Hahah yeah. I looked at web stuff before. It’s horrible.  We do 95% c++ at my shop with a tiny bit of staring at the machine code  :). The only bad bit is when you need to link a library in or the build system has a glitch.

Edit: we do use a framework as well, but just one and it doesn’t have revolutionary change every year!","<div class=""md""><p>Hahah yeah. I looked at web stuff before. It’s horrible.  We do 95% c++ at my shop with a tiny bit of staring at the machine code  :). The only bad bit is when you need to link a library in or the build system has a glitch.</p>

<p>Edit: we do use a framework as well, but just one and it doesn’t have revolutionary change every year!</p>
</div>",1597403267.0,,False,g1fhg1s,False,t3_i9jvxd,t3_i9jvxd,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g1fhg1s/,1,False,18,False,i9jvxd,Cplusplus,t5_2qh6x
31,crunchyrawr,"It’s because people don’t know what they need when it comes to C++. What UI framework? Win32? Posix? What build system? Sockets? It’s a bit crazy really, the world is big and vast.","<div class=""md""><p>It’s because people don’t know what they need when it comes to C++. What UI framework? Win32? Posix? What build system? Sockets? It’s a bit crazy really, the world is big and vast.</p>
</div>",1597408716.0,,False,g1fowva,False,t3_i9jvxd,t3_i9jvxd,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g1fowva/,0,False,10,False,i9jvxd,Cplusplus,t5_2qh6x
32,upper_bound,"I think a big thing is that many C++ shops have legacy code bases using proprietary systems, which would be meaningless to put on a job posting, as it's all unique to that one team.

It's assumed with many C++ roles that you'll bring knowledge of programming, CS, architecture, and judgement, and will have to learn their specific toolset and codebase on the job.

I work in games. Outside of some common middleware and similar terminology and methods, each studio does it's own thing. Because of historical reasons, many game engines were very slow to adopt usage of STL, and many still rely on custom containers for vectors, maps, etc. Now, there's a good deal of churn in this specific industry, so there are some common paradigms as people take things that work from one studio to another and things can coalesce around a good practice organically, but there's no industry wide ""frameworks"".","<div class=""md""><p>I think a big thing is that many C++ shops have legacy code bases using proprietary systems, which would be meaningless to put on a job posting, as it&#39;s all unique to that one team.</p>

<p>It&#39;s assumed with many C++ roles that you&#39;ll bring knowledge of programming, CS, architecture, and judgement, and will have to learn their specific toolset and codebase on the job.</p>

<p>I work in games. Outside of some common middleware and similar terminology and methods, each studio does it&#39;s own thing. Because of historical reasons, many game engines were very slow to adopt usage of STL, and many still rely on custom containers for vectors, maps, etc. Now, there&#39;s a good deal of churn in this specific industry, so there are some common paradigms as people take things that work from one studio to another and things can coalesce around a good practice organically, but there&#39;s no industry wide &quot;frameworks&quot;.</p>
</div>",1597432117.0,,1597432365.0,g1h215u,False,t3_i9jvxd,t3_i9jvxd,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g1h215u/,1,False,6,False,i9jvxd,Cplusplus,t5_2qh6x
33,leftofzen,"That's probably because C++ requires real skill, knowledge and *understanding* to use, and takes many years to even become proficient in, let alone master, whereas anyone can learn 5 random frameworks for web dev from some online coding bootcamp in 6 months.

The other thing is that C++ is used for entirely different purposes to frontend web dev, so the two skill sets aren't really comparable in that sense, or at least, they're comparable in that learning C++ is probably equally as skilled as learning everything about frontend development.","<div class=""md""><p>That&#39;s probably because C++ requires real skill, knowledge and <em>understanding</em> to use, and takes many years to even become proficient in, let alone master, whereas anyone can learn 5 random frameworks for web dev from some online coding bootcamp in 6 months.</p>

<p>The other thing is that C++ is used for entirely different purposes to frontend web dev, so the two skill sets aren&#39;t really comparable in that sense, or at least, they&#39;re comparable in that learning C++ is probably equally as skilled as learning everything about frontend development.</p>
</div>",1597409265.0,,False,g1fpquh,False,t3_i9jvxd,t3_i9jvxd,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g1fpquh/,0,False,15,False,i9jvxd,Cplusplus,t5_2qh6x
34,,"I'm a master of c++

I also make things up from time to time","<div class=""md""><p>I&#39;m a master of c++</p>

<p>I also make things up from time to time</p>
</div>",1598341432.0,,False,g2s2u83,False,t3_i9jvxd,t1_g1fjr93,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g2s2u83/,0,False,1,False,i9jvxd,Cplusplus,t5_2qh6x
35,pawnh4,"lol, c++ seems amazingly straightforward after looking at front end requirements. I think I'll concentrate on this moving forward :)","<div class=""md""><p>lol, c++ seems amazingly straightforward after looking at front end requirements. I think I&#39;ll concentrate on this moving forward :)</p>
</div>",1597404394.0,,False,g1fit72,True,t3_i9jvxd,t1_g1fhg1s,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g1fit72/,1,False,8,False,i9jvxd,Cplusplus,t5_2qh6x
36,pawnh4,"Great point. Games is what I'm interested in also. I taught myself Unity and C# and made a few small games. I'm now considering learning c++ just to go deeper into game dev. But, would you suggest that I just stay with Unity as I already know it and it's probably overall simpler than c++?","<div class=""md""><p>Great point. Games is what I&#39;m interested in also. I taught myself Unity and C# and made a few small games. I&#39;m now considering learning c++ just to go deeper into game dev. But, would you suggest that I just stay with Unity as I already know it and it&#39;s probably overall simpler than c++?</p>
</div>",1597433455.0,,False,g1h5319,True,t3_i9jvxd,t1_g1h215u,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g1h5319/,1,False,1,False,i9jvxd,Cplusplus,t5_2qh6x
37,bitsynthesis,"This may be the first time I've seen c++ described as ""amazingly straightforward"" :)","<div class=""md""><p>This may be the first time I&#39;ve seen c++ described as &quot;amazingly straightforward&quot; :)</p>
</div>",1597452351.0,,False,g1i6ua2,False,t3_i9jvxd,t1_g1fit72,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g1i6ua2/,1,False,5,False,i9jvxd,Cplusplus,t5_2qh6x
38,upper_bound,"AAA is C++ (with few exceptions).

Now, we'll hire a jr. fresh from school with limited C++ experience, but not being at all familiar with pointers, memory management, OOP, etc. would be a tough sell. Not impossible if very bright, great personality, solid CS skills, but I would strongly encourage at least some familiarity with C/C++. Not expert level, you don't need to quote the standard, or know all the rare features from C++20, just core competence with pointers, OOP, RAII, etc.

Now, if you want to look for Unity shops, it's going to be smaller teams <30 and good chance will be mobile. Nothing wrong with that, plenty of good jobs and projects in that space, just setting expectations. The main issue is that Unity doesn't scale well to large teams/projects, so anyone looking for packaged engine/editor for a large project will just go with Unreal (which is C++).

As to whether you want to stick with Unity, up to you. Unity experience is still VERY relevant to AAA studios (learning HOW games are made), just don't ignore C++ entirely.

Also, if you have no formal education (or plans to pursue one), high level math, CS, and computer architecture will be arguably more important than what language(s) you know.","<div class=""md""><p>AAA is C++ (with few exceptions).</p>

<p>Now, we&#39;ll hire a jr. fresh from school with limited C++ experience, but not being at all familiar with pointers, memory management, OOP, etc. would be a tough sell. Not impossible if very bright, great personality, solid CS skills, but I would strongly encourage at least some familiarity with C/C++. Not expert level, you don&#39;t need to quote the standard, or know all the rare features from C++20, just core competence with pointers, OOP, RAII, etc.</p>

<p>Now, if you want to look for Unity shops, it&#39;s going to be smaller teams &lt;30 and good chance will be mobile. Nothing wrong with that, plenty of good jobs and projects in that space, just setting expectations. The main issue is that Unity doesn&#39;t scale well to large teams/projects, so anyone looking for packaged engine/editor for a large project will just go with Unreal (which is C++).</p>

<p>As to whether you want to stick with Unity, up to you. Unity experience is still VERY relevant to AAA studios (learning HOW games are made), just don&#39;t ignore C++ entirely.</p>

<p>Also, if you have no formal education (or plans to pursue one), high level math, CS, and computer architecture will be arguably more important than what language(s) you know.</p>
</div>",1597434106.0,,1597434439.0,g1h6lqn,False,t3_i9jvxd,t1_g1h5319,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g1h6lqn/,2,False,3,False,i9jvxd,Cplusplus,t5_2qh6x
39,,"I think that too, but I only know c++, pascal a little bit python and a little bit C#","<div class=""md""><p>I think that too, but I only know c++, pascal a little bit python and a little bit C#</p>
</div>",1598436423.0,,False,g2w9u1o,False,t3_i9jvxd,t1_g1i6ua2,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g2w9u1o/,0,False,1,False,i9jvxd,Cplusplus,t5_2qh6x
40,pawnh4,Thx,"<div class=""md""><p>Thx</p>
</div>",1597435596.0,,False,g1h9txr,True,t3_i9jvxd,t1_g1h6lqn,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g1h9txr/,0,False,1,False,i9jvxd,Cplusplus,t5_2qh6x
41,Chemoralora,Can vouch for this. C++ experience plus a couple of projects in unity is what got my foot in the door,"<div class=""md""><p>Can vouch for this. C++ experience plus a couple of projects in unity is what got my foot in the door</p>
</div>",1598871388.0,,False,g3gc7ir,False,t3_i9jvxd,t1_g1h6lqn,/r/Cplusplus/comments/i9jvxd/i_have_been_playing_around_with_different/g3gc7ir/,0,False,1,False,i9jvxd,Cplusplus,t5_2qh6x
42,shoalmuse,"If you aren’t very familiar with C++, my advice would be to admit it at the outset.  Modern C++ is a huge, complicated (and often convoluted) language and they will be able to poke holes in your seeming expertise unless you admit it at the outset.  I’ve interviewed people who claim to be a 9 out of 10, but if that is the case you should probably know most of the standard by heart.

That out of the way, I would say that Bjarne’s “Tour of C++” is a great read that can easily be done in a week (I did and I wasn’t cramming for an interview).  It gives a nice introduction to modern C++ features for a well-versed programmer coming from another language:
https://www.amazon.de/Tour-C-Depth/dp/0321958314","<div class=""md""><p>If you aren’t very familiar with C++, my advice would be to admit it at the outset.  Modern C++ is a huge, complicated (and often convoluted) language and they will be able to poke holes in your seeming expertise unless you admit it at the outset.  I’ve interviewed people who claim to be a 9 out of 10, but if that is the case you should probably know most of the standard by heart.</p>

<p>That out of the way, I would say that Bjarne’s “Tour of C++” is a great read that can easily be done in a week (I did and I wasn’t cramming for an interview).  It gives a nice introduction to modern C++ features for a well-versed programmer coming from another language:
<a href=""https://www.amazon.de/Tour-C-Depth/dp/0321958314"">https://www.amazon.de/Tour-C-Depth/dp/0321958314</a></p>
</div>",1562346778.0,,False,esyovsc,False,t3_c9i6qq,t3_c9i6qq,/r/Cplusplus/comments/c9i6qq/have_an_heavy_c_interview_next_week_whats_the/esyovsc/,4,False,17,False,c9i6qq,Cplusplus,t5_2qh6x
43,Craiynel,"I would argue for knowing what you can do with the language rather actually knowing the syntax and stuff, would benefit you the most. How to get the most performance out of c++ and where it shines. Though I'm just a student, so my opinion may not be relevant ^^","<div class=""md""><p>I would argue for knowing what you can do with the language rather actually knowing the syntax and stuff, would benefit you the most. How to get the most performance out of c++ and where it shines. Though I&#39;m just a student, so my opinion may not be relevant <sup>^</sup></p>
</div>",1562364401.0,,False,eszmfzi,False,t3_c9i6qq,t3_c9i6qq,/r/Cplusplus/comments/c9i6qq/have_an_heavy_c_interview_next_week_whats_the/eszmfzi/,1,False,4,False,c9i6qq,Cplusplus,t5_2qh6x
44,movme000,You should know C++11 14 17 at least some Basic features,"<div class=""md""><p>You should know C++11 14 17 at least some Basic features</p>
</div>",1562399517.0,,False,et1lwli,False,t3_c9i6qq,t3_c9i6qq,/r/Cplusplus/comments/c9i6qq/have_an_heavy_c_interview_next_week_whats_the/et1lwli/,0,False,2,False,c9i6qq,Cplusplus,t5_2qh6x
45,VelocityGoblin,"Hopefully you haven’t already had the interview, hackerrank.com has some good refresher topics","<div class=""md""><p>Hopefully you haven’t already had the interview, hackerrank.com has some good refresher topics</p>
</div>",1563429066.0,,False,eu3xjy5,False,t3_c9i6qq,t3_c9i6qq,/r/Cplusplus/comments/c9i6qq/have_an_heavy_c_interview_next_week_whats_the/eu3xjy5/,0,False,2,False,c9i6qq,Cplusplus,t5_2qh6x
46,-BuckarooBanzai-,"You can do such things with C# or Java where the syntax and language mechanics are laughably easy and pretty plain.
My first C# job i got myself into was one where i literally learned C# while working there, not even my colleagues noticed anything unusual.
Half of my working process was using google while having MSDN offline C# reference library(remember those?) constantly open.


Now you can't pull that off with c++ because it's simply huge.
The STL alone would break your neck ... twice...
Almost every company i know uses boost(yet another library) which would make your situation and reputation even worse after the first few tests prepared for you by the coders.


Also an old coder can smell your incompetence, he will know pretty quickly by throwing some compressed insider's quirk information at you and watch you closely.
This is how i do it with the new guys.
Revoke the intervew and spare your reputation from hitting the ground.

Edit:
Well anyway, I'm very interested in the outcome of your interview.","<div class=""md""><p>You can do such things with C# or Java where the syntax and language mechanics are laughably easy and pretty plain.
My first C# job i got myself into was one where i literally learned C# while working there, not even my colleagues noticed anything unusual.
Half of my working process was using google while having MSDN offline C# reference library(remember those?) constantly open.</p>

<p>Now you can&#39;t pull that off with c++ because it&#39;s simply huge.
The STL alone would break your neck ... twice...
Almost every company i know uses boost(yet another library) which would make your situation and reputation even worse after the first few tests prepared for you by the coders.</p>

<p>Also an old coder can smell your incompetence, he will know pretty quickly by throwing some compressed insider&#39;s quirk information at you and watch you closely.
This is how i do it with the new guys.
Revoke the intervew and spare your reputation from hitting the ground.</p>

<p>Edit:
Well anyway, I&#39;m very interested in the outcome of your interview.</p>
</div>",1562558119.0,,1562618173.0,et8j86b,False,t3_c9i6qq,t3_c9i6qq,/r/Cplusplus/comments/c9i6qq/have_an_heavy_c_interview_next_week_whats_the/et8j86b/,0,False,1,False,c9i6qq,Cplusplus,t5_2qh6x
47,burtawicz,"This^ 100%. In my experience, someone who is experienced with a language will be able to tell that you’re not with relative ease. I would argue that this is especially true for C++. 

If you’re honest with them from the start then they’ll likely be more forgiving when you make coding mistakes. This is also an effective strategy to get the hiring manager or technical assessor to look at your skills more abstractly.

In addition to Bjarne’s Tour of C++, you might want to check out Andrei Alexandrescu’s Modern C++ Design: Generic Programming and Design Patterns Applied.","<div class=""md""><p>This^ 100%. In my experience, someone who is experienced with a language will be able to tell that you’re not with relative ease. I would argue that this is especially true for C++. </p>

<p>If you’re honest with them from the start then they’ll likely be more forgiving when you make coding mistakes. This is also an effective strategy to get the hiring manager or technical assessor to look at your skills more abstractly.</p>

<p>In addition to Bjarne’s Tour of C++, you might want to check out Andrei Alexandrescu’s Modern C++ Design: Generic Programming and Design Patterns Applied.</p>
</div>",1562351533.0,,False,esyxpni,False,t3_c9i6qq,t1_esyovsc,/r/Cplusplus/comments/c9i6qq/have_an_heavy_c_interview_next_week_whats_the/esyxpni/,1,False,9,False,c9i6qq,Cplusplus,t5_2qh6x
48,Ilyps,"> I’ve interviewed people who claim to be a 9 out of 10

Bjarne Stroustrup (creator of C++) famously rated himself 7 out of 10 on C++. There's a lot to know...","<div class=""md""><blockquote>
<p>I’ve interviewed people who claim to be a 9 out of 10</p>
</blockquote>

<p>Bjarne Stroustrup (creator of C++) famously rated himself 7 out of 10 on C++. There&#39;s a lot to know...</p>
</div>",1562384832.0,,False,et0rg8a,False,t3_c9i6qq,t1_esyovsc,/r/Cplusplus/comments/c9i6qq/have_an_heavy_c_interview_next_week_whats_the/et0rg8a/,0,False,7,False,c9i6qq,Cplusplus,t5_2qh6x
49,gcross,">  I’ve interviewed people who claim to be a 9 out of 10, but if that is the case you should probably know most of the standard by heart.

In C++ there is very much a division between the people who use it to write code that does stuff and the wizards who use it to write libraries for the former;  the former don't need to know much about the standard itself (most of the time, at least), and you probably aren't hiring the latter.","<div class=""md""><blockquote>
<p>I’ve interviewed people who claim to be a 9 out of 10, but if that is the case you should probably know most of the standard by heart.</p>
</blockquote>

<p>In C++ there is very much a division between the people who use it to write code that does stuff and the wizards who use it to write libraries for the former;  the former don&#39;t need to know much about the standard itself (most of the time, at least), and you probably aren&#39;t hiring the latter.</p>
</div>",1562355571.0,,False,esz5jft,False,t3_c9i6qq,t1_esyovsc,/r/Cplusplus/comments/c9i6qq/have_an_heavy_c_interview_next_week_whats_the/esz5jft/,0,False,4,False,c9i6qq,Cplusplus,t5_2qh6x
50,Sero1000,Being 9 out of 10 shouldn't mean that you know the standard by heart.,"<div class=""md""><p>Being 9 out of 10 shouldn&#39;t mean that you know the standard by heart.</p>
</div>",1562351237.0,,False,esyx3yr,False,t3_c9i6qq,t1_esyovsc,/r/Cplusplus/comments/c9i6qq/have_an_heavy_c_interview_next_week_whats_the/esyx3yr/,0,False,3,False,c9i6qq,Cplusplus,t5_2qh6x
51,TangerineKing,This is an underrated comment. I agree with this for sure.,"<div class=""md""><p>This is an underrated comment. I agree with this for sure.</p>
</div>",1562374992.0,,False,et09eua,False,t3_c9i6qq,t1_eszmfzi,/r/Cplusplus/comments/c9i6qq/have_an_heavy_c_interview_next_week_whats_the/et09eua/,0,False,2,False,c9i6qq,Cplusplus,t5_2qh6x
52,,I would also argue this is uniquely true for c++. +1,"<div class=""md""><p>I would also argue this is uniquely true for c++. +1</p>
</div>",1562491259.0,,False,et5uwui,False,t3_c9i6qq,t1_esyxpni,/r/Cplusplus/comments/c9i6qq/have_an_heavy_c_interview_next_week_whats_the/et5uwui/,0,False,2,False,c9i6qq,Cplusplus,t5_2qh6x
53,SupermanLeRetour,"That's interesting, thank you !","<div class=""md""><p>That&#39;s interesting, thank you !</p>
</div>",1512581402.0,,False,dquy8db,False,t3_7hzeuc,t3_7hzeuc,/r/Cplusplus/comments/7hzeuc/most_interesting_innovations_introduced_in_c17/dquy8db/,0,False,2,False,7hzeuc,Cplusplus,t5_2qh6x
54,elmindreda,"That was really good, thank you!","<div class=""md""><p>That was really good, thank you!</p>
</div>",1512654749.0,,False,dqwespg,False,t3_7hzeuc,t3_7hzeuc,/r/Cplusplus/comments/7hzeuc/most_interesting_innovations_introduced_in_c17/dqwespg/,0,False,1,False,7hzeuc,Cplusplus,t5_2qh6x
55,Mimicry2311,"I should be angry at this repost, but it's actually a pretty good article!","<div class=""md""><p>I should be angry at this repost, but it&#39;s actually a pretty good article!</p>
</div>",1512592472.0,,False,dqv8dox,False,t3_7hzeuc,t3_7hzeuc,/r/Cplusplus/comments/7hzeuc/most_interesting_innovations_introduced_in_c17/dqv8dox/,0,False,0,False,7hzeuc,Cplusplus,t5_2qh6x
56,WhyAreYouGey,Look into Qt creator. Their [website](https://doc.qt.io/) has a ton of documentation too,"<div class=""md""><p>Look into Qt creator. Their <a href=""https://doc.qt.io/"">website</a> has a ton of documentation too</p>
</div>",1598418318.0,,False,g2vre5u,False,t3_igsmmr,t3_igsmmr,/r/Cplusplus/comments/igsmmr/where_to_start_on_learning_to_build_guis_in_c/g2vre5u/,1,False,13,False,igsmmr,Cplusplus,t5_2qh6x
57,rodrigocfd,"> I’m looking to target Windows x64

If you're using C++11 or newer, [WinLamb](https://github.com/rodrigocfd/winlamb) may interest you. Since it's all native, it may be a first step into more powerful stuff like DirectX.

> Something where it’s very easy to do simple things like draw a rectangle, or a square, or set a pixel to a certain color.

[Here](https://github.com/rodrigocfd/click-lines) is a basic example of that.","<div class=""md""><blockquote>
<p>I’m looking to target Windows x64</p>
</blockquote>

<p>If you&#39;re using C++11 or newer, <a href=""https://github.com/rodrigocfd/winlamb"">WinLamb</a> may interest you. Since it&#39;s all native, it may be a first step into more powerful stuff like DirectX.</p>

<blockquote>
<p>Something where it’s very easy to do simple things like draw a rectangle, or a square, or set a pixel to a certain color.</p>
</blockquote>

<p><a href=""https://github.com/rodrigocfd/click-lines"">Here</a> is a basic example of that.</p>
</div>",1598442009.0,,False,g2wfnfh,False,t3_igsmmr,t3_igsmmr,/r/Cplusplus/comments/igsmmr/where_to_start_on_learning_to_build_guis_in_c/g2wfnfh/,0,False,6,False,igsmmr,Cplusplus,t5_2qh6x
58,khedoros,"Look at [SFML](https://www.sfml-dev.org/) and [Imgui](https://github.com/ocornut/imgui). The first for drawing like you described, and the second for creating the kinds of GUIs that might be useful in graphical programs.","<div class=""md""><p>Look at <a href=""https://www.sfml-dev.org/"">SFML</a> and <a href=""https://github.com/ocornut/imgui"">Imgui</a>. The first for drawing like you described, and the second for creating the kinds of GUIs that might be useful in graphical programs.</p>
</div>",1598418719.0,,False,g2vrwa4,False,t3_igsmmr,t3_igsmmr,/r/Cplusplus/comments/igsmmr/where_to_start_on_learning_to_build_guis_in_c/g2vrwa4/,2,False,8,False,igsmmr,Cplusplus,t5_2qh6x
59,flarn2006,FLTK is worth taking a look at. Extremely easy to get started with.,"<div class=""md""><p>FLTK is worth taking a look at. Extremely easy to get started with.</p>
</div>",1598465653.0,,False,g2xo643,False,t3_igsmmr,t3_igsmmr,/r/Cplusplus/comments/igsmmr/where_to_start_on_learning_to_build_guis_in_c/g2xo643/,0,False,2,False,igsmmr,Cplusplus,t5_2qh6x
60,JohnGu9,"Qt. But C++ is not suitable for gui. If you want unlimited development app, consider high-level program language communicate with low-level language. For example, play with pyqt and Python will work fine with C++. If you prefer Java, use JNI to play with C++.","<div class=""md""><p>Qt. But C++ is not suitable for gui. If you want unlimited development app, consider high-level program language communicate with low-level language. For example, play with pyqt and Python will work fine with C++. If you prefer Java, use JNI to play with C++.</p>
</div>",1598452555.0,,False,g2wwi8m,False,t3_igsmmr,t3_igsmmr,/r/Cplusplus/comments/igsmmr/where_to_start_on_learning_to_build_guis_in_c/g2wwi8m/,1,False,-1,False,igsmmr,Cplusplus,t5_2qh6x
61,verystrangebeing,"Thanks, I’ll take a look at that :)","<div class=""md""><p>Thanks, I’ll take a look at that :)</p>
</div>",1598418607.0,,False,g2vrr7d,True,t3_igsmmr,t1_g2vre5u,/r/Cplusplus/comments/igsmmr/where_to_start_on_learning_to_build_guis_in_c/g2vrr7d/,0,False,5,False,igsmmr,Cplusplus,t5_2qh6x
62,verystrangebeing,"Oh, I see SFML has Java bindings. Maybe I’ll get the hang of it there first, then try in C++.","<div class=""md""><p>Oh, I see SFML has Java bindings. Maybe I’ll get the hang of it there first, then try in C++.</p>
</div>",1598419157.0,,False,g2vsg03,True,t3_igsmmr,t1_g2vrwa4,/r/Cplusplus/comments/igsmmr/where_to_start_on_learning_to_build_guis_in_c/g2vsg03/,0,False,4,False,igsmmr,Cplusplus,t5_2qh6x
63,verystrangebeing,"Awesome, these look great. Many thanks!","<div class=""md""><p>Awesome, these look great. Many thanks!</p>
</div>",1598419093.0,,False,g2vsd5n,True,t3_igsmmr,t1_g2vrwa4,/r/Cplusplus/comments/igsmmr/where_to_start_on_learning_to_build_guis_in_c/g2vsd5n/,0,False,4,False,igsmmr,Cplusplus,t5_2qh6x
64,Minimonium,That's basically QML + C++. :),"<div class=""md""><p>That&#39;s basically QML + C++. :)</p>
</div>",1598570603.0,,False,g32tbov,False,t3_igsmmr,t1_g2wwi8m,/r/Cplusplus/comments/igsmmr/where_to_start_on_learning_to_build_guis_in_c/g32tbov/,1,False,2,False,igsmmr,Cplusplus,t5_2qh6x
65,JohnGu9,"C++ is not design for gui. You can use C++ to do that, but you must waste more time than other languages that design for gui. For example, javascript async program is more easy to handle multi task in gui than oriented-multithread languages. And other features like different object in the same arrary, in C++ side you just can store pointers to store diff object in the array and cast up and down. I used to Qt but finally switch to others, I only use C++ in embedded systems that tool chain only support C++. Nowday, PWA is the future of gui. Don't waste time in the detail useless you are a game developer or engine developer.","<div class=""md""><p>C++ is not design for gui. You can use C++ to do that, but you must waste more time than other languages that design for gui. For example, javascript async program is more easy to handle multi task in gui than oriented-multithread languages. And other features like different object in the same arrary, in C++ side you just can store pointers to store diff object in the array and cast up and down. I used to Qt but finally switch to others, I only use C++ in embedded systems that tool chain only support C++. Nowday, PWA is the future of gui. Don&#39;t waste time in the detail useless you are a game developer or engine developer.</p>
</div>",1598578403.0,,1598578616.0,g337ptf,False,t3_igsmmr,t1_g32tbov,/r/Cplusplus/comments/igsmmr/where_to_start_on_learning_to_build_guis_in_c/g337ptf/,0,False,3,False,igsmmr,Cplusplus,t5_2qh6x
66,,"Bjarne Stroustrup literally wrote the C++ language, so his books are an excellent resource. I highly recommend giving his website a thorough look.

http://www.stroustrup.com/

Additionally, in my experience there seem to be three tenets of C++ that people struggle to understand. If you master these subjects, you should have no trouble with the language at all:

1. Memory Allocation - C++ typically does not make use of a garbage collector. Unused variables created on the heap are not cleaned up automatically. Therefore, it is best practice to use the stack as often as possible and avoid allocating heap memory. If you do have to allocate heap memory for an object (malloc), make sure that you free that memory when you are finished with it (delete). Otherwise you WILL get memory leaks in your program.


2. Pointers - Pointers require a developer to slightly change their way of thinking about memory. All data and variables are held in memory, and each piece of data can be referenced by its memory address. That's exactly what a pointer is. A reference to a memory address. You can use pointers to make very efficient and lightweight code by passing around a reference to the location in memory of a large object rather than the object itself. You can then access the object value by dereferencing the pointer, which simply means you are telling your function to look at the value in the memory location defined in the pointer. There are many other things you can do with pointers that make them a powerful tool. 


3. Polymorphism - C++ is an object oriented language that encourages modular design by allowing you to define basic classes and extend them by creating child classes with additional or unique definitions. You can then reference a child class by one of its older generational types. For example, if I have a parent class called Toy, and I create a child class to extend it called Ball, then I can pass a Ball object in wherever a Toy object is asked for, because all Balls are Toys. (But be careful to avoid issues because not all Toys are Balls)","<div class=""md""><p>Bjarne Stroustrup literally wrote the C++ language, so his books are an excellent resource. I highly recommend giving his website a thorough look.</p>

<p><a href=""http://www.stroustrup.com/"">http://www.stroustrup.com/</a></p>

<p>Additionally, in my experience there seem to be three tenets of C++ that people struggle to understand. If you master these subjects, you should have no trouble with the language at all:</p>

<ol>
<li><p>Memory Allocation - C++ typically does not make use of a garbage collector. Unused variables created on the heap are not cleaned up automatically. Therefore, it is best practice to use the stack as often as possible and avoid allocating heap memory. If you do have to allocate heap memory for an object (malloc), make sure that you free that memory when you are finished with it (delete). Otherwise you WILL get memory leaks in your program.</p></li>
<li><p>Pointers - Pointers require a developer to slightly change their way of thinking about memory. All data and variables are held in memory, and each piece of data can be referenced by its memory address. That&#39;s exactly what a pointer is. A reference to a memory address. You can use pointers to make very efficient and lightweight code by passing around a reference to the location in memory of a large object rather than the object itself. You can then access the object value by dereferencing the pointer, which simply means you are telling your function to look at the value in the memory location defined in the pointer. There are many other things you can do with pointers that make them a powerful tool. </p></li>
<li><p>Polymorphism - C++ is an object oriented language that encourages modular design by allowing you to define basic classes and extend them by creating child classes with additional or unique definitions. You can then reference a child class by one of its older generational types. For example, if I have a parent class called Toy, and I create a child class to extend it called Ball, then I can pass a Ball object in wherever a Toy object is asked for, because all Balls are Toys. (But be careful to avoid issues because not all Toys are Balls)</p></li>
</ol>
</div>",1578948572.0,,False,feagq2x,False,t3_eo9axv,t3_eo9axv,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/feagq2x/,3,False,16,False,eo9axv,Cplusplus,t5_2qh6x
67,croutonicus,"Resources are great but try make some trivial project and implement aspects of what you're learning as you go. It will help reinforce the stuff you're taking in, which is important if you're trying to learn a lot in a short space of time. c++ courses often read like a theory lesson rather than learning a programming language so it's nice to keep things pragmatic. 

It will help you to recognise that you actually understand what you're reading enough to use it, and you can also use stuff you've already learned to flesh it out a bit.","<div class=""md""><p>Resources are great but try make some trivial project and implement aspects of what you&#39;re learning as you go. It will help reinforce the stuff you&#39;re taking in, which is important if you&#39;re trying to learn a lot in a short space of time. c++ courses often read like a theory lesson rather than learning a programming language so it&#39;s nice to keep things pragmatic. </p>

<p>It will help you to recognise that you actually understand what you&#39;re reading enough to use it, and you can also use stuff you&#39;ve already learned to flesh it out a bit.</p>
</div>",1578947897.0,,False,feaf5yf,False,t3_eo9axv,t3_eo9axv,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/feaf5yf/,1,False,5,False,eo9axv,Cplusplus,t5_2qh6x
68,Royzcow21,"W3Schools  has a c++ section you can take a look at.
https://www.w3schools.com/cpp/","<div class=""md""><p>W3Schools  has a c++ section you can take a look at.
<a href=""https://www.w3schools.com/cpp/"">https://www.w3schools.com/cpp/</a></p>
</div>",1578947324.0,,False,feadi3o,False,t3_eo9axv,t3_eo9axv,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/feadi3o/,1,False,3,False,eo9axv,Cplusplus,t5_2qh6x
69,csp256,"https://norvig.com/21-days.html

https://abstrusegoose.com/249","<div class=""md""><p><a href=""https://norvig.com/21-days.html"">https://norvig.com/21-days.html</a></p>

<p><a href=""https://abstrusegoose.com/249"">https://abstrusegoose.com/249</a></p>
</div>",1578993490.0,,False,fed162o,False,t3_eo9axv,t3_eo9axv,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/fed162o/,0,False,2,False,eo9axv,Cplusplus,t5_2qh6x
70,Sn34kyMofo,"What you're looking to do is unrealistic and there's likely no shortcut at this point that will truly satisfy what you're asking for with this inquiry.

I don't mean that to intimidate, discourage, or offend you; I'm just being realistic.

When you say ""learn the basics of C++ programming"", do you need the basics of logic, the basics of C++ syntax, the basics of a methodology like OOP, or multiple of those?

Pick something and stick with it. You have that book, right? Does it contain practice problems for you at the end of each chapter? If not, then consider another book that does. The fastest way to learn the basics of programming/languages *and commit them to memory*, is to program. You can try to rush that process, but, again, for most of us mortals, it simply doesn't work like that.

Find one primary book/lesson series, and focus only on that (save for whatever research you might need to do via the web, of course).

Break the cycle of your brain looking for a fast path. If this is all a pressing matter of time, then stop floundering around places like here, pick something authoritative/recommended, and get to work. Do the exercises. Read and apply. Do that every day, even if you only do it for 30 minutes, an hour, or otherwise. Eat, sleep, and drink it (as much as you reasonably can; downtime is important, too.)

The good news: if you care about being a programmer, then your interest and resolve will still stand out. Also, waffling about is completely normal in programming. It's part of the deal. So it's completely possible for you to piecemeal and fumble your way through your impending challenge. But just find something with exercises, and get to work. It's really just that ""simple"" at this stage.","<div class=""md""><p>What you&#39;re looking to do is unrealistic and there&#39;s likely no shortcut at this point that will truly satisfy what you&#39;re asking for with this inquiry.</p>

<p>I don&#39;t mean that to intimidate, discourage, or offend you; I&#39;m just being realistic.</p>

<p>When you say &quot;learn the basics of C++ programming&quot;, do you need the basics of logic, the basics of C++ syntax, the basics of a methodology like OOP, or multiple of those?</p>

<p>Pick something and stick with it. You have that book, right? Does it contain practice problems for you at the end of each chapter? If not, then consider another book that does. The fastest way to learn the basics of programming/languages <em>and commit them to memory</em>, is to program. You can try to rush that process, but, again, for most of us mortals, it simply doesn&#39;t work like that.</p>

<p>Find one primary book/lesson series, and focus only on that (save for whatever research you might need to do via the web, of course).</p>

<p>Break the cycle of your brain looking for a fast path. If this is all a pressing matter of time, then stop floundering around places like here, pick something authoritative/recommended, and get to work. Do the exercises. Read and apply. Do that every day, even if you only do it for 30 minutes, an hour, or otherwise. Eat, sleep, and drink it (as much as you reasonably can; downtime is important, too.)</p>

<p>The good news: if you care about being a programmer, then your interest and resolve will still stand out. Also, waffling about is completely normal in programming. It&#39;s part of the deal. So it&#39;s completely possible for you to piecemeal and fumble your way through your impending challenge. But just find something with exercises, and get to work. It&#39;s really just that &quot;simple&quot; at this stage.</p>
</div>",1578949195.0,,False,feaifaf,False,t3_eo9axv,t3_eo9axv,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/feaifaf/,1,False,5,False,eo9axv,Cplusplus,t5_2qh6x
71,jcancellier,TutorialsPoint is a pretty comprehensive way to quickly grasp the major parts of a programming language. It essentially summarizes the primary concepts which would usually be tought in a programming book. It is my go-to way for learning new languages quickly: [https://www.tutorialspoint.com/cplusplus/index.htm](https://www.tutorialspoint.com/cplusplus/index.htm),"<div class=""md""><p>TutorialsPoint is a pretty comprehensive way to quickly grasp the major parts of a programming language. It essentially summarizes the primary concepts which would usually be tought in a programming book. It is my go-to way for learning new languages quickly: <a href=""https://www.tutorialspoint.com/cplusplus/index.htm"">https://www.tutorialspoint.com/cplusplus/index.htm</a></p>
</div>",1578954552.0,,False,feb1kjn,False,t3_eo9axv,t3_eo9axv,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/feb1kjn/,0,False,1,False,eo9axv,Cplusplus,t5_2qh6x
72,,Sams teach yourself C++ is pretty good,"<div class=""md""><p>Sams teach yourself C++ is pretty good</p>
</div>",1578954869.0,,False,feb2iso,False,t3_eo9axv,t3_eo9axv,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/feb2iso/,0,False,1,False,eo9axv,Cplusplus,t5_2qh6x
73,axelgio01,"Going through this was quite useful for me:

 [http://www.cplusplus.com/doc/tutorial/](http://www.cplusplus.com/doc/tutorial/)","<div class=""md""><p>Going through this was quite useful for me:</p>

<p><a href=""http://www.cplusplus.com/doc/tutorial/"">http://www.cplusplus.com/doc/tutorial/</a></p>
</div>",1578959364.0,,False,febj8fg,False,t3_eo9axv,t3_eo9axv,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/febj8fg/,0,False,1,False,eo9axv,Cplusplus,t5_2qh6x
74,,"Ok i have the latest version of C++ that i myself am currently using and trust me this textbook will hold your hand and guide you through each concept. The only thing is that because the book is extremely thorough, it’s very long. It’s roughly 1350 pages. and I’ll give you the book for free. It has everything you need to master c++. If i ever buy the labs and test banks in the future, I’ll gladly share them with for no cost.","<div class=""md""><p>Ok i have the latest version of C++ that i myself am currently using and trust me this textbook will hold your hand and guide you through each concept. The only thing is that because the book is extremely thorough, it’s very long. It’s roughly 1350 pages. and I’ll give you the book for free. It has everything you need to master c++. If i ever buy the labs and test banks in the future, I’ll gladly share them with for no cost.</p>
</div>",1578990566.0,,1579033632.0,fecz1a1,False,t3_eo9axv,t3_eo9axv,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/fecz1a1/,2,False,1,False,eo9axv,Cplusplus,t5_2qh6x
75,darthjoey91,"FYI, weird things happen when you use delete on objects instantiated with malloc. Like it can work sometimes, but it’s undefined behavior. 

The C++ delete operator goes with objects made using the new operator. If you use malloc or calloc or reallocate, use free to free their memory.","<div class=""md""><p>FYI, weird things happen when you use delete on objects instantiated with malloc. Like it can work sometimes, but it’s undefined behavior. </p>

<p>The C++ delete operator goes with objects made using the new operator. If you use malloc or calloc or reallocate, use free to free their memory.</p>
</div>",1578977695.0,,False,fecmn43,False,t3_eo9axv,t1_feagq2x,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/fecmn43/,0,False,13,False,eo9axv,Cplusplus,t5_2qh6x
76,dbgprint,Why on earth are you suggesting he use malloc and delete? Use new and delete. If you use malloc use free.,"<div class=""md""><p>Why on earth are you suggesting he use malloc and delete? Use new and delete. If you use malloc use free.</p>
</div>",1578980445.0,,False,fecq03d,False,t3_eo9axv,t1_feagq2x,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/fecq03d/,0,False,10,False,eo9axv,Cplusplus,t5_2qh6x
77,CryMeAn0cean,"Ill make sure to prioritize understanding these concepts when time comes, thank you!","<div class=""md""><p>Ill make sure to prioritize understanding these concepts when time comes, thank you!</p>
</div>",1578950624.0,,False,feann22,True,t3_eo9axv,t1_feagq2x,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/feann22/,0,False,5,False,eo9axv,Cplusplus,t5_2qh6x
78,CryMeAn0cean,Good idea! I just need to figure out what kinds of small projects someone can start out with.,"<div class=""md""><p>Good idea! I just need to figure out what kinds of small projects someone can start out with.</p>
</div>",1578948362.0,,False,feagau3,True,t3_eo9axv,t1_feaf5yf,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/feagau3/,1,False,3,False,eo9axv,Cplusplus,t5_2qh6x
79,CryMeAn0cean,Will do!,"<div class=""md""><p>Will do!</p>
</div>",1578947533.0,,False,feae761,True,t3_eo9axv,t1_feadi3o,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/feae761/,0,False,1,False,eo9axv,Cplusplus,t5_2qh6x
80,CryMeAn0cean,"Thanks for being realistic with me. I understand your points, the only thing i have going is to make learning my utmost priority. To eat, sleep, and drink it as you put it.","<div class=""md""><p>Thanks for being realistic with me. I understand your points, the only thing i have going is to make learning my utmost priority. To eat, sleep, and drink it as you put it.</p>
</div>",1578950585.0,,False,feanicc,True,t3_eo9axv,t1_feaifaf,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/feanicc/,0,False,1,False,eo9axv,Cplusplus,t5_2qh6x
81,Gunslinging_Gamer,Remove your email address as bots might skim this. PM it in future for safety.,"<div class=""md""><p>Remove your email address as bots might skim this. PM it in future for safety.</p>
</div>",1579011578.0,,False,fedhegw,False,t3_eo9axv,t1_fecz1a1,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/fedhegw/,0,False,2,False,eo9axv,Cplusplus,t5_2qh6x
82,CryMeAn0cean,will do!,"<div class=""md""><p>will do!</p>
</div>",1578998912.0,,False,fed4tvu,True,t3_eo9axv,t1_fecz1a1,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/fed4tvu/,0,False,1,False,eo9axv,Cplusplus,t5_2qh6x
83,Gunslinging_Gamer,"Fun things. I self studied with P&P; it's a fantastic book.

Try making a text changer or something that draws funny pictures in ASCII. Write and read as much code as you can. It's an amazing world.","<div class=""md""><p>Fun things. I self studied with P&amp;P; it&#39;s a fantastic book.</p>

<p>Try making a text changer or something that draws funny pictures in ASCII. Write and read as much code as you can. It&#39;s an amazing world.</p>
</div>",1579011723.0,,False,fedhlgk,False,t3_eo9axv,t1_feagau3,/r/Cplusplus/comments/eo9axv/advice_for_beginner_programmers_to_learn_basics/fedhlgk/,0,False,1,False,eo9axv,Cplusplus,t5_2qh6x
84,TacticalTurban,Don't tell me what to do!,"<div class=""md""><p>Don&#39;t tell me what to do!</p>
</div>",1499820290.0,,False,dk3kb45,False,t3_6mpqhe,t3_6mpqhe,/r/Cplusplus/comments/6mpqhe/testing_dont_upvote/dk3kb45/,1,False,25,False,6mpqhe,Cplusplus,t5_2qh6x
85,,Rage against the compiler!,"<div class=""md""><p>Rage against the compiler!</p>
</div>",1499834699.0,,False,dk3uivn,False,t3_6mpqhe,t3_6mpqhe,/r/Cplusplus/comments/6mpqhe/testing_dont_upvote/dk3uivn/,0,False,10,False,6mpqhe,Cplusplus,t5_2qh6x
86,DuHastMix,/r/test ,"<div class=""md""><p><a href=""/r/test"">/r/test</a> </p>
</div>",1499866249.0,,False,dk496we,False,t3_6mpqhe,t3_6mpqhe,/r/Cplusplus/comments/6mpqhe/testing_dont_upvote/dk496we/,0,False,8,False,6mpqhe,Cplusplus,t5_2qh6x
87,,"##I upvoted.


(•_•) / ( •_•)>⌐■-■ / (⌐■_■)","<div class=""md""><h2>I upvoted.</h2>

<p>(•_•) / ( •_•)&gt;⌐■-■ / (⌐■_■)</p>
</div>",1499818509.0,,False,dk3iy0u,False,t3_6mpqhe,t3_6mpqhe,/r/Cplusplus/comments/6mpqhe/testing_dont_upvote/dk3iy0u/,0,False,14,False,6mpqhe,Cplusplus,t5_2qh6x
88,flarn2006,"Aiming to become the next /u/qgyh2, are you?","<div class=""md""><p>Aiming to become the next <a href=""/u/qgyh2"">/u/qgyh2</a>, are you?</p>
</div>",1499820180.0,,False,dk3k874,False,t3_6mpqhe,t3_6mpqhe,/r/Cplusplus/comments/6mpqhe/testing_dont_upvote/dk3k874/,1,False,2,False,6mpqhe,Cplusplus,t5_2qh6x
89,__nullptr_t,You're not my boss !,"<div class=""md""><p>You&#39;re not my boss !</p>
</div>",1499862551.0,,False,dk46pu2,False,t3_6mpqhe,t3_6mpqhe,/r/Cplusplus/comments/6mpqhe/testing_dont_upvote/dk46pu2/,1,False,2,False,6mpqhe,Cplusplus,t5_2qh6x
90,timjstewart,"@After
public void tearDown()
{
    // TODO: delete reddit post :)
}","<div class=""md""><p>@After
public void tearDown()
{
    // TODO: delete reddit post :)
}</p>
</div>",1499987264.0,,False,dk6uemj,False,t3_6mpqhe,t3_6mpqhe,/r/Cplusplus/comments/6mpqhe/testing_dont_upvote/dk6uemj/,0,False,2,False,6mpqhe,Cplusplus,t5_2qh6x
91,ChiengBang,"My bad, please accept my upvote!","<div class=""md""><p>My bad, please accept my upvote!</p>
</div>",1499830624.0,,False,dk3rynl,True,t3_6mpqhe,t1_dk3kb45,/r/Cplusplus/comments/6mpqhe/testing_dont_upvote/dk3rynl/,0,False,12,False,6mpqhe,Cplusplus,t5_2qh6x
92,ChiengBang,"Haha no, but thank you for the upvote! 

Just wanted to make sure that the text is in code :)","<div class=""md""><p>Haha no, but thank you for the upvote! </p>

<p>Just wanted to make sure that the text is in code :)</p>
</div>",1499830611.0,,False,dk3ryck,True,t3_6mpqhe,t1_dk3k874,/r/Cplusplus/comments/6mpqhe/testing_dont_upvote/dk3ryck/,0,False,2,False,6mpqhe,Cplusplus,t5_2qh6x
93,ChiengBang,"No, but I'd like to be ;)","<div class=""md""><p>No, but I&#39;d like to be ;)</p>
</div>",1499898824.0,,False,dk53ja5,True,t3_6mpqhe,t1_dk46pu2,/r/Cplusplus/comments/6mpqhe/testing_dont_upvote/dk53ja5/,1,False,1,False,6mpqhe,Cplusplus,t5_2qh6x
94,IdiotOfThings,[I want to watch ;)](http://i.imgur.com/RlrAiOG.gif),"<div class=""md""><p><a href=""http://i.imgur.com/RlrAiOG.gif"">I want to watch ;)</a></p>
</div>",1500003635.0,,False,dk76cvh,False,t3_6mpqhe,t1_dk53ja5,/r/Cplusplus/comments/6mpqhe/testing_dont_upvote/dk76cvh/,0,False,2,False,6mpqhe,Cplusplus,t5_2qh6x
95,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1598568180.0,,False,g32oskk,False,t3_ihraxm,t3_ihraxm,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g32oskk/,2,False,10,False,ihraxm,Cplusplus,t5_2qh6x
96,Sqeaky,"You said to be brutal. I won't sugar coat anything, but I mean no malice here.

You have an empty README, so how would I know what the main file is if you hadn't told me in the original post? I have no clue how to use this, so I just need to read how it is used from the unit tests.

Where are the Unit tests? How can I check the build worked on my system? It is quite often that software builds on a slightly different machine then fails to work at runtime because of something unforseen.

You only have vs studio project. I can't build the project. CMake has sort of became a de-facto standard and it makes the platform/compiler switch easy. It can even make vs studio project files. If you don't like CMake there are other meta build tools. Consider looking at Jason Turner's CMake quick start which provides a future set of tools and packages to get you running quick.

You have no license file so I have no clue if you will sue me if I use this.

In DOOMlib.h on line 42 there is a function:

    int32_t LoadWAD(const std::string pathToWAD);

That return value, is it an error code been a while since I have seen those in production? A file size? If it is an error code are they 0 pass or 0 fail error codes? If it is error code, why not exceptions or return a std::optional<SomethingUseful>? If you used exceptions you could return a handle, like a shared_ptr to the loaded object.

The argument could be a std::filesystem::path and potentially reduce errors. This one is minor people are typically comfortable with paths in strings and not using std::fs::path increase compatibility with older compilers. Why make a copy of the parameter should it be a const&?

Is this function safe to call multiple times? If so does it overwrite the previous loaded WAD or does this class store two? Docs could tell me, but the class could be structured so it is hard to use incorrectly and the docs wouldn't need to be referenced as often.

Wait, why doesn't the constructor take the parameter? That would make it really hard to misuse the class.

Now onto the the DOOMlib.cpp, and the same function.

I have a strong stylistic preference to use exceptions and this code is a great demonstration why. Those error codes can (and will) be ignored, and whether or not it is your fault your users will blame you. Expect a bug tracker full of idiots ignoring return codes. An exception can't be ignored if not caught the program terminates reliably. Ignoring the error code would be harder with [[nodiscard]], but it will still happen. Finally, you can't move loading this data to the constructor if you use error codes, the error codes get in the way of making the class easier to use correctly.

I would make a DOOMlibException class and derive 3 small exception classes and throw them on the 3 kinds of load errors you have. It is likely to make the code have fewer branches and nominally faster on the CPU, not that it matters loading files is almost always IO bound.

Those return values could just as easily be bools. They don't let the caller reason about the error at all. If you must retain int error codes, use the whole range have different errors return values. You can even get crafty about the binary format of the int and things like assign IO errors to one bit, LumpMap parsing to another, etc... You could also make a DOOMErrorCode class and you could use operator(bool) to retain the same if style/semantics but then you would clearly convey what that return is. A custom class would also prevent typos and some errors, adding two error codes would become a compilation failure not a hard to debug runtime failure.

The parameter to the LoadWAD function could be a const reference so it wouldn't need to be copied just to be passed into another function.

Is this the kind of feedback you are looking for? You are clearly skilled in the mystical arts of C so maybe this OOP stuff is weird and you just want C with classes, if so I will buzz off. Otherwise, I could read a bit more and keep it coming.","<div class=""md""><p>You said to be brutal. I won&#39;t sugar coat anything, but I mean no malice here.</p>

<p>You have an empty README, so how would I know what the main file is if you hadn&#39;t told me in the original post? I have no clue how to use this, so I just need to read how it is used from the unit tests.</p>

<p>Where are the Unit tests? How can I check the build worked on my system? It is quite often that software builds on a slightly different machine then fails to work at runtime because of something unforseen.</p>

<p>You only have vs studio project. I can&#39;t build the project. CMake has sort of became a de-facto standard and it makes the platform/compiler switch easy. It can even make vs studio project files. If you don&#39;t like CMake there are other meta build tools. Consider looking at Jason Turner&#39;s CMake quick start which provides a future set of tools and packages to get you running quick.</p>

<p>You have no license file so I have no clue if you will sue me if I use this.</p>

<p>In DOOMlib.h on line 42 there is a function:</p>

<pre><code>int32_t LoadWAD(const std::string pathToWAD);
</code></pre>

<p>That return value, is it an error code been a while since I have seen those in production? A file size? If it is an error code are they 0 pass or 0 fail error codes? If it is error code, why not exceptions or return a std::optional&lt;SomethingUseful&gt;? If you used exceptions you could return a handle, like a shared_ptr to the loaded object.</p>

<p>The argument could be a std::filesystem::path and potentially reduce errors. This one is minor people are typically comfortable with paths in strings and not using std::fs::path increase compatibility with older compilers. Why make a copy of the parameter should it be a const&amp;?</p>

<p>Is this function safe to call multiple times? If so does it overwrite the previous loaded WAD or does this class store two? Docs could tell me, but the class could be structured so it is hard to use incorrectly and the docs wouldn&#39;t need to be referenced as often.</p>

<p>Wait, why doesn&#39;t the constructor take the parameter? That would make it really hard to misuse the class.</p>

<p>Now onto the the DOOMlib.cpp, and the same function.</p>

<p>I have a strong stylistic preference to use exceptions and this code is a great demonstration why. Those error codes can (and will) be ignored, and whether or not it is your fault your users will blame you. Expect a bug tracker full of idiots ignoring return codes. An exception can&#39;t be ignored if not caught the program terminates reliably. Ignoring the error code would be harder with [[nodiscard]], but it will still happen. Finally, you can&#39;t move loading this data to the constructor if you use error codes, the error codes get in the way of making the class easier to use correctly.</p>

<p>I would make a DOOMlibException class and derive 3 small exception classes and throw them on the 3 kinds of load errors you have. It is likely to make the code have fewer branches and nominally faster on the CPU, not that it matters loading files is almost always IO bound.</p>

<p>Those return values could just as easily be bools. They don&#39;t let the caller reason about the error at all. If you must retain int error codes, use the whole range have different errors return values. You can even get crafty about the binary format of the int and things like assign IO errors to one bit, LumpMap parsing to another, etc... You could also make a DOOMErrorCode class and you could use operator(bool) to retain the same if style/semantics but then you would clearly convey what that return is. A custom class would also prevent typos and some errors, adding two error codes would become a compilation failure not a hard to debug runtime failure.</p>

<p>The parameter to the LoadWAD function could be a const reference so it wouldn&#39;t need to be copied just to be passed into another function.</p>

<p>Is this the kind of feedback you are looking for? You are clearly skilled in the mystical arts of C so maybe this OOP stuff is weird and you just want C with classes, if so I will buzz off. Otherwise, I could read a bit more and keep it coming.</p>
</div>",1598575753.0,,False,g332upi,False,t3_ihraxm,t3_ihraxm,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g332upi/,2,False,10,False,ihraxm,Cplusplus,t5_2qh6x
97,Sqeaky,"Per your earlier request, I am back for more. I have seen no new updates in the repos, not surprising the last update was January, so I bet you have some good stuff brewing. Also, warning this is raw, I have not proofread it.

In the absence of Docs, Tests, Builds, the next place I thought to look for information was logs.  


So I am starting with the logger. Inside Log,h there is a single function \`e\`. It checks for an error and sends that to the console output if non-zero. then returns the error code. This appears to be done to allow the \`e\` function to be used inline with other checks and make the name hard to forget. In the presence of error codes that makes sense, but documentation would be nice.

Again, with exceptions this wouldn't be required, the error string could be at the error location, not the receiver of the error. This function should be marked \`\[\[no\_discard\]\]\` because error codes shouldn't be discard implicitly, ever. If you need to discard error codes explicitly create a function that accepts them called \`swallow\_error\` that returns the passed value without no\_discard.  


This function could send the message to \`std::cerr\` or \`std::clog\` instead. This would allow the secondary output stream on the command line to stream this correctly.  


Finally, you might consider using a real logging library. It is generally a good design pattern to have an asynchronous logger. Any thread can call a log function, this function is generally thread safe, captures the time and accepts a level for the message and a message. It puts these in a threadsafe queue where a logger thread will come along and do the right thing with all of these.  A good logging library will also make sure that all the logs are flushed in the event of an abnormal shutdown.  


I am going to presume that that load file member function in DOOMlib.cpp is still the main entry point. This calls LoadBinaryFile which is on line 1077. The first thing this does is to clear the storage of the byte from a possible previous file. If this were only done on construction This could be avoided. Also there is a constructor for std::vector that accepts a size. On line 1087 the size of the file is determined and this could be used to construct and allocated the std::vector all in one go.  I like your following use of reserve.

I presumed you used reinterpret case on line 1096 as it works on your system. I suspect this would fail on a system with a different endianness. I presume you are using Windows on x64 but even if you don't want to use Linux or Mac OS on ARM there is a windows for arm and the byte order will bite you on these systems. You might scan an flip all the bytes here or you might  save the bytes in their local order by using decltype to get the appropriate type for m\_wadBytes. None of these are major, perhaps you will never support this on phones or Raspberry Pis.

So I am reading on and starting to read the lump map loading, which loads the header, and I am seeing \`ReadString\`. It returns nothing, but then accepts a bunch of params by mutable reference. This happens sometimes for larger mutable objects, but why do this when the primary return mechanism hasn't been used yet? Why no return the a string read from the file? Returning a std::pair with the found string and the new offset would work just fine, and will never surprise callers. Mutating the input can surprise callers because there is no indication at the call site that the inputs are to be mutated.

Back to the header loading. The first string being loaded is \`m\_header.type\`. Not cool to use \`type\` as a name. It isn't a reserved word here, but is in some other languages. Perhaps name or something slightly longer might be better, but this is just a nit.

I haven't ever seen \`std::string::compare\` in the wild. The \`operator==\` is well supported on std::strings is idiomatic and might better communicate to another developer what you are checking for (equality) to another developer, no need to spaceship it (lookup operator<=>) if you only care about one value. This works, this is just a means you might communicate intent.

Here you have some debug output that is removed with and ifdef. This works and results in ideal performance in the release binaries. You could change this at runtime and without rebuilding if you used a log library. Most log libraries have a few levels, often Trace (for analyzing every function call), debug (for finding bugs and useless to end user), info (for useful data that probably ought to be off by default but might make sense to an end user), warn(for things that might be errors but are recoverable), and error/fatal (for errors that can't be recovered from).

The output on line 1235 could easily be a range based for loop. please see: [https://en.cppreference.com/w/cpp/language/range-for](https://en.cppreference.com/w/cpp/language/range-for)

This construct just has less boilerplate so bugs are more difficult to write.

Reading on I am seeing that needs to scan the byte range for a name. It seems like the format of the wad file is complex enough to warrant tokenizing prior to parsing. In-situ parsing isn't hard to do when the whole data fits in memory either. 

This may be unreasonable, but maybe it would be possible to scan the byte for any structure of note. You would tag these with iterators and using \`std::stringview\` instances or other iterator pairs to avoid copies entirely. You could keep an std::map or std::unordered\_map to related names to important token. These two containers use red/black trees(map) vs hash table(unordered\_map) both have similar interface on smaller datasets the map can be faster and on larger data set the unordered map is faster.

You could even have two of these one for generic iterator pairs and another for stringviews so you will need to use fewer casts. If you would like an example of doing this you can checkout RapidJSON or PugiXML or pretty much and fast In-Situ parser. It would remove the extra copies you are making for these std::strings.

This isn't is nearly done, but I am out of time, so I must go. I hope the best for you.","<div class=""md""><p>Per your earlier request, I am back for more. I have seen no new updates in the repos, not surprising the last update was January, so I bet you have some good stuff brewing. Also, warning this is raw, I have not proofread it.</p>

<p>In the absence of Docs, Tests, Builds, the next place I thought to look for information was logs.  </p>

<p>So I am starting with the logger. Inside Log,h there is a single function `e`. It checks for an error and sends that to the console output if non-zero. then returns the error code. This appears to be done to allow the `e` function to be used inline with other checks and make the name hard to forget. In the presence of error codes that makes sense, but documentation would be nice.</p>

<p>Again, with exceptions this wouldn&#39;t be required, the error string could be at the error location, not the receiver of the error. This function should be marked `[[no_discard]]` because error codes shouldn&#39;t be discard implicitly, ever. If you need to discard error codes explicitly create a function that accepts them called `swallow_error` that returns the passed value without no_discard.  </p>

<p>This function could send the message to `std::cerr` or `std::clog` instead. This would allow the secondary output stream on the command line to stream this correctly.  </p>

<p>Finally, you might consider using a real logging library. It is generally a good design pattern to have an asynchronous logger. Any thread can call a log function, this function is generally thread safe, captures the time and accepts a level for the message and a message. It puts these in a threadsafe queue where a logger thread will come along and do the right thing with all of these.  A good logging library will also make sure that all the logs are flushed in the event of an abnormal shutdown.  </p>

<p>I am going to presume that that load file member function in DOOMlib.cpp is still the main entry point. This calls LoadBinaryFile which is on line 1077. The first thing this does is to clear the storage of the byte from a possible previous file. If this were only done on construction This could be avoided. Also there is a constructor for std::vector that accepts a size. On line 1087 the size of the file is determined and this could be used to construct and allocated the std::vector all in one go.  I like your following use of reserve.</p>

<p>I presumed you used reinterpret case on line 1096 as it works on your system. I suspect this would fail on a system with a different endianness. I presume you are using Windows on x64 but even if you don&#39;t want to use Linux or Mac OS on ARM there is a windows for arm and the byte order will bite you on these systems. You might scan an flip all the bytes here or you might  save the bytes in their local order by using decltype to get the appropriate type for m_wadBytes. None of these are major, perhaps you will never support this on phones or Raspberry Pis.</p>

<p>So I am reading on and starting to read the lump map loading, which loads the header, and I am seeing `ReadString`. It returns nothing, but then accepts a bunch of params by mutable reference. This happens sometimes for larger mutable objects, but why do this when the primary return mechanism hasn&#39;t been used yet? Why no return the a string read from the file? Returning a std::pair with the found string and the new offset would work just fine, and will never surprise callers. Mutating the input can surprise callers because there is no indication at the call site that the inputs are to be mutated.</p>

<p>Back to the header loading. The first string being loaded is `m_header.type`. Not cool to use `type` as a name. It isn&#39;t a reserved word here, but is in some other languages. Perhaps name or something slightly longer might be better, but this is just a nit.</p>

<p>I haven&#39;t ever seen `std::string::compare` in the wild. The `operator==` is well supported on std::strings is idiomatic and might better communicate to another developer what you are checking for (equality) to another developer, no need to spaceship it (lookup operator&lt;=&gt;) if you only care about one value. This works, this is just a means you might communicate intent.</p>

<p>Here you have some debug output that is removed with and ifdef. This works and results in ideal performance in the release binaries. You could change this at runtime and without rebuilding if you used a log library. Most log libraries have a few levels, often Trace (for analyzing every function call), debug (for finding bugs and useless to end user), info (for useful data that probably ought to be off by default but might make sense to an end user), warn(for things that might be errors but are recoverable), and error/fatal (for errors that can&#39;t be recovered from).</p>

<p>The output on line 1235 could easily be a range based for loop. please see: <a href=""https://en.cppreference.com/w/cpp/language/range-for"">https://en.cppreference.com/w/cpp/language/range-for</a></p>

<p>This construct just has less boilerplate so bugs are more difficult to write.</p>

<p>Reading on I am seeing that needs to scan the byte range for a name. It seems like the format of the wad file is complex enough to warrant tokenizing prior to parsing. In-situ parsing isn&#39;t hard to do when the whole data fits in memory either. </p>

<p>This may be unreasonable, but maybe it would be possible to scan the byte for any structure of note. You would tag these with iterators and using `std::stringview` instances or other iterator pairs to avoid copies entirely. You could keep an std::map or std::unordered_map to related names to important token. These two containers use red/black trees(map) vs hash table(unordered_map) both have similar interface on smaller datasets the map can be faster and on larger data set the unordered map is faster.</p>

<p>You could even have two of these one for generic iterator pairs and another for stringviews so you will need to use fewer casts. If you would like an example of doing this you can checkout RapidJSON or PugiXML or pretty much and fast In-Situ parser. It would remove the extra copies you are making for these std::strings.</p>

<p>This isn&#39;t is nearly done, but I am out of time, so I must go. I hope the best for you.</p>
</div>",1598846386.0,,False,g3flt4v,False,t3_ihraxm,t3_ihraxm,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3flt4v/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
98,CarloWood,"It is hard for me to scan (and comment) code that isn't using the coding style that I'm used to... So, all my comments would purely be about style, like: don't indent code inside a namespace, add '// namespace foo' after every closing brace of a namespace. Put all qualifiers to the right of the type they work on (most notably `const`), etc...

    namespace DOOMLib {

    class DOOMLib
    {
     public:
      DOOMLib(); 
      ~DOOMLib();

      int32_t LoadWAD(std::string pathToWAD);
      int32_t LoadMission(std::string missionName);

      WADColormap const& GetColormap() const;
      WADPalettes const& GetPalettes() const;
...

    };

    } // namespace DOOMLib

Ok, an actual thing: if you declare a variable `constexpr` then it makes no sense to also add `const` because that is implied then. ie `constexpr const float foo = ...;` should be `constexpr float foo = ...;`","<div class=""md""><p>It is hard for me to scan (and comment) code that isn&#39;t using the coding style that I&#39;m used to... So, all my comments would purely be about style, like: don&#39;t indent code inside a namespace, add &#39;// namespace foo&#39; after every closing brace of a namespace. Put all qualifiers to the right of the type they work on (most notably <code>const</code>), etc...</p>

<pre><code>namespace DOOMLib {

class DOOMLib
{
 public:
  DOOMLib(); 
  ~DOOMLib();

  int32_t LoadWAD(std::string pathToWAD);
  int32_t LoadMission(std::string missionName);

  WADColormap const&amp; GetColormap() const;
  WADPalettes const&amp; GetPalettes() const;
</code></pre>

<p>...</p>

<pre><code>};

} // namespace DOOMLib
</code></pre>

<p>Ok, an actual thing: if you declare a variable <code>constexpr</code> then it makes no sense to also add <code>const</code> because that is implied then. ie <code>constexpr const float foo = ...;</code> should be <code>constexpr float foo = ...;</code></p>
</div>",1598568382.0,,1598569782.0,g32p62h,False,t3_ihraxm,t3_ihraxm,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g32p62h/,1,False,3,False,ihraxm,Cplusplus,t5_2qh6x
99,CarloWood,"I am aware of that, but I only read reddit when laying on my back on the couch, using a tablet :p.","<div class=""md""><p>I am aware of that, but I only read reddit when laying on my back on the couch, using a tablet :p.</p>
</div>",1598780715.0,,False,g3c6crg,False,t3_ihraxm,t3_ihraxm,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3c6crg/,0,False,1,False,ihraxm,Cplusplus,t5_2qh6x
100,DOOMReboot,">I’d split it into more files

Does that mean keep one header, but break up implementations into different files?

>I’d also split the functions

I can agree with that in some places.  But will that not hurt performance due to push/pops? Particularly if the compiler doesn't inline?","<div class=""md""><blockquote>
<p>I’d split it into more files</p>
</blockquote>

<p>Does that mean keep one header, but break up implementations into different files?</p>

<blockquote>
<p>I’d also split the functions</p>
</blockquote>

<p>I can agree with that in some places.  But will that not hurt performance due to push/pops? Particularly if the compiler doesn&#39;t inline?</p>
</div>",1598598631.0,,False,g341t75,True,t3_ihraxm,t1_g32oskk,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g341t75/,0,False,1,False,ihraxm,Cplusplus,t5_2qh6x
101,CarloWood,"I have files of a few thousand lines long. As long as all of it belongs to a single class, I don't see a problem with that?
Also, splitting functions for the sake of making each function shorter seems a strange reason. I wouldn't split a long function into a part A and a part B when part B is only ever going to be called by part A and only once? Adding a lot of comments to explain what is going on in a function makes more sense. Initializing variables with = on the same line as where they are constructed won't call the assignment operator, it is virtually the same as using () or {}. I use all three styles depending on the context (sometimes you MUST use { }, but certainly not always).","<div class=""md""><p>I have files of a few thousand lines long. As long as all of it belongs to a single class, I don&#39;t see a problem with that?
Also, splitting functions for the sake of making each function shorter seems a strange reason. I wouldn&#39;t split a long function into a part A and a part B when part B is only ever going to be called by part A and only once? Adding a lot of comments to explain what is going on in a function makes more sense. Initializing variables with = on the same line as where they are constructed won&#39;t call the assignment operator, it is virtually the same as using () or {}. I use all three styles depending on the context (sometimes you MUST use { }, but certainly not always).</p>
</div>",1598569414.0,,False,g32r4a5,False,t3_ihraxm,t1_g32oskk,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g32r4a5/,1,False,1,False,ihraxm,Cplusplus,t5_2qh6x
102,DOOMReboot,"Wow. Fantastic feedback. It will take me some time to wrap my head around all of it, but implementing the changes will definitely help me on my way from C with Classes to modern C++.  

Btw: I'm not crying yet, so keep it coming! (If you don't mind of course.)  I'm quite eager to learn more.","<div class=""md""><p>Wow. Fantastic feedback. It will take me some time to wrap my head around all of it, but implementing the changes will definitely help me on my way from C with Classes to modern C++.  </p>

<p>Btw: I&#39;m not crying yet, so keep it coming! (If you don&#39;t mind of course.)  I&#39;m quite eager to learn more.</p>
</div>",1598594915.0,,False,g33xmbc,True,t3_ihraxm,t1_g332upi,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g33xmbc/,1,False,6,False,ihraxm,Cplusplus,t5_2qh6x
103,climateimpact827,"> Jason Turner's CMake quick start 

Just wondering, are you talking about this video or is there more that I was unable to find?

https://www.youtube.com/watch?v=YbgH7yat-Jo","<div class=""md""><blockquote>
<p>Jason Turner&#39;s CMake quick start </p>
</blockquote>

<p>Just wondering, are you talking about this video or is there more that I was unable to find?</p>

<p><a href=""https://www.youtube.com/watch?v=YbgH7yat-Jo"">https://www.youtube.com/watch?v=YbgH7yat-Jo</a></p>
</div>",1599063592.0,,False,g3qgsko,False,t3_ihraxm,t1_g332upi,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3qgsko/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
104,DOOMReboot,"I'm still here! Thanks for all this goodness. I've been busy with work and haven't had a chance yet to peruse it yet, but will do so ASAP.","<div class=""md""><p>I&#39;m still here! Thanks for all this goodness. I&#39;ve been busy with work and haven&#39;t had a chance yet to peruse it yet, but will do so ASAP.</p>
</div>",1599063061.0,,False,g3qffmt,True,t3_ihraxm,t1_g3flt4v,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3qffmt/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
105,The_hollow_Nike,"While I can understand getting used to a style and also enforcing it in your (shared) projects, it should not limit to reading code in that style only. If it really does, just check it out locally and let [clang-fromat](https://clang.llvm.org/docs/ClangFormat.html) run over it and voilà it is in the style you are used to.

Many common styles have [handily available `.clang-format` files](https://clang.llvm.org/docs/ClangFormatStyleOptions.html#configurable-format-style-options), but you can also write your own.

If you work with a git project that uses another style you can define the formatting as a post-checkout and pre-commit hook, so that you never have to look at the other format if you do not want to.

There are bindings for [Visual Studio](https://marketplace.visualstudio.com/items?itemName=LLVMExtensions.ClangFormat), [CLion](https://www.jetbrains.com/help/clion/clangformat-as-alternative-formatter.html) and [completely without](https://github.com/Sarcasm/run-clang-format).

I agree that consistent style is important, but most of the work to have it can be automated.

Edit: Grammar","<div class=""md""><p>While I can understand getting used to a style and also enforcing it in your (shared) projects, it should not limit to reading code in that style only. If it really does, just check it out locally and let <a href=""https://clang.llvm.org/docs/ClangFormat.html"">clang-fromat</a> run over it and voilà it is in the style you are used to.</p>

<p>Many common styles have <a href=""https://clang.llvm.org/docs/ClangFormatStyleOptions.html#configurable-format-style-options"">handily available <code>.clang-format</code> files</a>, but you can also write your own.</p>

<p>If you work with a git project that uses another style you can define the formatting as a post-checkout and pre-commit hook, so that you never have to look at the other format if you do not want to.</p>

<p>There are bindings for <a href=""https://marketplace.visualstudio.com/items?itemName=LLVMExtensions.ClangFormat"">Visual Studio</a>, <a href=""https://www.jetbrains.com/help/clion/clangformat-as-alternative-formatter.html"">CLion</a> and <a href=""https://github.com/Sarcasm/run-clang-format"">completely without</a>.</p>

<p>I agree that consistent style is important, but most of the work to have it can be automated.</p>

<p>Edit: Grammar</p>
</div>",1598693592.0,,False,g3862sy,False,t3_ihraxm,t1_g32p62h,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3862sy/,0,False,1,False,ihraxm,Cplusplus,t5_2qh6x
106,Sqeaky,"The shorter something is the less there is to reason about. Some things are going to need to be longer, but most functions can be really short and all functions should be as short as reasonable. This reduces the space for bugs and makes it easier to write unit tests for each function. Even a 20 line function with a few nested ifs could need a dozen tests to get branch coverage and that isn't considering corner cases.

Comments can be useful, but if you are doing this often then it is likely you could have better and more numerous symbol names. I would argue that unit test are better documents. You can name them and since they break the build if they go out date they must be updated, comments can become stale. If you are building an API then Doxygen comments do make a ton of sense.

As for a thousand line class... I have several projects with hundreds of classes. Sometimes it does happen that a single responsibility takes 1000 lines, but it isn't very common. A class that too large is probably doing too many things. The single responsibility principle is a good rule in most software development contexts, again smaller classes are easier to test and easier to combine into larger units meaningfully.","<div class=""md""><p>The shorter something is the less there is to reason about. Some things are going to need to be longer, but most functions can be really short and all functions should be as short as reasonable. This reduces the space for bugs and makes it easier to write unit tests for each function. Even a 20 line function with a few nested ifs could need a dozen tests to get branch coverage and that isn&#39;t considering corner cases.</p>

<p>Comments can be useful, but if you are doing this often then it is likely you could have better and more numerous symbol names. I would argue that unit test are better documents. You can name them and since they break the build if they go out date they must be updated, comments can become stale. If you are building an API then Doxygen comments do make a ton of sense.</p>

<p>As for a thousand line class... I have several projects with hundreds of classes. Sometimes it does happen that a single responsibility takes 1000 lines, but it isn&#39;t very common. A class that too large is probably doing too many things. The single responsibility principle is a good rule in most software development contexts, again smaller classes are easier to test and easier to combine into larger units meaningfully.</p>
</div>",1598571158.0,,False,g32ucc0,False,t3_ihraxm,t1_g32r4a5,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g32ucc0/,1,False,8,False,ihraxm,Cplusplus,t5_2qh6x
107,Sqeaky,"You might want to consider watching some Conference videos or newer books on class design.

I will read some more of the code over the weekend.","<div class=""md""><p>You might want to consider watching some Conference videos or newer books on class design.</p>

<p>I will read some more of the code over the weekend.</p>
</div>",1598595831.0,,False,g33yowb,False,t3_ihraxm,t1_g33xmbc,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g33yowb/,0,False,3,False,ihraxm,Cplusplus,t5_2qh6x
108,Sqeaky,"That is the correct Jason Turner, but he uses the handle Lefticus in many places. Here is the starter project: https://github.com/lefticus/cpp_starter_project

I haven't personally used it. I have another starter  project I use that ties into a corporate package manager. I have seen several of his videos where he uses it and starts by trimming bits he thinks he won't need, like his creating a game video series.","<div class=""md""><p>That is the correct Jason Turner, but he uses the handle Lefticus in many places. Here is the starter project: <a href=""https://github.com/lefticus/cpp_starter_project"">https://github.com/lefticus/cpp_starter_project</a></p>

<p>I haven&#39;t personally used it. I have another starter  project I use that ties into a corporate package manager. I have seen several of his videos where he uses it and starts by trimming bits he thinks he won&#39;t need, like his creating a game video series.</p>
</div>",1599066253.0,,False,g3qnnt4,False,t3_ihraxm,t1_g3qgsko,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3qnnt4/,0,False,1,False,ihraxm,Cplusplus,t5_2qh6x
109,Sqeaky,"You are all good. Perhaps start a new thread when you have a PR, invite people to make comments on the code. Could be a good discussion.","<div class=""md""><p>You are all good. Perhaps start a new thread when you have a PR, invite people to make comments on the code. Could be a good discussion.</p>
</div>",1599067827.0,,False,g3qrtke,False,t3_ihraxm,t1_g3qffmt,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3qrtke/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
110,CarloWood,"Its hard to argue about this without hard examples. I think that maintainability has more to do with good documentation and variable/function/class names then length of code. While robustness and flexibility are determined by coding practises higher in the hierarchy then size of functions, so much so that the size of a function becomes irrelevant in comparison. So, when talking about how to write robust (and bug free) software, I wouldn't put the emphasis on code size, but on other things that are more important. Of course I agree that in the end a short function is easier to understand and test etc, but to strive for short function merely because of their size seems misguided. With respect of course, don't consider this a personal attack please ;).","<div class=""md""><p>Its hard to argue about this without hard examples. I think that maintainability has more to do with good documentation and variable/function/class names then length of code. While robustness and flexibility are determined by coding practises higher in the hierarchy then size of functions, so much so that the size of a function becomes irrelevant in comparison. So, when talking about how to write robust (and bug free) software, I wouldn&#39;t put the emphasis on code size, but on other things that are more important. Of course I agree that in the end a short function is easier to understand and test etc, but to strive for short function merely because of their size seems misguided. With respect of course, don&#39;t consider this a personal attack please ;).</p>
</div>",1598632356.0,,False,g35dpn9,False,t3_ihraxm,t1_g32ucc0,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g35dpn9/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
111,DOOMReboot,"I started by creating a bullet point list of your suggestions.  Sorted them from those that required the smallest changes up to the largest.

It was overwhelming. : )

I started implementing a few smaller ones.  The ones I was already familiar with how to do.

I worked up up to exceptions which is still towards the bottom of my list and started learning more about C++'s take on them (I've plenty of experience with them from Java) when I realized that I'll basically have to rewrite everything from scratch. (It's why Google doesn't allow any exceptions in their official style guide! Lol)

Same deal with logging, of which libraries I'm not yet familiar enough with. Everything needs to be rewritten. My one question though is if my project even requires advanced logging. The general use is for debugging of course, but the sheer amount of output from DOOMLib for each kind of object is staggering; one would only want to review the debug data for only one specific kind of object at a time as it would otherwise spew over 100mb of text.

For test cases, again I'd want to rewrite the project, but using TDD. Even then, creating a mock WAD file would take an excruciatingly long amount of time. As would mini-mock-WADs.  But, it's something I'd like to really learn (TDD that is).

That's kinda where I'm at right now.","<div class=""md""><p>I started by creating a bullet point list of your suggestions.  Sorted them from those that required the smallest changes up to the largest.</p>

<p>It was overwhelming. : )</p>

<p>I started implementing a few smaller ones.  The ones I was already familiar with how to do.</p>

<p>I worked up up to exceptions which is still towards the bottom of my list and started learning more about C++&#39;s take on them (I&#39;ve plenty of experience with them from Java) when I realized that I&#39;ll basically have to rewrite everything from scratch. (It&#39;s why Google doesn&#39;t allow any exceptions in their official style guide! Lol)</p>

<p>Same deal with logging, of which libraries I&#39;m not yet familiar enough with. Everything needs to be rewritten. My one question though is if my project even requires advanced logging. The general use is for debugging of course, but the sheer amount of output from DOOMLib for each kind of object is staggering; one would only want to review the debug data for only one specific kind of object at a time as it would otherwise spew over 100mb of text.</p>

<p>For test cases, again I&#39;d want to rewrite the project, but using TDD. Even then, creating a mock WAD file would take an excruciatingly long amount of time. As would mini-mock-WADs.  But, it&#39;s something I&#39;d like to really learn (TDD that is).</p>

<p>That&#39;s kinda where I&#39;m at right now.</p>
</div>",1599221065.0,,False,g3z0z9e,True,t3_ihraxm,t1_g3qrtke,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3z0z9e/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
112,Sqeaky,"Of course this isn't attack, it even seems we mostly agree. Perhaps you looked at my comment history and saw how vitriolic I can be to idiots on debate subs. I will leave that there, this sub should only have reasonable people, so I better play nice.

You are clearly are coder with history. I googled your name you were writing about C++ back in 2002 and I saw contributions to Ubuntu too and you back up your comments with well thought reasons.

Despite all the pleasantries and  complimenting, I do disagree with you about the value of short functions and classes. I feel they add significant value, because they encourage other worthwhile practices that long code often ignores.

TLDR, All This below can be summed us as: Small code really is worth it when there aren't other more pressing concerns, because it the most reliable technique for achieving all those other positive things you mentioned.

The thing that originally got me on this was actually a Ruby talk. I was learning Ruby for a new contract. So read books, did exercises, and watched conference talks. Sandi Metz is a brilliant Ruby coder. She came up with a [small list of rules](https://thoughtbot.com/blog/sandi-metz-rules-for-developers) she uses to detect code smells and she acknowledges they aren't perfect some times long. The rules are 100 line max for classes, 5 lines per method, 4 parameter limit, and Controllers should only instantiate one object. I wasn't writing rails apps at the time so I ignored that one for a while. But I saw dozens of conference talk videos by many intelligent speakers some of whom reference this. I watched talks on refactoring, some doing it live explaining their thought process. When I got to the real work and was proficient enough to succeed at the job.

I tried writing code for this contract both ways: The way I used to code, which sounds closer to what you describe, and the way Sandi and dozens of these leading Rubyists suggested. Those rules served as great heuristics for decomposing problems into collections of single responsibilities. If a class was 150 lines then it was clearly 2 or more responsibilities try to break out. If a method was 7 lines long then clearly it was doing multiple and was universally poorly named. If I passed many parameters, then I realized they should grouped together as a class or a struct because they share something in common which likely hints at another responsibility that could be moved to a new class or the function split into two to two even simply functions.

Eventually, I figured the last rule could be generalized and applied in a wide variety of scenarios. But that is a major digression so I will skip it for now. It descends into the rabbit hole of team expectations and value types. I will expand on this in another comment tomorrow, as I think it is relevant to DOOMLib.

After that contract completed I came back to C++ land for the next one. I tried this new style back here. I found that I made many more files and many more functions. I also wrote much less code in total. When my functions and classes became smaller, they fewer side effects, and were easier to understand so they could easily be completely covered covered by unit tests. Because of how easy any unit was to understand and how \*everything\* had examples of used (in the form of tests), it became extremely easy to compose these items without losing reliability. More surprising to me was that all this extra problem decomposition and code unit composition resulted much less code. As every responsibility was in exactly one place and all the responsibilities were well thought there was less code spent on describing corner cases because there were fewer, handling errors because fewer were possible, marshaling/converting data because this was isolate to classes dedicated to it, and so on. If I had a configuration that was important then that was a class separate from the config file loader which was separate from a configuration entry... and so on for many types and it becomes very hard to have certain any kind of bug the type system can find.

I did adjust the rules as I would follow them. C++ has more type annotation and boilerplate, so I feel that 7\~10 C++ functions aren't a code smell. A few hundred lines or up to a thousand lines is fine for most classes again C++ has many concerns about semantics that Ruby doesn't care about (overloaded functions, template parameters, local type aliases, destructors, lines dedicated to curly brackets, etc...), sometimes even API documentation that get extracted by tools like doxygen, I did tighten the parameter rule because 2 or 3 is generally plenty (as long as we consider an iterator pair one thing). Of course these shouldn't be slavishly followed, there are exceptions, but they are good defaults because in the absence of other concerns these encourage the production of efficient and maintainable code.

If we want concrete examples look at the std lib, nearly all the functions are short and the classes are clearly doing a single thing. Even classes that have tons of functionality are fairly short. I have the file for std::vector open right now, it has a page full of member function none longer than 5 lines where I happen to be. This file is 1800+ lines long and that would concern me in a project I might work on, but here I see that about half is Doxygen style comments, the file has a strict line length limit of 80, and 54 lines of copyright, and a few other classes (\_vector\_base, a temporary value class, and an iterator class). It seems like the implementors of vector agree about short classes and function because these classes are all broken up in a way close to mine and Sandi's heuristics. Consider the very idea of an iterator, it is a separation of a single responsibility, navigating a container, from the container.","<div class=""md""><p>Of course this isn&#39;t attack, it even seems we mostly agree. Perhaps you looked at my comment history and saw how vitriolic I can be to idiots on debate subs. I will leave that there, this sub should only have reasonable people, so I better play nice.</p>

<p>You are clearly are coder with history. I googled your name you were writing about C++ back in 2002 and I saw contributions to Ubuntu too and you back up your comments with well thought reasons.</p>

<p>Despite all the pleasantries and  complimenting, I do disagree with you about the value of short functions and classes. I feel they add significant value, because they encourage other worthwhile practices that long code often ignores.</p>

<p>TLDR, All This below can be summed us as: Small code really is worth it when there aren&#39;t other more pressing concerns, because it the most reliable technique for achieving all those other positive things you mentioned.</p>

<p>The thing that originally got me on this was actually a Ruby talk. I was learning Ruby for a new contract. So read books, did exercises, and watched conference talks. Sandi Metz is a brilliant Ruby coder. She came up with a <a href=""https://thoughtbot.com/blog/sandi-metz-rules-for-developers"">small list of rules</a> she uses to detect code smells and she acknowledges they aren&#39;t perfect some times long. The rules are 100 line max for classes, 5 lines per method, 4 parameter limit, and Controllers should only instantiate one object. I wasn&#39;t writing rails apps at the time so I ignored that one for a while. But I saw dozens of conference talk videos by many intelligent speakers some of whom reference this. I watched talks on refactoring, some doing it live explaining their thought process. When I got to the real work and was proficient enough to succeed at the job.</p>

<p>I tried writing code for this contract both ways: The way I used to code, which sounds closer to what you describe, and the way Sandi and dozens of these leading Rubyists suggested. Those rules served as great heuristics for decomposing problems into collections of single responsibilities. If a class was 150 lines then it was clearly 2 or more responsibilities try to break out. If a method was 7 lines long then clearly it was doing multiple and was universally poorly named. If I passed many parameters, then I realized they should grouped together as a class or a struct because they share something in common which likely hints at another responsibility that could be moved to a new class or the function split into two to two even simply functions.</p>

<p>Eventually, I figured the last rule could be generalized and applied in a wide variety of scenarios. But that is a major digression so I will skip it for now. It descends into the rabbit hole of team expectations and value types. I will expand on this in another comment tomorrow, as I think it is relevant to DOOMLib.</p>

<p>After that contract completed I came back to C++ land for the next one. I tried this new style back here. I found that I made many more files and many more functions. I also wrote much less code in total. When my functions and classes became smaller, they fewer side effects, and were easier to understand so they could easily be completely covered covered by unit tests. Because of how easy any unit was to understand and how *everything* had examples of used (in the form of tests), it became extremely easy to compose these items without losing reliability. More surprising to me was that all this extra problem decomposition and code unit composition resulted much less code. As every responsibility was in exactly one place and all the responsibilities were well thought there was less code spent on describing corner cases because there were fewer, handling errors because fewer were possible, marshaling/converting data because this was isolate to classes dedicated to it, and so on. If I had a configuration that was important then that was a class separate from the config file loader which was separate from a configuration entry... and so on for many types and it becomes very hard to have certain any kind of bug the type system can find.</p>

<p>I did adjust the rules as I would follow them. C++ has more type annotation and boilerplate, so I feel that 7~10 C++ functions aren&#39;t a code smell. A few hundred lines or up to a thousand lines is fine for most classes again C++ has many concerns about semantics that Ruby doesn&#39;t care about (overloaded functions, template parameters, local type aliases, destructors, lines dedicated to curly brackets, etc...), sometimes even API documentation that get extracted by tools like doxygen, I did tighten the parameter rule because 2 or 3 is generally plenty (as long as we consider an iterator pair one thing). Of course these shouldn&#39;t be slavishly followed, there are exceptions, but they are good defaults because in the absence of other concerns these encourage the production of efficient and maintainable code.</p>

<p>If we want concrete examples look at the std lib, nearly all the functions are short and the classes are clearly doing a single thing. Even classes that have tons of functionality are fairly short. I have the file for std::vector open right now, it has a page full of member function none longer than 5 lines where I happen to be. This file is 1800+ lines long and that would concern me in a project I might work on, but here I see that about half is Doxygen style comments, the file has a strict line length limit of 80, and 54 lines of copyright, and a few other classes (_vector_base, a temporary value class, and an iterator class). It seems like the implementors of vector agree about short classes and function because these classes are all broken up in a way close to mine and Sandi&#39;s heuristics. Consider the very idea of an iterator, it is a separation of a single responsibility, navigating a container, from the container.</p>
</div>",1598684808.0,,False,g37xhg6,False,t3_ihraxm,t1_g35dpn9,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g37xhg6/,1,False,1,False,ihraxm,Cplusplus,t5_2qh6x
113,Sqeaky,"TDD is nice, but not a panacea. MSVC and other compilers all support code coverage tools. Write tests, aim for full branch coverage, but accept you may never achieve it. Having that as a goal with an escape will let you try but not waste your time.

Trying TDD can be enlightening and this is a pretty good problem space for it. It isn't great for discovering new algorithms, but solving problems with known algorithms but unknown final structure is pretty much ideal. 

If you do go deep down the TDD route you are likely to create a large number of small objects. This is simple to reason about but might lead to performance issues when making copies. Slower languages like Ruby, Python, Java, and C# avoid performance issues here by passing a huge number of references and leaning hard on the garbage collector to take of of deallocation later. 

A good C++ land example might be the comparison of TinyXml and PugiXML. Both have object oriented APIs and solve the save problem with superficially similar approaches (DOM style XML parsing). Both are fairly easy to use correctly and fairly difficult to use incorrectly. But older TinyXML copies all the data for every XML element, while PugiXML uses in-situ parsing and has an iterator like API or a string span like API. Pugi then goes one further using COW for changes, but that gets crazy complex. If you make one entry point class, a loader class that loads the data and owns it, allocating on construction and deallocating on destruction, then passes out some kind of reference classes for the data you can minimize copies, control you data structure arbitrarily, and construct an API that is easy to reason about and use. You might read up on how std::stringspan works for ideas of your own.

With such a big list of changes you might want to consider reading ""Working Effectively with Legacy Code"" by Feathers. It has practical techniques and seems to me like it will be one for the ages like K&R or the gang of 4 design patterns.

Google does have that exception guideline. They also invented go so they could avoid exceptions and templates, so maybe they are a bit zealous. Exceptions fundamentally change the language. If one doesn't want them I do not think C++ is the right language for the task, one must drop much of the std lib and 3rd party libs, but both Google and EA have done this. They demonstrate it can be done, but the results are hardly idiomatic and it means writing a lot of of error checking boilerplate. Outside of google it seems to have a real performance cost (the EASTL doesn't bench well against other stdlib implementations with exceptions, but then it also to abseil). It is my understanding that their stance started with a time when exceptions hurt performance more than helped. 

Exceptions also have warts, avoid checked exceptions except for no except/throw(), these enable interesting inlining optimizations.

""Test Fixtures"" , are pieces of test data or test systems that exist only to facilitate testing. They can be very valuable. Perhaps you can start with a simple and idiomatic case, is e1m1: hangar a reasonable case? It has few doors a few powerups and is simple case, but might be copyright encumbered.

Another strategy might be to create readers and writers at the same time. If you can write a default empty was an load that then at least it shows that you code won't blow up on empty data. Then you can add a few walls/ rooms and try saving/loading that. 

Good luck. If you want my input more, just keep responding or tag me with u/sqeaky in future threads.","<div class=""md""><p>TDD is nice, but not a panacea. MSVC and other compilers all support code coverage tools. Write tests, aim for full branch coverage, but accept you may never achieve it. Having that as a goal with an escape will let you try but not waste your time.</p>

<p>Trying TDD can be enlightening and this is a pretty good problem space for it. It isn&#39;t great for discovering new algorithms, but solving problems with known algorithms but unknown final structure is pretty much ideal. </p>

<p>If you do go deep down the TDD route you are likely to create a large number of small objects. This is simple to reason about but might lead to performance issues when making copies. Slower languages like Ruby, Python, Java, and C# avoid performance issues here by passing a huge number of references and leaning hard on the garbage collector to take of of deallocation later. </p>

<p>A good C++ land example might be the comparison of TinyXml and PugiXML. Both have object oriented APIs and solve the save problem with superficially similar approaches (DOM style XML parsing). Both are fairly easy to use correctly and fairly difficult to use incorrectly. But older TinyXML copies all the data for every XML element, while PugiXML uses in-situ parsing and has an iterator like API or a string span like API. Pugi then goes one further using COW for changes, but that gets crazy complex. If you make one entry point class, a loader class that loads the data and owns it, allocating on construction and deallocating on destruction, then passes out some kind of reference classes for the data you can minimize copies, control you data structure arbitrarily, and construct an API that is easy to reason about and use. You might read up on how std::stringspan works for ideas of your own.</p>

<p>With such a big list of changes you might want to consider reading &quot;Working Effectively with Legacy Code&quot; by Feathers. It has practical techniques and seems to me like it will be one for the ages like K&amp;R or the gang of 4 design patterns.</p>

<p>Google does have that exception guideline. They also invented go so they could avoid exceptions and templates, so maybe they are a bit zealous. Exceptions fundamentally change the language. If one doesn&#39;t want them I do not think C++ is the right language for the task, one must drop much of the std lib and 3rd party libs, but both Google and EA have done this. They demonstrate it can be done, but the results are hardly idiomatic and it means writing a lot of of error checking boilerplate. Outside of google it seems to have a real performance cost (the EASTL doesn&#39;t bench well against other stdlib implementations with exceptions, but then it also to abseil). It is my understanding that their stance started with a time when exceptions hurt performance more than helped. </p>

<p>Exceptions also have warts, avoid checked exceptions except for no except/throw(), these enable interesting inlining optimizations.</p>

<p>&quot;Test Fixtures&quot; , are pieces of test data or test systems that exist only to facilitate testing. They can be very valuable. Perhaps you can start with a simple and idiomatic case, is e1m1: hangar a reasonable case? It has few doors a few powerups and is simple case, but might be copyright encumbered.</p>

<p>Another strategy might be to create readers and writers at the same time. If you can write a default empty was an load that then at least it shows that you code won&#39;t blow up on empty data. Then you can add a few walls/ rooms and try saving/loading that. </p>

<p>Good luck. If you want my input more, just keep responding or tag me with <a href=""/u/sqeaky"">u/sqeaky</a> in future threads.</p>
</div>",1599242607.0,,False,g40mpqg,False,t3_ihraxm,t1_g3z0z9e,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g40mpqg/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
114,CarloWood,"Thanks for taking the time to write all this. I read it and do not disagree with anything. Most notably, I totally agree that every class should be doing one thing.. well, meaning that if it is possible to split a single class into two classes then you should absolutely do so. Learning how to write good code is a learning process of many years, which can not easily be captured with a list of simple rules. Of course such rules might serve as guidelines, but if not backed up by experience then a true understanding must be lacking and applying them blindly, without that true understanding, might not achieve the goal that they were written for... Anyway, even though I've been writing C++ code for 27 years now (and C for a decade before that), I am sure I don't write perfect code. If I were to search through my code base for the longest function then I would not be surprised if you could show me how it could be split up to make it easier to test and understand ;). On the other hand, I wrote code that is so incredibly hard that I felt the need to add a comment in all caps saying to never touch this code no matter what because one would almost certainly break it, that code only being about 15 lines of code... That is why I was saying (or thinking?) that the actual size of code isn't the only factor, and in fact, in my opinion, by far not the most important one to stare oneself blind on, if not really understood. With my remark I just wanted to guard a newbie that read this from attaching too much value to a rule, without having the experience to back it up, not achieving the set goal: don't stare yourself blind on line count. The reason good code is split up in many sections comes from somewhere else.","<div class=""md""><p>Thanks for taking the time to write all this. I read it and do not disagree with anything. Most notably, I totally agree that every class should be doing one thing.. well, meaning that if it is possible to split a single class into two classes then you should absolutely do so. Learning how to write good code is a learning process of many years, which can not easily be captured with a list of simple rules. Of course such rules might serve as guidelines, but if not backed up by experience then a true understanding must be lacking and applying them blindly, without that true understanding, might not achieve the goal that they were written for... Anyway, even though I&#39;ve been writing C++ code for 27 years now (and C for a decade before that), I am sure I don&#39;t write perfect code. If I were to search through my code base for the longest function then I would not be surprised if you could show me how it could be split up to make it easier to test and understand ;). On the other hand, I wrote code that is so incredibly hard that I felt the need to add a comment in all caps saying to never touch this code no matter what because one would almost certainly break it, that code only being about 15 lines of code... That is why I was saying (or thinking?) that the actual size of code isn&#39;t the only factor, and in fact, in my opinion, by far not the most important one to stare oneself blind on, if not really understood. With my remark I just wanted to guard a newbie that read this from attaching too much value to a rule, without having the experience to back it up, not achieving the set goal: don&#39;t stare yourself blind on line count. The reason good code is split up in many sections comes from somewhere else.</p>
</div>",1598780461.0,,False,g3c64cd,False,t3_ihraxm,t1_g37xhg6,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3c64cd/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
115,DOOMReboot,"How on earth did you learn so much stuff?  It seems like you've a wide set of knowledge (probably depth, too) where I've seemingly focused more on depth within a narrow range of fields.

In real life, I still use early C++ as opposed to ""modern"" as the companies I've worked for have quite a bit of legacy code to support. I run the whole gamut of test case writing, but have never tried true TDD from the get go. Quite surprised that I haven't come across

>""Working Effectively with Legacy Code"" by Feathers

So I'll definitely give that a go.

As far as using E1M1: Hangar, it's a surprisingly complicated level.  It has the features of most levels, dynamic lighting, platforms, dynamic floors, lifts, doors, switches, secrets, etc. It really is a good subset of all available features. It's an excellent test case, but you're right, the end user will always have to supply their own legal WAD for it to work. I'll likely use existing mod tools to create a simple WAD with my own media content so it can be included with the project. 

Btw, if you want to check out my progress of emulating doom from scratch please check it out here: https://www.twitter.com/DOOMReboot It's nearly finished (nearly equals about one more year's worth of work).

Thanks for all your help and I'll definitely tag you in future DOOM posts.","<div class=""md""><p>How on earth did you learn so much stuff?  It seems like you&#39;ve a wide set of knowledge (probably depth, too) where I&#39;ve seemingly focused more on depth within a narrow range of fields.</p>

<p>In real life, I still use early C++ as opposed to &quot;modern&quot; as the companies I&#39;ve worked for have quite a bit of legacy code to support. I run the whole gamut of test case writing, but have never tried true TDD from the get go. Quite surprised that I haven&#39;t come across</p>

<blockquote>
<p>&quot;Working Effectively with Legacy Code&quot; by Feathers</p>
</blockquote>

<p>So I&#39;ll definitely give that a go.</p>

<p>As far as using E1M1: Hangar, it&#39;s a surprisingly complicated level.  It has the features of most levels, dynamic lighting, platforms, dynamic floors, lifts, doors, switches, secrets, etc. It really is a good subset of all available features. It&#39;s an excellent test case, but you&#39;re right, the end user will always have to supply their own legal WAD for it to work. I&#39;ll likely use existing mod tools to create a simple WAD with my own media content so it can be included with the project. </p>

<p>Btw, if you want to check out my progress of emulating doom from scratch please check it out here: <a href=""https://www.twitter.com/DOOMReboot"">https://www.twitter.com/DOOMReboot</a> It&#39;s nearly finished (nearly equals about one more year&#39;s worth of work).</p>

<p>Thanks for all your help and I&#39;ll definitely tag you in future DOOM posts.</p>
</div>",1599298612.0,,False,g43qsfv,True,t3_ihraxm,t1_g40mpqg,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g43qsfv/,2,False,2,False,ihraxm,Cplusplus,t5_2qh6x
116,Sqeaky,"I see where you are coming, and again I agree with many points. And I acknowledge that you have about a decade more experience than me. I have no dedicated C experience and just a little less C++. I have done a bunch of other languages Ruby, Pascal, javascript, tyoescript, Java, Python, C#, like 10 different basics and others. I see we we are two experts who have walked different paths then I have some detail disagreements.

I think rules are best for newbies. With experience you can learn when it is Okay to discard rules, and when you are new you you don't know even to avoid creating turing tarpits. Even Sandi suggests skipping the rules if everyone agrees in code review.

I would be interested in taking such a challenge. There are pieces of code that shouldn't be shortened, but I find that it is often less than people with stance similar to yours. Feel free to start another thread. Pointing to a public repo and we can discuss it. If you include ""u/"" + a username it DM the user, so include ""u/sqeaky"" and I should see it. Perhaps not today I promised to do some more review of this and I am just getting started now.","<div class=""md""><p>I see where you are coming, and again I agree with many points. And I acknowledge that you have about a decade more experience than me. I have no dedicated C experience and just a little less C++. I have done a bunch of other languages Ruby, Pascal, javascript, tyoescript, Java, Python, C#, like 10 different basics and others. I see we we are two experts who have walked different paths then I have some detail disagreements.</p>

<p>I think rules are best for newbies. With experience you can learn when it is Okay to discard rules, and when you are new you you don&#39;t know even to avoid creating turing tarpits. Even Sandi suggests skipping the rules if everyone agrees in code review.</p>

<p>I would be interested in taking such a challenge. There are pieces of code that shouldn&#39;t be shortened, but I find that it is often less than people with stance similar to yours. Feel free to start another thread. Pointing to a public repo and we can discuss it. If you include &quot;u/&quot; + a username it DM the user, so include &quot;<a href=""/u/sqeaky"">u/sqeaky</a>&quot; and I should see it. Perhaps not today I promised to do some more review of this and I am just getting started now.</p>
</div>",1598804030.0,,False,g3d8snq,False,t3_ihraxm,t1_g3c64cd,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3d8snq/,1,False,1,False,ihraxm,Cplusplus,t5_2qh6x
117,Sqeaky,"Creating your own wad seems like a good idea. It will enable more testing, and if you didn't test it then it doesn't work, with it you will know everything works.

TDD is way more common in languages that do less type checking at compile time. It is much easier to write some code in JavaScript, Ruby, or Python that looks like what you want API use to like, because none of these languages will break the build by calling methods that don't exist. Instead, they will throw runtime errors and will be caught by normal exception handling resulting in a failed test. In C++, Java, C# the type checkers will prevent the build, meaning the implementation at least needs stubs which steps on other bad practices that TDD enthusiasts also often evangelize.

I appreciate your praise, but I am just a normal person who had relevant opinions. I think we might just be stepping exactly on my expertise. I have been trying to follow Valve's concept of a ""T-shaped employee"" but More general as a T-shaped person. I am hyper focused on C++ and skills that might make me better at that, but I want to know enough about everything else to be able to start research should life drop some problem on me.

So I dabble in other languages and apply design patterns, paradigms, verbiage, and any other that might be applicable. I am constantly watching conference talks (try search YouTube for ""C++ on sea 2019""). I take short contracts for 3/6/12 months in languages I might learn from. I learned Java, Typescript, Pascal, and Ruby this way (Ruby was mind bending for me, but now I really get it and it is amazing). But I never stop learning other things, constantly new books new resources, new projects. I don't want to be the person with 20 years of experience that is really just 1 year of the same stuff 20 times (quote stolen from the ruby Rogues podcast) and nothing else.

I will checkout your twitter. I am curious to see how this all turns out.","<div class=""md""><p>Creating your own wad seems like a good idea. It will enable more testing, and if you didn&#39;t test it then it doesn&#39;t work, with it you will know everything works.</p>

<p>TDD is way more common in languages that do less type checking at compile time. It is much easier to write some code in JavaScript, Ruby, or Python that looks like what you want API use to like, because none of these languages will break the build by calling methods that don&#39;t exist. Instead, they will throw runtime errors and will be caught by normal exception handling resulting in a failed test. In C++, Java, C# the type checkers will prevent the build, meaning the implementation at least needs stubs which steps on other bad practices that TDD enthusiasts also often evangelize.</p>

<p>I appreciate your praise, but I am just a normal person who had relevant opinions. I think we might just be stepping exactly on my expertise. I have been trying to follow Valve&#39;s concept of a &quot;T-shaped employee&quot; but More general as a T-shaped person. I am hyper focused on C++ and skills that might make me better at that, but I want to know enough about everything else to be able to start research should life drop some problem on me.</p>

<p>So I dabble in other languages and apply design patterns, paradigms, verbiage, and any other that might be applicable. I am constantly watching conference talks (try search YouTube for &quot;C++ on sea 2019&quot;). I take short contracts for 3/6/12 months in languages I might learn from. I learned Java, Typescript, Pascal, and Ruby this way (Ruby was mind bending for me, but now I really get it and it is amazing). But I never stop learning other things, constantly new books new resources, new projects. I don&#39;t want to be the person with 20 years of experience that is really just 1 year of the same stuff 20 times (quote stolen from the ruby Rogues podcast) and nothing else.</p>

<p>I will checkout your twitter. I am curious to see how this all turns out.</p>
</div>",1599337691.0,,False,g45ua9a,False,t3_ihraxm,t1_g43qsfv,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g45ua9a/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
118,Sqeaky,"After I wrote the previous comment I stumbled upon this, conference talk: https://youtu.be/PmgsY9Fw1qI

It seems relevant to your problem, a possible way to rapidly assemble tests in the form of ""approval tests"" and a small but serious discussion of TDD in C++.","<div class=""md""><p>After I wrote the previous comment I stumbled upon this, conference talk: <a href=""https://youtu.be/PmgsY9Fw1qI"">https://youtu.be/PmgsY9Fw1qI</a></p>

<p>It seems relevant to your problem, a possible way to rapidly assemble tests in the form of &quot;approval tests&quot; and a small but serious discussion of TDD in C++.</p>
</div>",1599375457.0,,False,g47lff5,False,t3_ihraxm,t1_g43qsfv,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g47lff5/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
119,CarloWood,"Heh, I just found back that piece of code where I added a warning not to touch it:
https://github.com/CarloWood/threadpool/blob/master/RunningTimers.h#L121","<div class=""md""><p>Heh, I just found back that piece of code where I added a warning not to touch it:
<a href=""https://github.com/CarloWood/threadpool/blob/master/RunningTimers.h#L121"">https://github.com/CarloWood/threadpool/blob/master/RunningTimers.h#L121</a></p>
</div>",1598864093.0,,False,g3g5fbx,False,t3_ihraxm,t1_g3d8snq,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3g5fbx/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
120,DOOMReboot,"Great info. Those are great starting points and things for me to keep in mind while researching TDD further. I've actually used TDD in one of my Android apps which was fairly straightforward. I'll admit, though TDD can be of great value, I absolutely hate it. Lol. It just takes so long and is tedious. It also can stop me in my tracks if I haven't fully designed the architecture fully.. which I guess is the point. But, sometimes you just have to prototype. 

> I take short contracts for 3/6/12 months in languages I might learn from

How are you doing this? Upwork and the like? I've been seriously contemplating doing the same but am unsure about the best routes.","<div class=""md""><p>Great info. Those are great starting points and things for me to keep in mind while researching TDD further. I&#39;ve actually used TDD in one of my Android apps which was fairly straightforward. I&#39;ll admit, though TDD can be of great value, I absolutely hate it. Lol. It just takes so long and is tedious. It also can stop me in my tracks if I haven&#39;t fully designed the architecture fully.. which I guess is the point. But, sometimes you just have to prototype. </p>

<blockquote>
<p>I take short contracts for 3/6/12 months in languages I might learn from</p>
</blockquote>

<p>How are you doing this? Upwork and the like? I&#39;ve been seriously contemplating doing the same but am unsure about the best routes.</p>
</div>",1599402396.0,,False,g48eldc,True,t3_ihraxm,t1_g45ua9a,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g48eldc/,1,False,2,False,ihraxm,Cplusplus,t5_2qh6x
121,DOOMReboot,Looks interesting. Bookmarked for later!,"<div class=""md""><p>Looks interesting. Bookmarked for later!</p>
</div>",1599473451.0,,False,g4bgs1w,True,t3_ihraxm,t1_g47lff5,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g4bgs1w/,0,False,1,False,ihraxm,Cplusplus,t5_2qh6x
122,Sqeaky,"First off 21 lines ain't that bad, it isn't ideal, but you picked this for complexity and not length. Nearly every other function on this is very short, so this isn't so bad... Until we look at what I am more worried about with the update timers function in the cxx file. It is like 80+ lines and filled with lots of responsibilities. I am seeing thread synchronization, low level memory details, system calls, timer expiration, timer updates....

What are the performance requirements here? Is this optimizing for latency or bandwidth? I see that some atomics are used, has a lockless version of this been attempted? With manually specified read and write fences the control over synchronization could be much more precise, but perhaps this is fast enough. But the lockless version might also be simpler even if faster or slower.

My first thought on seeking improvements is to ask where are the unit tests? Your remark says it is sensitive to bugs, so I would expect a test per bug. If those existed we could relentlessly refactor.

Some timing and threading bugs can be tricky because they are stochastic. We can write tests that create likely conditions for them and run them repeatedly. Once we have tests likely to make the bugs shallow we can start swimming in that thread pool. Your comment even mentions a test and checking 1,500 permutations, I do not believe there are *Only* incorrect permutations of this function there is clearly an infinite amount.

On the function you initially referenced. It reminds me of a heap as defined by std::make_heap, std::push_heap, std::pop_heap, and std::sort_heap. It is a flat tree indexed on interval size. That sounds like a really good candidate for its own class, even of the heap similarities are superficial.

This class looks like it is handling at least two things, this cache and the details of the timers. A potential lockless version of a cache class could create the larger empty cache then start atomically copying one element at a time over and replacing the item in the first tree with a sentinel value indicating a lookup in the next tree. The caller (usually the running timer class) wouldn't need to know about this but each reading and writing method in that tournament tree cache class would need to be aware of such a scheme.

This is the strategy used in one of the first versions of the Java ConcurrentHashMap, it was written all in C and accessed via JNI. Every write was atomic and synchronization is done per element and growth per bucket. As the Hash table grows writes start going to new buckets and reads look in the original smaller buckets per hash indicated locations, and if it finds the value it returns that or it follows an atomically placed reference through to the larger table with more buckets and eventually gets the data. At some point all the data is in the newer larger or more numerous buckets, then the references in the container class is updated to point at the new buckets and the size increase is completed.

This is likely too much, it seems like even with millions of timers only a few will cached here. Either way the responsibility of managing the cache doesn't seem like it belongs here. Sometimes caches do belong directly in a container class. The heuristic I use to decide when to extract them as their own is when I would start making an algorithm dedicated to cache components, it seems you have, you even have a neat little chart.

Thank you for sharing this, I learned a lot.","<div class=""md""><p>First off 21 lines ain&#39;t that bad, it isn&#39;t ideal, but you picked this for complexity and not length. Nearly every other function on this is very short, so this isn&#39;t so bad... Until we look at what I am more worried about with the update timers function in the cxx file. It is like 80+ lines and filled with lots of responsibilities. I am seeing thread synchronization, low level memory details, system calls, timer expiration, timer updates....</p>

<p>What are the performance requirements here? Is this optimizing for latency or bandwidth? I see that some atomics are used, has a lockless version of this been attempted? With manually specified read and write fences the control over synchronization could be much more precise, but perhaps this is fast enough. But the lockless version might also be simpler even if faster or slower.</p>

<p>My first thought on seeking improvements is to ask where are the unit tests? Your remark says it is sensitive to bugs, so I would expect a test per bug. If those existed we could relentlessly refactor.</p>

<p>Some timing and threading bugs can be tricky because they are stochastic. We can write tests that create likely conditions for them and run them repeatedly. Once we have tests likely to make the bugs shallow we can start swimming in that thread pool. Your comment even mentions a test and checking 1,500 permutations, I do not believe there are <em>Only</em> incorrect permutations of this function there is clearly an infinite amount.</p>

<p>On the function you initially referenced. It reminds me of a heap as defined by std::make_heap, std::push_heap, std::pop_heap, and std::sort_heap. It is a flat tree indexed on interval size. That sounds like a really good candidate for its own class, even of the heap similarities are superficial.</p>

<p>This class looks like it is handling at least two things, this cache and the details of the timers. A potential lockless version of a cache class could create the larger empty cache then start atomically copying one element at a time over and replacing the item in the first tree with a sentinel value indicating a lookup in the next tree. The caller (usually the running timer class) wouldn&#39;t need to know about this but each reading and writing method in that tournament tree cache class would need to be aware of such a scheme.</p>

<p>This is the strategy used in one of the first versions of the Java ConcurrentHashMap, it was written all in C and accessed via JNI. Every write was atomic and synchronization is done per element and growth per bucket. As the Hash table grows writes start going to new buckets and reads look in the original smaller buckets per hash indicated locations, and if it finds the value it returns that or it follows an atomically placed reference through to the larger table with more buckets and eventually gets the data. At some point all the data is in the newer larger or more numerous buckets, then the references in the container class is updated to point at the new buckets and the size increase is completed.</p>

<p>This is likely too much, it seems like even with millions of timers only a few will cached here. Either way the responsibility of managing the cache doesn&#39;t seem like it belongs here. Sometimes caches do belong directly in a container class. The heuristic I use to decide when to extract them as their own is when I would start making an algorithm dedicated to cache components, it seems you have, you even have a neat little chart.</p>

<p>Thank you for sharing this, I learned a lot.</p>
</div>",1598905025.0,,False,g3iexhe,False,t3_ihraxm,t1_g3g5fbx,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g3iexhe/,0,False,1,False,ihraxm,Cplusplus,t5_2qh6x
123,Sqeaky,"I keep all my experience in my LinkedIn, and I allow every recruiter into my network/friend list/whatever it is called now. Then I hear out every offer, and politely decline the one's not of interest, and explain what I would like. I also have an ongoing relationship with several contractor companies.","<div class=""md""><p>I keep all my experience in my LinkedIn, and I allow every recruiter into my network/friend list/whatever it is called now. Then I hear out every offer, and politely decline the one&#39;s not of interest, and explain what I would like. I also have an ongoing relationship with several contractor companies.</p>
</div>",1599406906.0,,False,g48nckg,False,t3_ihraxm,t1_g48eldc,/r/Cplusplus/comments/ihraxm/code_review_doom_wad_file_loader/g48nckg/,0,False,1,False,ihraxm,Cplusplus,t5_2qh6x
124,IQueryVisiC,Pattern matching looks like lambda for my C# eyes.,"<div class=""md""><p>Pattern matching looks like lambda for my C# eyes.</p>
</div>",1687320523.0,,False,jox6lxn,False,t3_14eou0n,t3_14eou0n,/r/Cplusplus/comments/14eou0n/c26_features_are_out/jox6lxn/,0,False,8,False,14eou0n,Cplusplus,t5_2qh6x
125,guyonahorse,"That's awesome, I've been using this forever:

    #define UNIQUE2(x,y) x##y
    #define UNIQUE1(x,y) UNIQUE2(x,y)
    #define UNIQUE UNIQUE1(_unique_,__COUNTER__)

It comes in handy many times, and it's nice for it to get standardized.","<div class=""md""><p>That&#39;s awesome, I&#39;ve been using this forever:</p>

<pre><code>#define UNIQUE2(x,y) x##y
#define UNIQUE1(x,y) UNIQUE2(x,y)
#define UNIQUE UNIQUE1(_unique_,__COUNTER__)
</code></pre>

<p>It comes in handy many times, and it&#39;s nice for it to get standardized.</p>
</div>",1687325614.0,,False,joxefus,False,t3_14eou0n,t3_14eou0n,/r/Cplusplus/comments/14eou0n/c26_features_are_out/joxefus/,1,False,6,False,14eou0n,Cplusplus,t5_2qh6x
126,,[removed],"<div class=""md""><p>[removed]</p>
</div>",1687834473.0,,1687834653.0,jpoat9k,False,t3_14eou0n,t3_14eou0n,/r/Cplusplus/comments/14eou0n/c26_features_are_out/jpoat9k/,0,False,1,False,14eou0n,Cplusplus,t5_2qh6x
127,nibbertit,What do these do?,"<div class=""md""><p>What do these do?</p>
</div>",1687326452.0,,False,joxfmky,False,t3_14eou0n,t1_joxefus,/r/Cplusplus/comments/14eou0n/c26_features_are_out/joxfmky/,1,False,3,False,14eou0n,Cplusplus,t5_2qh6x
128,guyonahorse,"Usage wise, exactly the same as the \_ in the post. It just generates a unique name per use.

    SomeType UNIQUE{some params};
    SomeType UNIQUE{other params};

etc.","<div class=""md""><p>Usage wise, exactly the same as the _ in the post. It just generates a unique name per use.</p>

<pre><code>SomeType UNIQUE{some params};
SomeType UNIQUE{other params};
</code></pre>

<p>etc.</p>
</div>",1687331910.0,,False,joxmqlx,False,t3_14eou0n,t1_joxfmky,/r/Cplusplus/comments/14eou0n/c26_features_are_out/joxmqlx/,0,False,2,False,14eou0n,Cplusplus,t5_2qh6x
129,guyinnoho,Cool!,"<div class=""md""><p>Cool!</p>
</div>",1661811627.0,,False,imb9quj,False,t3_x0zdxz,t3_x0zdxz,/r/Cplusplus/comments/x0zdxz/my_copy_of_dr_stroustrups_c_book/imb9quj/,0,False,2,False,x0zdxz,Cplusplus,t5_2qh6x
130,sanson-robotics,Awesome!,"<div class=""md""><p>Awesome!</p>
</div>",1661855363.0,,False,imdb09x,False,t3_x0zdxz,t3_x0zdxz,/r/Cplusplus/comments/x0zdxz/my_copy_of_dr_stroustrups_c_book/imdb09x/,0,False,1,False,x0zdxz,Cplusplus,t5_2qh6x
131,sixpackofabs,how to get it?,"<div class=""md""><p>how to get it?</p>
</div>",1661859206.0,,False,imdgpux,False,t3_x0zdxz,t3_x0zdxz,/r/Cplusplus/comments/x0zdxz/my_copy_of_dr_stroustrups_c_book/imdgpux/,1,False,1,False,x0zdxz,Cplusplus,t5_2qh6x
132,,That’s fricken awesome!,"<div class=""md""><p>That’s fricken awesome!</p>
</div>",1663692736.0,,False,ip7rk20,False,t3_x0zdxz,t3_x0zdxz,/r/Cplusplus/comments/x0zdxz/my_copy_of_dr_stroustrups_c_book/ip7rk20/,0,False,1,False,x0zdxz,Cplusplus,t5_2qh6x
133,IamImposter,"Wine me, dine me, 69 me","<div class=""md""><p>Wine me, dine me, 69 me</p>
</div>",1661870713.0,,False,ime4vj8,False,t3_x0zdxz,t1_imdgpux,/r/Cplusplus/comments/x0zdxz/my_copy_of_dr_stroustrups_c_book/ime4vj8/,0,False,2,False,x0zdxz,Cplusplus,t5_2qh6x
134,,Read Scott Meyers Effective Modern C++,"<div class=""md""><p>Read Scott Meyers Effective Modern C++</p>
</div>",1620943922.0,,False,gy15egi,False,t3_nbn6fm,t3_nbn6fm,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gy15egi/,0,False,10,False,nbn6fm,Cplusplus,t5_2qh6x
135,codingai,"I highly recommend A Tour of C++ by Bjarne stroustrup. This book covers modern C++, up to some of the C++20 features.

If you do not wanna buy a book, just take a look at table of contents in the kindle store, and you'll know what you need to learn.","<div class=""md""><p>I highly recommend A Tour of C++ by Bjarne stroustrup. This book covers modern C++, up to some of the C++20 features.</p>

<p>If you do not wanna buy a book, just take a look at table of contents in the kindle store, and you&#39;ll know what you need to learn.</p>
</div>",1620937228.0,,1620937465.0,gy0qwaj,False,t3_nbn6fm,t3_nbn6fm,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gy0qwaj/,0,False,6,False,nbn6fm,Cplusplus,t5_2qh6x
136,Possibility_Antique,"As an EE, you might find yourself deep in the embedded world someday. Whatever it is that you end up using as a resource, you might question whether what you're learning makes sense for your constraints. For instance, exceptions in an embedded RTOS can cause your entire process to quit and halt the OS. Heap management is often pretty manual; some systems require you to define heap behavior according to what hardware resources you have. Or, what is a file system? std::filesystem might not even make sense on your platform.

Of course, maybe you're lucky and don't need to worry about embedded constraints. But I'm guessing if you're an EE, you likely are interested.","<div class=""md""><p>As an EE, you might find yourself deep in the embedded world someday. Whatever it is that you end up using as a resource, you might question whether what you&#39;re learning makes sense for your constraints. For instance, exceptions in an embedded RTOS can cause your entire process to quit and halt the OS. Heap management is often pretty manual; some systems require you to define heap behavior according to what hardware resources you have. Or, what is a file system? std::filesystem might not even make sense on your platform.</p>

<p>Of course, maybe you&#39;re lucky and don&#39;t need to worry about embedded constraints. But I&#39;m guessing if you&#39;re an EE, you likely are interested.</p>
</div>",1620946491.0,,False,gy1ako8,False,t3_nbn6fm,t3_nbn6fm,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gy1ako8/,2,False,3,False,nbn6fm,Cplusplus,t5_2qh6x
137,ChemiCalChems,"I follow C++ Weekly on Youtube, and even though it may not be beginner's material, it's a good resource to stay up to date with new features in the language.","<div class=""md""><p>I follow C++ Weekly on Youtube, and even though it may not be beginner&#39;s material, it&#39;s a good resource to stay up to date with new features in the language.</p>
</div>",1620981231.0,,False,gy2tgns,False,t3_nbn6fm,t3_nbn6fm,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gy2tgns/,1,False,3,False,nbn6fm,Cplusplus,t5_2qh6x
138,,"I think the most interesting way to learn more c++ is to make a graphics engine. You will learn more things like pointers, and be able to see how these work when looking at your engine.","<div class=""md""><p>I think the most interesting way to learn more c++ is to make a graphics engine. You will learn more things like pointers, and be able to see how these work when looking at your engine.</p>
</div>",1621854245.0,,False,gz9dxbx,False,t3_nbn6fm,t3_nbn6fm,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gz9dxbx/,1,False,2,False,nbn6fm,Cplusplus,t5_2qh6x
139,Unfilledpot,"In my opinion, Solve advance problems from leetcode , codeforce and try to apply what you have learnt already in a advance good quality projects this the way to learn the advance in any languages.","<div class=""md""><p>In my opinion, Solve advance problems from leetcode , codeforce and try to apply what you have learnt already in a advance good quality projects this the way to learn the advance in any languages.</p>
</div>",1622465315.0,,False,h02s9un,False,t3_nbn6fm,t3_nbn6fm,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/h02s9un/,0,False,1,False,nbn6fm,Cplusplus,t5_2qh6x
140,drillbit7,"and your often locked to the chip vendor's IDE and toolchain.  Some aren't updated very frequently and for legacy chips that we often encounter, the tools might be EOL as well.  So for some of these environments, ""newfangled"" things like C99 and C++11 might be unheard of.","<div class=""md""><p>and your often locked to the chip vendor&#39;s IDE and toolchain.  Some aren&#39;t updated very frequently and for legacy chips that we often encounter, the tools might be EOL as well.  So for some of these environments, &quot;newfangled&quot; things like C99 and C++11 might be unheard of.</p>
</div>",1620955351.0,,False,gy1rmr1,False,t3_nbn6fm,t1_gy1ako8,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gy1rmr1/,0,False,5,False,nbn6fm,Cplusplus,t5_2qh6x
141,newjeison,I'm an EE but I want to do something more related to ML/AI or SWE. I just want to get better at C++ because I feel like EE's are not expected to know how to program well.,"<div class=""md""><p>I&#39;m an EE but I want to do something more related to ML/AI or SWE. I just want to get better at C++ because I feel like EE&#39;s are not expected to know how to program well.</p>
</div>",1620947310.0,,False,gy1c74h,True,t3_nbn6fm,t1_gy1ako8,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gy1c74h/,1,False,2,False,nbn6fm,Cplusplus,t5_2qh6x
142,Shadow_Gabriel,"C++ Weekly took me from ""oh, it's like C but you can have functions in structs."" to ""I don't know anything about programming.""","<div class=""md""><p>C++ Weekly took me from &quot;oh, it&#39;s like C but you can have functions in structs.&quot; to &quot;I don&#39;t know anything about programming.&quot;</p>
</div>",1620988425.0,,False,gy31bki,False,t3_nbn6fm,t1_gy2tgns,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gy31bki/,1,False,4,False,nbn6fm,Cplusplus,t5_2qh6x
143,newjeison,yeah I tried to do that but I couldn't set up the libaries correct,"<div class=""md""><p>yeah I tried to do that but I couldn&#39;t set up the libaries correct</p>
</div>",1621884490.0,,False,gzb30vr,True,t3_nbn6fm,t1_gz9dxbx,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gzb30vr/,1,False,1,False,nbn6fm,Cplusplus,t5_2qh6x
144,Possibility_Antique,"Hmmm... As an embedded programmer myself, I can tell you that the world of embedded programming is filled with EEs. I constantly have to refer to the schematics to make sure I'm doing things correctly, and I'm always doing HWIL testing. And I won't say that you shouldn't explore AI/ML, because this is certainly applicable in the embedded world. Both of my patents are in deep learning, and I've exclusively done work in embedded RTOS systems. I'm also not telling you to limit yourself to only using embedded systems. I'm simply suggesting that if you really want to understand C++, you should understand what you're doing at the lowest level. Since you're an EE, you should be able to pick up on this a bit easier than those of us who came from the software side. For instance, what is the heap? What is the stack? What situations do you need to know the difference? What exactly is a virtual function, and how does it affect the compiled code? How does your system react when exceptions are thrown? When you learn more about the language, always try to map it back to what is happening on the hardware. A lot of C++ devs insist on programming for the abstract machine, I would encourage you to do quite the opposite. Understanding your constraints and relating what you learn to those constraints will make you a better programmer than most.","<div class=""md""><p>Hmmm... As an embedded programmer myself, I can tell you that the world of embedded programming is filled with EEs. I constantly have to refer to the schematics to make sure I&#39;m doing things correctly, and I&#39;m always doing HWIL testing. And I won&#39;t say that you shouldn&#39;t explore AI/ML, because this is certainly applicable in the embedded world. Both of my patents are in deep learning, and I&#39;ve exclusively done work in embedded RTOS systems. I&#39;m also not telling you to limit yourself to only using embedded systems. I&#39;m simply suggesting that if you really want to understand C++, you should understand what you&#39;re doing at the lowest level. Since you&#39;re an EE, you should be able to pick up on this a bit easier than those of us who came from the software side. For instance, what is the heap? What is the stack? What situations do you need to know the difference? What exactly is a virtual function, and how does it affect the compiled code? How does your system react when exceptions are thrown? When you learn more about the language, always try to map it back to what is happening on the hardware. A lot of C++ devs insist on programming for the abstract machine, I would encourage you to do quite the opposite. Understanding your constraints and relating what you learn to those constraints will make you a better programmer than most.</p>
</div>",1620948162.0,,False,gy1dutz,False,t3_nbn6fm,t1_gy1c74h,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gy1dutz/,1,False,5,False,nbn6fm,Cplusplus,t5_2qh6x
145,ChemiCalChems,"I'm on the same boat, most of the things he does blow my mind.","<div class=""md""><p>I&#39;m on the same boat, most of the things he does blow my mind.</p>
</div>",1620991713.0,,False,gy35s1j,False,t3_nbn6fm,t1_gy31bki,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gy35s1j/,0,False,2,False,nbn6fm,Cplusplus,t5_2qh6x
146,,"You always get a bug when compiling if there is no code, so try it again but write more code","<div class=""md""><p>You always get a bug when compiling if there is no code, so try it again but write more code</p>
</div>",1621887831.0,,False,gzbafl5,False,t3_nbn6fm,t1_gzb30vr,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gzbafl5/,0,False,1,False,nbn6fm,Cplusplus,t5_2qh6x
147,Gunslinging_Gamer,Compiler Explorer is a great resource for anyone learning low level C++.,"<div class=""md""><p>Compiler Explorer is a great resource for anyone learning low level C++.</p>
</div>",1620997165.0,,False,gy3f1ul,False,t3_nbn6fm,t1_gy1dutz,/r/Cplusplus/comments/nbn6fm/how_do_i_learn_more_advanced_c/gy3f1ul/,0,False,2,False,nbn6fm,Cplusplus,t5_2qh6x
148,jstock23,"Whoah, very cool! Bookmarked!","<div class=""md""><p>Whoah, very cool! Bookmarked!</p>
</div>",1502551248.0,,False,dlisi03,False,t3_6t86lg,t3_6t86lg,/r/Cplusplus/comments/6t86lg/i_would_like_to_share_400_data_structure_and/dlisi03/,0,False,3,False,6t86lg,Cplusplus,t5_2qh6x
149,GuyverGordon,Thank you so much for sharing this.  This is truly an amazing site; something that I will use quite frequently in the months to come with my studies.,"<div class=""md""><p>Thank you so much for sharing this.  This is truly an amazing site; something that I will use quite frequently in the months to come with my studies.</p>
</div>",1502589524.0,,False,dljlb9s,False,t3_6t86lg,t3_6t86lg,/r/Cplusplus/comments/6t86lg/i_would_like_to_share_400_data_structure_and/dljlb9s/,0,False,2,False,6t86lg,Cplusplus,t5_2qh6x
150,,Thanks very much for this. ,"<div class=""md""><p>Thanks very much for this. </p>
</div>",1502877587.0,,False,dlp27xe,False,t3_6t86lg,t3_6t86lg,/r/Cplusplus/comments/6t86lg/i_would_like_to_share_400_data_structure_and/dlp27xe/,0,False,1,False,6t86lg,Cplusplus,t5_2qh6x
151,varunpandey,"Downloaded, thanks for sharing. Would be best if you could share the expected space and time complexity too. ","<div class=""md""><p>Downloaded, thanks for sharing. Would be best if you could share the expected space and time complexity too. </p>
</div>",1502598411.0,,False,dljra2i,False,t3_6t86lg,t3_6t86lg,/r/Cplusplus/comments/6t86lg/i_would_like_to_share_400_data_structure_and/dljra2i/,0,False,0,False,6t86lg,Cplusplus,t5_2qh6x
152,sillysock429,Textbook deadlock that’s epic,"<div class=""md""><p>Textbook deadlock that’s epic</p>
</div>",1677811296.0,,False,japh0sh,False,t3_11gj6zw,t3_11gj6zw,/r/Cplusplus/comments/11gj6zw/chatgpt_on_threading_we_are_safe_for_now/japh0sh/,0,False,16,False,11gj6zw,Cplusplus,t5_2qh6x
153,,"I guess it was trained with an article about avoiding deadlocks and didn't ""realise"" that that code snippet was the before example.","<div class=""md""><p>I guess it was trained with an article about avoiding deadlocks and didn&#39;t &quot;realise&quot; that that code snippet was the before example.</p>
</div>",1677812284.0,,False,japj419,False,t3_11gj6zw,t3_11gj6zw,/r/Cplusplus/comments/11gj6zw/chatgpt_on_threading_we_are_safe_for_now/japj419/,0,False,15,False,11gj6zw,Cplusplus,t5_2qh6x
154,InternetAnima,lmao,"<div class=""md""><p>lmao</p>
</div>",1677806735.0,,False,jap71nl,False,t3_11gj6zw,t3_11gj6zw,/r/Cplusplus/comments/11gj6zw/chatgpt_on_threading_we_are_safe_for_now/jap71nl/,0,False,7,False,11gj6zw,Cplusplus,t5_2qh6x
155,seriousnotshirley,I’ve been asking it some of my interview questions which it handles reasonably well but when I start asking for more enhancements or details it eventually goes off the rails.,"<div class=""md""><p>I’ve been asking it some of my interview questions which it handles reasonably well but when I start asking for more enhancements or details it eventually goes off the rails.</p>
</div>",1677811996.0,,False,japiic7,False,t3_11gj6zw,t3_11gj6zw,/r/Cplusplus/comments/11gj6zw/chatgpt_on_threading_we_are_safe_for_now/japiic7/,0,False,5,False,11gj6zw,Cplusplus,t5_2qh6x
156,emcarlin,A future version of GPT will see this thread….,"<div class=""md""><p>A future version of GPT will see this thread….</p>
</div>",1679578077.0,,False,jdco01c,False,t3_11gj6zw,t3_11gj6zw,/r/Cplusplus/comments/11gj6zw/chatgpt_on_threading_we_are_safe_for_now/jdco01c/,1,False,2,False,11gj6zw,Cplusplus,t5_2qh6x
157,AdOpposite2272,Can someone explain what's the problem with this code?,"<div class=""md""><p>Can someone explain what&#39;s the problem with this code?</p>
</div>",1677862544.0,,False,jarwuub,False,t3_11gj6zw,t3_11gj6zw,/r/Cplusplus/comments/11gj6zw/chatgpt_on_threading_we_are_safe_for_now/jarwuub/,1,False,1,False,11gj6zw,Cplusplus,t5_2qh6x
158,,Maybe it will mock us when he’s gone over it,"<div class=""md""><p>Maybe it will mock us when he’s gone over it</p>
</div>",1680051318.0,,False,je2ynhl,False,t3_11gj6zw,t1_jdco01c,/r/Cplusplus/comments/11gj6zw/chatgpt_on_threading_we_are_safe_for_now/je2ynhl/,0,False,1,False,11gj6zw,Cplusplus,t5_2qh6x
159,,"If you have more than 1 lock,  then you must always acquire them in the same order or you are at risk of deadlocks.

In the pictured code, imagine 2 threads running simultaneously.  Thread A calls `foo` and thread B calls `bar`.

Thread A acquires mutex1,  and starts waiting for mutex2.

Thread B acquires mutex2, and starts waiting for mutex1.

Now they're deadlocked.

The last sentence in the picture is completely wrong.   It should explain the code *will* cause a deadlock and that the correct solution is to either

[a] always acquire the locks in the same order in every situation that both locks are needed 

or 

[b] use something like std::scoped_lock which can help acquire the locks properly.","<div class=""md""><p>If you have more than 1 lock,  then you must always acquire them in the same order or you are at risk of deadlocks.</p>

<p>In the pictured code, imagine 2 threads running simultaneously.  Thread A calls <code>foo</code> and thread B calls <code>bar</code>.</p>

<p>Thread A acquires mutex1,  and starts waiting for mutex2.</p>

<p>Thread B acquires mutex2, and starts waiting for mutex1.</p>

<p>Now they&#39;re deadlocked.</p>

<p>The last sentence in the picture is completely wrong.   It should explain the code <em>will</em> cause a deadlock and that the correct solution is to either</p>

<p>[a] always acquire the locks in the same order in every situation that both locks are needed </p>

<p>or </p>

<p>[b] use something like std::scoped_lock which can help acquire the locks properly.</p>
</div>",1677868347.0,,False,jasbt6i,False,t3_11gj6zw,t1_jarwuub,/r/Cplusplus/comments/11gj6zw/chatgpt_on_threading_we_are_safe_for_now/jasbt6i/,0,False,5,False,11gj6zw,Cplusplus,t5_2qh6x
160,,Maybe the mod could add the link here -->,"<div class=""md""><p>Maybe the mod could add the link here --&gt;</p>
</div>",1308604979.0,,False,c20v8zm,False,t3_i3r5v,t3_i3r5v,/r/Cplusplus/comments/i3r5v/the_c_subreddit_is_at_rcpp/c20v8zm/,0,False,1,False,i3r5v,Cplusplus,t5_2qh6x
161,bongwhacker,"**WAT**

**WY**

","<div class=""md""><p><strong>WAT</strong></p>

<p><strong>WY</strong></p>
</div>",1309029479.0,,False,c21v4ll,False,t3_i3r5v,t3_i3r5v,/r/Cplusplus/comments/i3r5v/the_c_subreddit_is_at_rcpp/c21v4ll/,0,False,1,False,i3r5v,Cplusplus,t5_2qh6x
162,,"Wait until you try C++++...

Edit: Adding the origin of the C# name here because it's where I was going with this. https://web.archive.org/web/20190806100632/https://www.computerworld.com.au/article/261958/a-z\_programming\_languages\_c\_/?pp=2","<div class=""md""><p>Wait until you try C++++...</p>

<p>Edit: Adding the origin of the C# name here because it&#39;s where I was going with this. <a href=""https://web.archive.org/web/20190806100632/https://www.computerworld.com.au/article/261958/a-z%5C_programming%5C_languages%5C_c%5C_/?pp=2"">https://web.archive.org/web/20190806100632/https://www.computerworld.com.au/article/261958/a-z\_programming\_languages\_c\_/?pp=2</a></p>
</div>",1643771914.0,,1643812047.0,hv87fbb,False,t3_sid9vg,t3_sid9vg,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv87fbb/,3,False,17,False,sid9vg,Cplusplus,t5_2qh6x
163,,What do you like about it? What did you use before?,"<div class=""md""><p>What do you like about it? What did you use before?</p>
</div>",1643770232.0,,False,hv83i79,False,t3_sid9vg,t3_sid9vg,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv83i79/,1,False,13,False,sid9vg,Cplusplus,t5_2qh6x
164,Syracuss,"Funny at the people saying ""use Rust"". Think before suggesting a language.. To suggest a language without actually knowing what the user uses it for is just parroting without being helpful. I wouldn't recommend C++ for problem domains it isn't helpful in.

OP, good luck, hope you have fun! Don't get too overwhelmed with everything you can do (like template magic etc..), iteratively learn, don't try to do it all at once. Also tip for compile errors in templated code, scroll to the first line of the error output, if the line points to a file in the standard library, keep scrolling till you see your own cpp file. First line has  large chance of saying the exact issue (but a bit cryptic at times), and your own code so you know what triggered it. Template errors can be a bit daunting, but most of it is the compiler saying ""I tried this but it failed""","<div class=""md""><p>Funny at the people saying &quot;use Rust&quot;. Think before suggesting a language.. To suggest a language without actually knowing what the user uses it for is just parroting without being helpful. I wouldn&#39;t recommend C++ for problem domains it isn&#39;t helpful in.</p>

<p>OP, good luck, hope you have fun! Don&#39;t get too overwhelmed with everything you can do (like template magic etc..), iteratively learn, don&#39;t try to do it all at once. Also tip for compile errors in templated code, scroll to the first line of the error output, if the line points to a file in the standard library, keep scrolling till you see your own cpp file. First line has  large chance of saying the exact issue (but a bit cryptic at times), and your own code so you know what triggered it. Template errors can be a bit daunting, but most of it is the compiler saying &quot;I tried this but it failed&quot;</p>
</div>",1643792218.0,,False,hv95wcu,False,t3_sid9vg,t3_sid9vg,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv95wcu/,1,False,11,False,sid9vg,Cplusplus,t5_2qh6x
165,Shadow_Gabriel,"As a C programmer, I love constexpr (and consteval). I'm surprised we don't have something  similar.","<div class=""md""><p>As a C programmer, I love constexpr (and consteval). I&#39;m surprised we don&#39;t have something  similar.</p>
</div>",1643798287.0,,False,hv9dm77,False,t3_sid9vg,t3_sid9vg,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv9dm77/,0,False,4,False,sid9vg,Cplusplus,t5_2qh6x
166,Middlewarian,Is this another one of our Rust friends out trolling?   Rust:  C++'s most vexing farce.,"<div class=""md""><p>Is this another one of our Rust friends out trolling?   Rust:  C++&#39;s most vexing farce.</p>
</div>",1643770411.0,,False,hv83xjh,False,t3_sid9vg,t3_sid9vg,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv83xjh/,1,False,5,False,sid9vg,Cplusplus,t5_2qh6x
167,schteppe,"Welcome to the club, you are very welcome!

If you haven’t already, check out the [C++ Core Guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines) to accelerate your C++ skillz!","<div class=""md""><p>Welcome to the club, you are very welcome!</p>

<p>If you haven’t already, check out the <a href=""https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines"">C++ Core Guidelines</a> to accelerate your C++ skillz!</p>
</div>",1643830520.0,,False,hvbf897,False,t3_sid9vg,t3_sid9vg,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hvbf897/,0,False,2,False,sid9vg,Cplusplus,t5_2qh6x
168,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1643837481.0,,False,hvby069,False,t3_sid9vg,t3_sid9vg,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hvby069/,1,False,2,False,sid9vg,Cplusplus,t5_2qh6x
169,MrDiviner,Why does it sound like Internet Explorer meme?,"<div class=""md""><p>Why does it sound like Internet Explorer meme?</p>
</div>",1644948049.0,,False,hx2a5u9,False,t3_sid9vg,t3_sid9vg,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hx2a5u9/,0,False,2,False,sid9vg,Cplusplus,t5_2qh6x
170,Pink_Slyvie,Wait until you try Rust ;),"<div class=""md""><p>Wait until you try Rust ;)</p>
</div>",1643782011.0,,False,hv8rpaf,False,t3_sid9vg,t3_sid9vg,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv8rpaf/,1,False,-5,False,sid9vg,Cplusplus,t5_2qh6x
171,top_logger,Try Rust. 🙂,"<div class=""md""><p>Try Rust. 🙂</p>
</div>",1643786707.0,,False,hv8yp6f,False,t3_sid9vg,t3_sid9vg,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv8yp6f/,0,False,-2,False,sid9vg,Cplusplus,t5_2qh6x
172,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1643775349.0,,False,hv8f5dr,False,t3_sid9vg,t1_hv87fbb,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv8f5dr/,1,False,7,False,sid9vg,Cplusplus,t5_2qh6x
173,Ikkepop,That would be E ... I love E,"<div class=""md""><p>That would be E ... I love E</p>
</div>",1643776698.0,,False,hv8hysa,False,t3_sid9vg,t1_hv87fbb,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv8hysa/,0,False,3,False,sid9vg,Cplusplus,t5_2qh6x
174,doowi1,You mean C#####,"<div class=""md""><p>You mean C#####</p>
</div>",1643785798.0,,False,hv8xfpe,True,t3_sid9vg,t1_hv87fbb,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv8xfpe/,1,False,1,False,sid9vg,Cplusplus,t5_2qh6x
175,doowi1,"I've largely been programming in C and Python for the last couple of years but Java was my first language.

There's so much handholding in C which I liked as a challenge but for daily projects it's so unnecessary. For example, smart pointers are a godsend. Plus, passing by reference and all the fun std library data structures like vector and map are *chefs kiss*.","<div class=""md""><p>I&#39;ve largely been programming in C and Python for the last couple of years but Java was my first language.</p>

<p>There&#39;s so much handholding in C which I liked as a challenge but for daily projects it&#39;s so unnecessary. For example, smart pointers are a godsend. Plus, passing by reference and all the fun std library data structures like vector and map are <em>chefs kiss</em>.</p>
</div>",1643785736.0,,False,hv8xclr,True,t3_sid9vg,t1_hv83i79,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv8xclr/,0,False,11,False,sid9vg,Cplusplus,t5_2qh6x
176,ChaosCon,"> Think before suggesting a language. To suggest a language without actually knowing what the user uses it for is just parroting without being helpful

I mean, a post saying ""I like this!"" isn't particularly helpful or information dense, either. Given that a user likes more abstraction and has a familiarity with c-like languages, what else should be thought about in this context?","<div class=""md""><blockquote>
<p>Think before suggesting a language. To suggest a language without actually knowing what the user uses it for is just parroting without being helpful</p>
</blockquote>

<p>I mean, a post saying &quot;I like this!&quot; isn&#39;t particularly helpful or information dense, either. Given that a user likes more abstraction and has a familiarity with c-like languages, what else should be thought about in this context?</p>
</div>",1643829389.0,,1643832613.0,hvbc7l4,False,t3_sid9vg,t1_hv95wcu,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hvbc7l4/,1,False,1,False,sid9vg,Cplusplus,t5_2qh6x
177,doowi1,Actually took a look at Rust for the first time yesterday and slowly closed my laptop,"<div class=""md""><p>Actually took a look at Rust for the first time yesterday and slowly closed my laptop</p>
</div>",1643785788.0,,False,hv8xf7g,True,t3_sid9vg,t1_hv83xjh,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv8xf7g/,1,False,15,False,sid9vg,Cplusplus,t5_2qh6x
178,doowi1,Just simulate classes with structs housing function pointers and you'll feel right at home.,"<div class=""md""><p>Just simulate classes with structs housing function pointers and you&#39;ll feel right at home.</p>
</div>",1643850201.0,,False,hvcu7ae,True,t3_sid9vg,t1_hvby069,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hvcu7ae/,0,False,1,False,sid9vg,Cplusplus,t5_2qh6x
179,doowi1,I took a look yesterday and was terrified,"<div class=""md""><p>I took a look yesterday and was terrified</p>
</div>",1643785812.0,,False,hv8xgfc,True,t3_sid9vg,t1_hv8rpaf,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv8xgfc/,1,False,10,False,sid9vg,Cplusplus,t5_2qh6x
180,,"That would be the step after, I think. Maybe?","<div class=""md""><p>That would be the step after, I think. Maybe?</p>
</div>",1643776416.0,,False,hv8hdx5,False,t3_sid9vg,t1_hv8f5dr,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv8hdx5/,0,False,2,False,sid9vg,Cplusplus,t5_2qh6x
181,rodrigocfd,"Beyond C♯, I tried C♭ once... but it was just [B](https://en.wikipedia.org/wiki/B_(programming_language\)).","<div class=""md""><p>Beyond C♯, I tried C♭ once... but it was just <a href=""https://en.wikipedia.org/wiki/B_(programming_language)"">B</a>.</p>
</div>",1643800743.0,,False,hv9gyhd,False,t3_sid9vg,t1_hv8xfpe,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hv9gyhd/,1,False,9,False,sid9vg,Cplusplus,t5_2qh6x
182,Syracuss,"Not entirely sure what you're trying to get at, all I'm saying is that giving suggestions to users who didn't ask for it isn't helpful, and especially not if you don't know what they're doing. At least _ask some info_ before evangelism kicks in. For all you know he deploys on platforms Rust doesn't even support, f.e. any modern gaming console.

I don't walk into a python subreddit either and yell ""use Java!"" when someone posts they like the language. It's just weird..","<div class=""md""><p>Not entirely sure what you&#39;re trying to get at, all I&#39;m saying is that giving suggestions to users who didn&#39;t ask for it isn&#39;t helpful, and especially not if you don&#39;t know what they&#39;re doing. At least <em>ask some info</em> before evangelism kicks in. For all you know he deploys on platforms Rust doesn&#39;t even support, f.e. any modern gaming console.</p>

<p>I don&#39;t walk into a python subreddit either and yell &quot;use Java!&quot; when someone posts they like the language. It&#39;s just weird..</p>
</div>",1643837212.0,,False,hvbx9d3,False,t3_sid9vg,t1_hvbc7l4,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hvbx9d3/,0,False,2,False,sid9vg,Cplusplus,t5_2qh6x
183,TroyOfShow,why??,"<div class=""md""><p>why??</p>
</div>",1654903179.0,,False,ibwxfo9,False,t3_sid9vg,t1_hv8xf7g,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/ibwxfo9/,1,False,2,False,sid9vg,Cplusplus,t5_2qh6x
184,,"Understandable! It is very very nice for people with a background in functional languages, but I can understand how it doesn't fit your use cases.","<div class=""md""><p>Understandable! It is very very nice for people with a background in functional languages, but I can understand how it doesn&#39;t fit your use cases.</p>
</div>",1643834398.0,,False,hvbpdwc,False,t3_sid9vg,t1_hv8xgfc,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hvbpdwc/,0,False,2,False,sid9vg,Cplusplus,t5_2qh6x
185,nekosamaaa,"Musical joke, I like it","<div class=""md""><p>Musical joke, I like it</p>
</div>",1645133025.0,,False,hxd0tnm,False,t3_sid9vg,t1_hv9gyhd,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/hxd0tnm/,0,False,2,False,sid9vg,Cplusplus,t5_2qh6x
186,doowi1,"Syntax spooky to my C brain. Also, why would anyone intentionally write safe code?","<div class=""md""><p>Syntax spooky to my C brain. Also, why would anyone intentionally write safe code?</p>
</div>",1654929914.0,,False,iby6a9o,True,t3_sid9vg,t1_ibwxfo9,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/iby6a9o/,1,False,1,False,sid9vg,Cplusplus,t5_2qh6x
187,,"The syntax is only spooky because you haven't taken the time to learn it. \
So they can spend less time working, and more time touching grass.","<div class=""md""><p>The syntax is only spooky because you haven&#39;t taken the time to learn it. \
So they can spend less time working, and more time touching grass.</p>
</div>",1675906098.0,,False,j7sbots,False,t3_sid9vg,t1_iby6a9o,/r/Cplusplus/comments/sid9vg/c_programmer_of_4_years_finally_using_c/j7sbots/,0,False,1,False,sid9vg,Cplusplus,t5_2qh6x
188,goatlev,"I love constexpr. Makes the code soooo much easier to read.

I hate those [[maybe_unused]] annotations. More code pollution is not what C++ deserved.","<div class=""md""><p>I love constexpr. Makes the code soooo much easier to read.</p>

<p>I hate those [[maybe_unused]] annotations. More code pollution is not what C++ deserved.</p>
</div>",1627171308.0,,False,h6f5myv,False,t3_oqyffh,t3_oqyffh,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6f5myv/,3,False,14,False,oqyffh,Cplusplus,t5_2qh6x
189,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1627177612.0,,False,h6fguew,False,t3_oqyffh,t3_oqyffh,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6fguew/,1,False,9,False,oqyffh,Cplusplus,t5_2qh6x
190,cybereality,"I like auto. Makes long declarations manageable, especially function pointers.","<div class=""md""><p>I like auto. Makes long declarations manageable, especially function pointers.</p>
</div>",1627163809.0,,False,h6erpkp,False,t3_oqyffh,t3_oqyffh,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6erpkp/,2,False,14,False,oqyffh,Cplusplus,t5_2qh6x
191,mechap_,Love friend injection and stateful metaprogramming. Hate the uniform initialization syntax.,"<div class=""md""><p>Love friend injection and stateful metaprogramming. Hate the uniform initialization syntax.</p>
</div>",1627195878.0,,False,h6g7v0z,False,t3_oqyffh,t3_oqyffh,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6g7v0z/,0,False,3,False,oqyffh,Cplusplus,t5_2qh6x
192,aniliitb10,"I love if constexpr, it saves us from the tricks of SFINAE","<div class=""md""><p>I love if constexpr, it saves us from the tricks of SFINAE</p>
</div>",1627224904.0,,False,h6h99lu,False,t3_oqyffh,t3_oqyffh,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6h99lu/,0,False,2,False,oqyffh,Cplusplus,t5_2qh6x
193,slapnuttz,"Like threads

Hate lambda abuse","<div class=""md""><p>Like threads</p>

<p>Hate lambda abuse</p>
</div>",1627169034.0,,False,h6f1iq5,False,t3_oqyffh,t3_oqyffh,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6f1iq5/,0,False,1,False,oqyffh,Cplusplus,t5_2qh6x
194,mredding,"I like lambdas, I hate range-for loops.","<div class=""md""><p>I like lambdas, I hate range-for loops.</p>
</div>",1627321981.0,,False,h6m0pli,False,t3_oqyffh,t3_oqyffh,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6m0pli/,0,False,1,False,oqyffh,Cplusplus,t5_2qh6x
195,seriousnotshirley,"Oh I love maybe_unused but I’d generally fail a code review that has it. It’s handy when you’re building some code and your build system enforces errors on warn and warn on unused. 

I’d rather muck with things in the code where I’m working and have a clear signal that shows up in the code review if something might actually be unused or the dev forgot something on the way to committing.","<div class=""md""><p>Oh I love maybe_unused but I’d generally fail a code review that has it. It’s handy when you’re building some code and your build system enforces errors on warn and warn on unused. </p>

<p>I’d rather muck with things in the code where I’m working and have a clear signal that shows up in the code review if something might actually be unused or the dev forgot something on the way to committing.</p>
</div>",1627173699.0,,False,h6f9vdw,False,t3_oqyffh,t1_h6f5myv,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6f9vdw/,2,False,7,False,oqyffh,Cplusplus,t5_2qh6x
196,lieddersturme,"Jajaja, I love them, because makes me easy to read :D","<div class=""md""><p>Jajaja, I love them, because makes me easy to read :D</p>
</div>",1627176126.0,,False,h6fe82t,False,t3_oqyffh,t1_h6f5myv,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6fe82t/,0,False,2,False,oqyffh,Cplusplus,t5_2qh6x
197,mechap_,"Nodicard, likely, unlikely, and no_unique_address can be usefull because they add expressivity to the code in my opinion while sometimes giving the compiler the ability to optimize it.","<div class=""md""><p>Nodicard, likely, unlikely, and no_unique_address can be usefull because they add expressivity to the code in my opinion while sometimes giving the compiler the ability to optimize it.</p>
</div>",1627196194.0,,False,h6g88gv,False,t3_oqyffh,t1_h6f5myv,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6g88gv/,1,False,2,False,oqyffh,Cplusplus,t5_2qh6x
198,lieddersturme,"for(const auto& a: {1,2,3,4,5}). I love it :D","<div class=""md""><p>for(const auto&amp; a: {1,2,3,4,5}). I love it :D</p>
</div>",1627177823.0,,False,h6fh7yw,False,t3_oqyffh,t1_h6fguew,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6fh7yw/,1,False,2,False,oqyffh,Cplusplus,t5_2qh6x
199,Nicksaurus,Imagine declaring a map iterator without auto,"<div class=""md""><p>Imagine declaring a map iterator without auto</p>
</div>",1627168361.0,,False,h6f0a7g,False,t3_oqyffh,t1_h6erpkp,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6f0a7g/,0,False,6,False,oqyffh,Cplusplus,t5_2qh6x
200,Savings-Key1602,100% agree,"<div class=""md""><p>100% agree</p>
</div>",1627220666.0,,False,h6h1ix0,True,t3_oqyffh,t1_h6erpkp,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6h1ix0/,0,False,2,False,oqyffh,Cplusplus,t5_2qh6x
201,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1627177079.0,,False,h6ffwlf,False,t3_oqyffh,t1_h6f9vdw,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6ffwlf/,0,False,0,False,oqyffh,Cplusplus,t5_2qh6x
202,goatlev,"Interesting! Yeah, I wouldn't deny that there's an obvious advantage in [[maybe_unused]], I just never experienced that and instead I find those annotations very eye-straining in general.

But yeah, the OP asked for these things and honestly I don't hate them really, it's more a strong dislike. Likewise, I love more things in modern C++ than just constexpr's. It's just too many things to mention.

The only thing I honestly hate are GCCs error messages, especially in regards to templates.","<div class=""md""><p>Interesting! Yeah, I wouldn&#39;t deny that there&#39;s an obvious advantage in [[maybe_unused]], I just never experienced that and instead I find those annotations very eye-straining in general.</p>

<p>But yeah, the OP asked for these things and honestly I don&#39;t hate them really, it&#39;s more a strong dislike. Likewise, I love more things in modern C++ than just constexpr&#39;s. It&#39;s just too many things to mention.</p>

<p>The only thing I honestly hate are GCCs error messages, especially in regards to templates.</p>
</div>",1627208818.0,,False,h6glwqi,False,t3_oqyffh,t1_h6f9vdw,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6glwqi/,0,False,1,False,oqyffh,Cplusplus,t5_2qh6x
203,goatlev,"I got used to no_discard and it saved me a couple of times, so yeah, agreed.","<div class=""md""><p>I got used to no_discard and it saved me a couple of times, so yeah, agreed.</p>
</div>",1627208892.0,,False,h6glzk7,False,t3_oqyffh,t1_h6g88gv,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6glzk7/,0,False,2,False,oqyffh,Cplusplus,t5_2qh6x
204,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1627180135.0,,False,h6flb6l,False,t3_oqyffh,t1_h6fh7yw,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6flb6l/,1,False,2,False,oqyffh,Cplusplus,t5_2qh6x
205,lieddersturme,"Something like this:

    for(int it {}; const auto& a: {1,2,3,4,5}){
    // code...
    it++;
    }","<div class=""md""><p>Something like this:</p>

<pre><code>for(int it {}; const auto&amp; a: {1,2,3,4,5}){
// code...
it++;
}
</code></pre>
</div>",1627181437.0,,False,h6fni4j,False,t3_oqyffh,t1_h6flb6l,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6fni4j/,1,False,9,False,oqyffh,Cplusplus,t5_2qh6x
206,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1627182498.0,,False,h6fp85o,False,t3_oqyffh,t1_h6fni4j,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6fp85o/,1,False,9,False,oqyffh,Cplusplus,t5_2qh6x
207,rw2453,"Or you could just create the iterator outside of the for each loop, then increment inside the loop. Less elegant but easier to read imo","<div class=""md""><p>Or you could just create the iterator outside of the for each loop, then increment inside the loop. Less elegant but easier to read imo</p>
</div>",1627320451.0,,False,h6lx4nv,False,t3_oqyffh,t1_h6fp85o,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6lx4nv/,1,False,2,False,oqyffh,Cplusplus,t5_2qh6x
208,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1627342825.0,,False,h6nagas,False,t3_oqyffh,t1_h6lx4nv,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6nagas/,1,False,1,False,oqyffh,Cplusplus,t5_2qh6x
209,rw2453,Yeah it might be a bit of a waste of memory though in bigger programs since the iterator doesn’t fall out of scope. It’s a trade off,"<div class=""md""><p>Yeah it might be a bit of a waste of memory though in bigger programs since the iterator doesn’t fall out of scope. It’s a trade off</p>
</div>",1627455266.0,,False,h6sxn3q,False,t3_oqyffh,t1_h6nagas,/r/Cplusplus/comments/oqyffh/one_modern_c_feature_that_you_love_the_most_and/h6sxn3q/,0,False,1,False,oqyffh,Cplusplus,t5_2qh6x
210,AKostur,"You want to look up “Uniform Initialization”, and always keep in mind that there’s a very strong design principle of trying to not break existing code.","<div class=""md""><p>You want to look up “Uniform Initialization”, and always keep in mind that there’s a very strong design principle of trying to not break existing code.</p>
</div>",1684160724.0,,False,jk8pij1,False,t3_13i97k3,t3_13i97k3,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk8pij1/,0,False,14,False,13i97k3,Cplusplus,t5_2qh6x
211,no-sig-available,"One problem is that while `int x(23)`; is a variable, `int x();` is a function. And `int x(a);` could be either, depending on what `a` is. With braces this problem goes away, as `int x{}`; cannot be a function.

And it can get worse, *a lot worse*:

     vector<int> v(istream_iterator<int>(cin), istream_iterator<int>());

is also a function declaration!

See  [The most vexing parse.](https://stackoverflow.com/questions/7007817/a-confusing-detail-about-the-most-vexing-parse)","<div class=""md""><p>One problem is that while <code>int x(23)</code>; is a variable, <code>int x();</code> is a function. And <code>int x(a);</code> could be either, depending on what <code>a</code> is. With braces this problem goes away, as <code>int x{}</code>; cannot be a function.</p>

<p>And it can get worse, <em>a lot worse</em>:</p>

<pre><code> vector&lt;int&gt; v(istream_iterator&lt;int&gt;(cin), istream_iterator&lt;int&gt;());
</code></pre>

<p>is also a function declaration!</p>

<p>See  <a href=""https://stackoverflow.com/questions/7007817/a-confusing-detail-about-the-most-vexing-parse"">The most vexing parse.</a></p>
</div>",1684161351.0,,False,jk8qw9l,False,t3_13i97k3,t3_13i97k3,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk8qw9l/,1,False,10,False,13i97k3,Cplusplus,t5_2qh6x
212,nibbertit,We don't speak of the most vexing parse,"<div class=""md""><p>We don&#39;t speak of the most vexing parse</p>
</div>",1684167741.0,,False,jk93ezv,False,t3_13i97k3,t3_13i97k3,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk93ezv/,0,False,5,False,13i97k3,Cplusplus,t5_2qh6x
213,kevleyski,"If just starting - get to a good point you feel comfortable with C/C++ and look at Rust
The skills are interchangeable and you can call code between them - Rust will prevent you writing bad code and what you learn from that, eg enforcing stacking winding m, avoiding the heap where possible can be applied back to C++ too","<div class=""md""><p>If just starting - get to a good point you feel comfortable with C/C++ and look at Rust
The skills are interchangeable and you can call code between them - Rust will prevent you writing bad code and what you learn from that, eg enforcing stacking winding m, avoiding the heap where possible can be applied back to C++ too</p>
</div>",1684934490.0,,False,jlf8hb7,False,t3_13i97k3,t3_13i97k3,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jlf8hb7/,1,False,2,False,13i97k3,Cplusplus,t5_2qh6x
214,TheSkiGeek,"Why was which design implemented?

The ‘function call’ style syntax reflects that there *is* a ‘function’ being run when you construct an object, its constructor.  The constructors for built in types are trivial but they still effectively exist.  So you can think of it like specifying the parameters to pass to the constructor.

The ‘uniform constructor syntax’ (using curly braces) is designed to let you construct arbitrary objects similar to the way you can initialize native C-style structs and arrays.  Previously you had to use parens with some things and braces with others.  Now you can use braces with everything, although you (unfortunately) have to be careful with things that can take a `std::initializer_list`, since it will prefer to bind to those rather than another constructor.","<div class=""md""><p>Why was which design implemented?</p>

<p>The ‘function call’ style syntax reflects that there <em>is</em> a ‘function’ being run when you construct an object, its constructor.  The constructors for built in types are trivial but they still effectively exist.  So you can think of it like specifying the parameters to pass to the constructor.</p>

<p>The ‘uniform constructor syntax’ (using curly braces) is designed to let you construct arbitrary objects similar to the way you can initialize native C-style structs and arrays.  Previously you had to use parens with some things and braces with others.  Now you can use braces with everything, although you (unfortunately) have to be careful with things that can take a <code>std::initializer_list</code>, since it will prefer to bind to those rather than another constructor.</p>
</div>",1684160863.0,,False,jk8ptir,False,t3_13i97k3,t3_13i97k3,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk8ptir/,1,False,3,False,13i97k3,Cplusplus,t5_2qh6x
215,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1684163006.0,,False,jk8ulc5,False,t3_13i97k3,t3_13i97k3,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk8ulc5/,2,False,4,False,13i97k3,Cplusplus,t5_2qh6x
216,TheLurkingGrammarian,x() can also be a constructor / temporary instantiation of a class / struct.,"<div class=""md""><p>x() can also be a constructor / temporary instantiation of a class / struct.</p>
</div>",1684223136.0,,False,jkc8gr5,False,t3_13i97k3,t1_jk8qw9l,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jkc8gr5/,0,False,2,False,13i97k3,Cplusplus,t5_2qh6x
217,Content-Value-6912,"That's my next goal. First, I'll master C/C++ and move on to Rust. What are your thoughts about Go?","<div class=""md""><p>That&#39;s my next goal. First, I&#39;ll master C/C++ and move on to Rust. What are your thoughts about Go?</p>
</div>",1684973311.0,,False,jlhzzl9,True,t3_13i97k3,t1_jlf8hb7,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jlhzzl9/,0,False,1,False,13i97k3,Cplusplus,t5_2qh6x
218,Content-Value-6912,"Oh I see. I realised something about C++, correct me if I'm wrong. It's a language with lot of features and nuances, context matters most of the times when writing large programs. Even within the set standard rules and libraries/objects, there could be multiple factors that affects the design. This could only be mastered by writing more programs over the years to get some proficiency.","<div class=""md""><p>Oh I see. I realised something about C++, correct me if I&#39;m wrong. It&#39;s a language with lot of features and nuances, context matters most of the times when writing large programs. Even within the set standard rules and libraries/objects, there could be multiple factors that affects the design. This could only be mastered by writing more programs over the years to get some proficiency.</p>
</div>",1684162943.0,,False,jk8ug9b,True,t3_13i97k3,t1_jk8ptir,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk8ug9b/,2,False,3,False,13i97k3,Cplusplus,t5_2qh6x
219,DickFiasco,*We will watch your career with great interest*,"<div class=""md""><p><em>We will watch your career with great interest</em></p>
</div>",1684169225.0,,False,jk95tqn,False,t3_13i97k3,t1_jk8ulc5,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk95tqn/,0,False,2,False,13i97k3,Cplusplus,t5_2qh6x
220,Middlewarian,"> Take me Bjarne for my eyes finally grow tired, my mind weary..."" 

Sorry to hear that.  I'm past day 10,000 and am still enjoying C++.  I wake up excited to think of how I can improve matters for myself and others using C++.  Viva la C++.","<div class=""md""><blockquote>
<p>Take me Bjarne for my eyes finally grow tired, my mind weary...&quot; </p>
</blockquote>

<p>Sorry to hear that.  I&#39;m past day 10,000 and am still enjoying C++.  I wake up excited to think of how I can improve matters for myself and others using C++.  Viva la C++.</p>
</div>",1684170013.0,,False,jk97o1m,False,t3_13i97k3,t1_jk8ulc5,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk97o1m/,0,False,2,False,13i97k3,Cplusplus,t5_2qh6x
221,Dr_Sir_Ham_Sandwich,"You picked that out quickly. I am in embedded an we can only use a small subset of C++ on low end hardware. You have to be really careful, but it is a really powerful language, it's just a matter of getting to know the right sub-set for your use case. Good luck with it, it's an amazing language IMO.","<div class=""md""><p>You picked that out quickly. I am in embedded an we can only use a small subset of C++ on low end hardware. You have to be really careful, but it is a really powerful language, it&#39;s just a matter of getting to know the right sub-set for your use case. Good luck with it, it&#39;s an amazing language IMO.</p>
</div>",1684165327.0,,False,jk8z7z8,False,t3_13i97k3,t1_jk8ug9b,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk8z7z8/,2,False,5,False,13i97k3,Cplusplus,t5_2qh6x
222,TheSkiGeek,"Yes, it’s got a long complicated history and tries to maintain a lot of backwards compatibility with not just older versions of C++ but ANSI C as well.","<div class=""md""><p>Yes, it’s got a long complicated history and tries to maintain a lot of backwards compatibility with not just older versions of C++ but ANSI C as well.</p>
</div>",1684163556.0,,False,jk8vsfe,False,t3_13i97k3,t1_jk8ug9b,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk8vsfe/,0,False,1,False,13i97k3,Cplusplus,t5_2qh6x
223,Content-Value-6912,Sure it is. Programming is magic.,"<div class=""md""><p>Sure it is. Programming is magic.</p>
</div>",1684166352.0,,False,jk90usr,True,t3_13i97k3,t1_jk8z7z8,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk90usr/,0,False,5,False,13i97k3,Cplusplus,t5_2qh6x
224,ISvengali,"Ayep, all very true.

Ive seen it called C+ as a chuckle in games before.

Everyone has a slightly different version of C+ they use, though there are similarities of course.

It all depends on the needs of the project, and its nice when the features are available, even when theyre not being used.  

My current version of C+ is basically

x) Custom templates for some things.

x) Use macro+templates for compile time reflection

x) Small bits of the STL

x) Any custom needed behaviour done in STL style so things like <algorithm>s work

x) Expected (from Alexandrescu and later in other places), which is a type similar to Maybe or Option is the bulk of return and error handling.  

x) Interfaces used, sometimes slightly thick, but not any heavy inheritance.

x) The CRTP as needed

x) Templatized values can be useful, especially when you need fixed arrays.

x) Handle null pointer exceptions at a decent spot.  For games, you often have code like having an NPC Think();.  So, around the think, catch null pointer and move that NPC to another list for debugging, but keep the app going.  

If I was doing a HTTP server, I would do something similar on each request.  Etc.  For games, we then turn this off often only for shipping, but its on during testing and debug.

Im sure theres more, but thats the core part of mine.","<div class=""md""><p>Ayep, all very true.</p>

<p>Ive seen it called C+ as a chuckle in games before.</p>

<p>Everyone has a slightly different version of C+ they use, though there are similarities of course.</p>

<p>It all depends on the needs of the project, and its nice when the features are available, even when theyre not being used.  </p>

<p>My current version of C+ is basically</p>

<p>x) Custom templates for some things.</p>

<p>x) Use macro+templates for compile time reflection</p>

<p>x) Small bits of the STL</p>

<p>x) Any custom needed behaviour done in STL style so things like &lt;algorithm&gt;s work</p>

<p>x) Expected (from Alexandrescu and later in other places), which is a type similar to Maybe or Option is the bulk of return and error handling.  </p>

<p>x) Interfaces used, sometimes slightly thick, but not any heavy inheritance.</p>

<p>x) The CRTP as needed</p>

<p>x) Templatized values can be useful, especially when you need fixed arrays.</p>

<p>x) Handle null pointer exceptions at a decent spot.  For games, you often have code like having an NPC Think();.  So, around the think, catch null pointer and move that NPC to another list for debugging, but keep the app going.  </p>

<p>If I was doing a HTTP server, I would do something similar on each request.  Etc.  For games, we then turn this off often only for shipping, but its on during testing and debug.</p>

<p>Im sure theres more, but thats the core part of mine.</p>
</div>",1684171638.0,,False,jk9bmv8,False,t3_13i97k3,t1_jk8z7z8,/r/Cplusplus/comments/13i97k3/started_learning_c_today_and_its_going_great/jk9bmv8/,0,False,2,False,13i97k3,Cplusplus,t5_2qh6x
225,Beautiful-Quote-3035,"I love to use auto because I don’t like typing out namespace::typename and my IDE tells me what type everything is anyways. const auto & in for loops is great Imo. I can see how auto can be a bad thing though and if my team decided no more using auto then I wouldn’t die on the hill.
All programming languages suck in their own ways. People that look down on others for not understanding as much yet or having a different opinion about a language need to get a life.
A lot of C++ devs have a superiority complex but you can find genius assholes with hot takes working on any stack. 
Linus Torvalds says he uses C because C++ is trash all together.
Web devs argue over which garbage framework is superior. 
I just deal with these kinds of people because I like getting paid and the products of the projects I work on can be cool but it is exhausting and sometimes depressing.","<div class=""md""><p>I love to use auto because I don’t like typing out namespace::typename and my IDE tells me what type everything is anyways. const auto &amp; in for loops is great Imo. I can see how auto can be a bad thing though and if my team decided no more using auto then I wouldn’t die on the hill.
All programming languages suck in their own ways. People that look down on others for not understanding as much yet or having a different opinion about a language need to get a life.
A lot of C++ devs have a superiority complex but you can find genius assholes with hot takes working on any stack. 
Linus Torvalds says he uses C because C++ is trash all together.
Web devs argue over which garbage framework is superior. 
I just deal with these kinds of people because I like getting paid and the products of the projects I work on can be cool but it is exhausting and sometimes depressing.</p>
</div>",1676779970.0,,1676781102.0,j94h3cs,False,t3_115wkm7,t3_115wkm7,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j94h3cs/,1,False,18,False,115wkm7,Cplusplus,t5_2qh6x
226,android_queen,"So, I’ve been a C++ programmer for about 20 years, about 15 in games. I’m a woman, and I struggle with depression, so while I can’t know what your exact experience is, I can come at this from a certain angle. 

Most of what your describing seems to have less to do with other people’s behavior, and more to do with the way you’re interpreting it. The bit about knowing how old the code is sounds like a joke/minor secondary benefit. In the user group, you say that nobody spoke up. How was the speaker to know that he wasn’t being understood? He literally asked if you had questions. You don’t like auto. I do. Okay. Reasonable people can disagree on this point. My studio has a part in its coding standard about restrictions on when not to use it, because of some of the readability concerns you express. You say you *think* people think you are dumb or lazy for this, but you don’t give us any reason why you *should* think that. 

It’s really common for programmers to be “brilliant assholes.” That’s a real phenomenon, and I wouldn’t be surprised if there’s a significant number of people who think of themselves as better because they’re C++ programmers. In my experience, that tendency is *less* from the gurus/experts because they’re generally less insecure in their knowledge. That said, I’m sure some are.","<div class=""md""><p>So, I’ve been a C++ programmer for about 20 years, about 15 in games. I’m a woman, and I struggle with depression, so while I can’t know what your exact experience is, I can come at this from a certain angle. </p>

<p>Most of what your describing seems to have less to do with other people’s behavior, and more to do with the way you’re interpreting it. The bit about knowing how old the code is sounds like a joke/minor secondary benefit. In the user group, you say that nobody spoke up. How was the speaker to know that he wasn’t being understood? He literally asked if you had questions. You don’t like auto. I do. Okay. Reasonable people can disagree on this point. My studio has a part in its coding standard about restrictions on when not to use it, because of some of the readability concerns you express. You say you <em>think</em> people think you are dumb or lazy for this, but you don’t give us any reason why you <em>should</em> think that. </p>

<p>It’s really common for programmers to be “brilliant assholes.” That’s a real phenomenon, and I wouldn’t be surprised if there’s a significant number of people who think of themselves as better because they’re C++ programmers. In my experience, that tendency is <em>less</em> from the gurus/experts because they’re generally less insecure in their knowledge. That said, I’m sure some are.</p>
</div>",1676770753.0,,False,j93yez2,False,t3_115wkm7,t3_115wkm7,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j93yez2/,2,False,25,False,115wkm7,Cplusplus,t5_2qh6x
227,no-sig-available,"> A simple example I'd give would be the keyword `auto`. I think I understand the reasons why some people like it, but for me it makes code a lot more difficult to read. 

It's a matter of how you use it. If you find the rule

>do not use the auto keywords with Eigen's expressions

that doesn't say ""never use auto"", just to be careful.

And about readability - I don't find code like

    for (typename std::vector<mytype<int, std::string>>::const_iterator iter = container.begin(); ...

readable at all. But find

    for (auto Iter = container.begin(); ...

a lot easier. We all know that `begin()` returns some kind of iterator. Why spell out *exactly* which one?

And that's not even ""new"" code, that's 12 years old.  :-)","<div class=""md""><blockquote>
<p>A simple example I&#39;d give would be the keyword <code>auto</code>. I think I understand the reasons why some people like it, but for me it makes code a lot more difficult to read. </p>
</blockquote>

<p>It&#39;s a matter of how you use it. If you find the rule</p>

<blockquote>
<p>do not use the auto keywords with Eigen&#39;s expressions</p>
</blockquote>

<p>that doesn&#39;t say &quot;never use auto&quot;, just to be careful.</p>

<p>And about readability - I don&#39;t find code like</p>

<pre><code>for (typename std::vector&lt;mytype&lt;int, std::string&gt;&gt;::const_iterator iter = container.begin(); ...
</code></pre>

<p>readable at all. But find</p>

<pre><code>for (auto Iter = container.begin(); ...
</code></pre>

<p>a lot easier. We all know that <code>begin()</code> returns some kind of iterator. Why spell out <em>exactly</em> which one?</p>

<p>And that&#39;s not even &quot;new&quot; code, that&#39;s 12 years old.  :-)</p>
</div>",1676803529.0,,False,j95degx,False,t3_115wkm7,t3_115wkm7,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j95degx/,1,False,6,False,115wkm7,Cplusplus,t5_2qh6x
228,bert8128,"Here’s an undeniably good use of auto:

auto my_variable = std::make_unique<int>(42);

You have already said it is an int on the right, so giving a type on the left adds no information, and only gives the opportunity of getting it wrong. 
Here’s a case where I wouldn’t use auto:

int my_var = 42;

Not everyone knows that 42 is sn int by default. And similar style to get a long, or short, or size_t then looks similar. 

Auto is often the right choice, but only use it where it actually helps, and dong use it where it confuses. I wouldn’t rely on people using ides- I am an ide user but also look at diffs and reviews where there is no type help. 

My normal rule of thumb is that if you want the type of the variable to be the same as the thing on the right, even if the code on the right changed to return a different type, then use auto. If you want the type of the variable to be something in particular, then state that and don’t use auto.","<div class=""md""><p>Here’s an undeniably good use of auto:</p>

<p>auto my_variable = std::make_unique&lt;int&gt;(42);</p>

<p>You have already said it is an int on the right, so giving a type on the left adds no information, and only gives the opportunity of getting it wrong. 
Here’s a case where I wouldn’t use auto:</p>

<p>int my_var = 42;</p>

<p>Not everyone knows that 42 is sn int by default. And similar style to get a long, or short, or size_t then looks similar. </p>

<p>Auto is often the right choice, but only use it where it actually helps, and dong use it where it confuses. I wouldn’t rely on people using ides- I am an ide user but also look at diffs and reviews where there is no type help. </p>

<p>My normal rule of thumb is that if you want the type of the variable to be the same as the thing on the right, even if the code on the right changed to return a different type, then use auto. If you want the type of the variable to be something in particular, then state that and don’t use auto.</p>
</div>",1676834060.0,,False,j971509,False,t3_115wkm7,t3_115wkm7,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j971509/,0,False,3,False,115wkm7,Cplusplus,t5_2qh6x
229,fastElectronics,"I'm a C++ elitist, in jest.  I just like some good-natured poking fun at people (particularly my friends). It's a way to break the ice.  It's all in good fun and I expect to get it back from my java-developing friends.  I used to work in a shop with fabricators and machinists and learned if someone feels comfortable enough to joke around our give you a hard time, they like you and trust you.  If everybody treats you with a super serious ""yes sir"", ""no sir"" they either don't like you or don't trust you to take a joke (and they won't like you for long if you can't take a joke).","<div class=""md""><p>I&#39;m a C++ elitist, in jest.  I just like some good-natured poking fun at people (particularly my friends). It&#39;s a way to break the ice.  It&#39;s all in good fun and I expect to get it back from my java-developing friends.  I used to work in a shop with fabricators and machinists and learned if someone feels comfortable enough to joke around our give you a hard time, they like you and trust you.  If everybody treats you with a super serious &quot;yes sir&quot;, &quot;no sir&quot; they either don&#39;t like you or don&#39;t trust you to take a joke (and they won&#39;t like you for long if you can&#39;t take a joke).</p>
</div>",1676775797.0,,False,j948u62,False,t3_115wkm7,t3_115wkm7,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j948u62/,0,False,5,False,115wkm7,Cplusplus,t5_2qh6x
230,divine_nonchalance86,"Woman here, 15 years c++ developer.

Simple code is always a good idea. Especially when your code base is big and layered. 

I always try to keep up to date with every revision of the standard. But just because something is new, it does mean it is always the most appropriate syntax tool compared to the older ones.

There are several reasons why I need sometimes to keep some piece of code ""legacy"". The most frequent is performance. 

People who looks at a piece of code to tell if it's old, should first try to understand why it stayed that way instead of assuming a lazy attitude by the programmer. 

Aa a general rule of thumb: real good and active programmers rearely have time to join conferences... Most of these code guru wants to impress you with the new shiny thing that they know so well and you don't.

Do not fall for that. You must keep on learning new things, but in a educated way. Keep in mind that C++ is an evolving language, bound by retrocompatibily. Many think that this makes a part of it just old. It's not. It's layered. You need to understand the importance of every piece of it. When and when not to use it.

I wish it was just new=better and old=deprectated. You have a correct actitude for C++, the always questioning one. Rare and very needed in this field.","<div class=""md""><p>Woman here, 15 years c++ developer.</p>

<p>Simple code is always a good idea. Especially when your code base is big and layered. </p>

<p>I always try to keep up to date with every revision of the standard. But just because something is new, it does mean it is always the most appropriate syntax tool compared to the older ones.</p>

<p>There are several reasons why I need sometimes to keep some piece of code &quot;legacy&quot;. The most frequent is performance. </p>

<p>People who looks at a piece of code to tell if it&#39;s old, should first try to understand why it stayed that way instead of assuming a lazy attitude by the programmer. </p>

<p>Aa a general rule of thumb: real good and active programmers rearely have time to join conferences... Most of these code guru wants to impress you with the new shiny thing that they know so well and you don&#39;t.</p>

<p>Do not fall for that. You must keep on learning new things, but in a educated way. Keep in mind that C++ is an evolving language, bound by retrocompatibily. Many think that this makes a part of it just old. It&#39;s not. It&#39;s layered. You need to understand the importance of every piece of it. When and when not to use it.</p>

<p>I wish it was just new=better and old=deprectated. You have a correct actitude for C++, the always questioning one. Rare and very needed in this field.</p>
</div>",1676797895.0,,False,j956tje,False,t3_115wkm7,t3_115wkm7,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j956tje/,0,False,2,False,115wkm7,Cplusplus,t5_2qh6x
231,Middlewarian,I've run into some bullies in C++ and other technical circles.  I'm glad I've hung in there with C++.  It's been getting better over the years and I'm doing what I can to improve matters by developing a C++-based SaaS.  The best is yet to come.,"<div class=""md""><p>I&#39;ve run into some bullies in C++ and other technical circles.  I&#39;m glad I&#39;ve hung in there with C++.  It&#39;s been getting better over the years and I&#39;m doing what I can to improve matters by developing a C++-based SaaS.  The best is yet to come.</p>
</div>",1676850539.0,,False,j983qn5,False,t3_115wkm7,t3_115wkm7,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j983qn5/,0,False,2,False,115wkm7,Cplusplus,t5_2qh6x
232,Poryg-Senpai,"C++ doesn't cultivate bully attitude. Many people are just idiots with easy to develop superiority complexes. It doesn't matter if you're talking about Python vs C++, PC vs console or pinapple on pizza. There will always be people who look down on the less knowledgeable or those who have a different opinion. 

As for auto, the keyword itself is great. It's much easier to type ""for (auto const & i in foo)"" than to have to come up with very specific iterators because the authors of C++ standards did not come with a simple enough way to iterate through anything more complex than C style array (for instance, good luck iterating through std::map). The problem with the keyword is, people overuse it.","<div class=""md""><p>C++ doesn&#39;t cultivate bully attitude. Many people are just idiots with easy to develop superiority complexes. It doesn&#39;t matter if you&#39;re talking about Python vs C++, PC vs console or pinapple on pizza. There will always be people who look down on the less knowledgeable or those who have a different opinion. </p>

<p>As for auto, the keyword itself is great. It&#39;s much easier to type &quot;for (auto const &amp; i in foo)&quot; than to have to come up with very specific iterators because the authors of C++ standards did not come with a simple enough way to iterate through anything more complex than C style array (for instance, good luck iterating through std::map). The problem with the keyword is, people overuse it.</p>
</div>",1676865808.0,,False,j98z0im,False,t3_115wkm7,t3_115wkm7,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j98z0im/,0,False,2,False,115wkm7,Cplusplus,t5_2qh6x
233,Offdopp,C++ elitism is justified because it's the only thing that keeps us sane,"<div class=""md""><p>C++ elitism is justified because it&#39;s the only thing that keeps us sane</p>
</div>",1676798187.0,,False,j9575tq,False,t3_115wkm7,t3_115wkm7,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j9575tq/,0,False,3,False,115wkm7,Cplusplus,t5_2qh6x
234,jk_tx,"Honestly, it sounds to me like you have a pretty major case of imposter syndrome, and are reading more into some of these things than you should.

But hey, if you don't enjoy C++ development, no reason to keep pursuing it. Maybe there are some other tangentially-related fields that you would find more enjoyable - maybe another language, product market, or something that requires less programming and more of what you enjoy. And that's not me being elitist, I'm just saying that nobody else is going to prioritize your career satisfaction and enjoyment, that's up to you.

As far as the ""telling how old the code is by looking at it"", anybody who has had to work on a project written in the early C++ days when a lot of it was mostly C but with some classes, or when MFC was in its heyday and a lot of codebases fully embraced those idioms and coding style, will tell you there's at least \_some\_ truth to that. I'm not saying that's a reason for elitism, but I'm also not clear why you would think that idea itself is elitist.

As far as 'auto', I think it's a case where context matters. Sometimes it can improve readability in major ways, sometimes it can hide subtle bugs. I think any absolute rule about never/always using 'auto' is going to be counter-productive.","<div class=""md""><p>Honestly, it sounds to me like you have a pretty major case of imposter syndrome, and are reading more into some of these things than you should.</p>

<p>But hey, if you don&#39;t enjoy C++ development, no reason to keep pursuing it. Maybe there are some other tangentially-related fields that you would find more enjoyable - maybe another language, product market, or something that requires less programming and more of what you enjoy. And that&#39;s not me being elitist, I&#39;m just saying that nobody else is going to prioritize your career satisfaction and enjoyment, that&#39;s up to you.</p>

<p>As far as the &quot;telling how old the code is by looking at it&quot;, anybody who has had to work on a project written in the early C++ days when a lot of it was mostly C but with some classes, or when MFC was in its heyday and a lot of codebases fully embraced those idioms and coding style, will tell you there&#39;s at least _some_ truth to that. I&#39;m not saying that&#39;s a reason for elitism, but I&#39;m also not clear why you would think that idea itself is elitist.</p>

<p>As far as &#39;auto&#39;, I think it&#39;s a case where context matters. Sometimes it can improve readability in major ways, sometimes it can hide subtle bugs. I think any absolute rule about never/always using &#39;auto&#39; is going to be counter-productive.</p>
</div>",1676846132.0,,1676846471.0,j97tuuh,False,t3_115wkm7,t3_115wkm7,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j97tuuh/,0,False,2,False,115wkm7,Cplusplus,t5_2qh6x
235,Dan13l_N,"It's hard to be humble when you're dealing with complex and hard issues and you're really proud of yourself because you finally learned it.

You are absolutely right -- `auto` makes code less readable. But in some cases -- like templates -- it solves some issues and makes your code simpler. I found that I use `auto` once per 1000 lines or so (mostly for results of `std::list::find`).

I've been programming in C++ since 1990's, other languages (mostly Turbo Pascal) before it...

BTW old code is not bad code. In fact, some piece of code that has been working since 1990's is probably better than any new code simply because it has been proven to work over and over. Some piece of code that was constantly maintained and improved for decades is probably better that any code you will write because all corner cases and users randomly pushing buttons have been handled over the years...","<div class=""md""><p>It&#39;s hard to be humble when you&#39;re dealing with complex and hard issues and you&#39;re really proud of yourself because you finally learned it.</p>

<p>You are absolutely right -- <code>auto</code> makes code less readable. But in some cases -- like templates -- it solves some issues and makes your code simpler. I found that I use <code>auto</code> once per 1000 lines or so (mostly for results of <code>std::list::find</code>).</p>

<p>I&#39;ve been programming in C++ since 1990&#39;s, other languages (mostly Turbo Pascal) before it...</p>

<p>BTW old code is not bad code. In fact, some piece of code that has been working since 1990&#39;s is probably better than any new code simply because it has been proven to work over and over. Some piece of code that was constantly maintained and improved for decades is probably better that any code you will write because all corner cases and users randomly pushing buttons have been handled over the years...</p>
</div>",1677224107.0,,1677224395.0,j9spbsc,False,t3_115wkm7,t3_115wkm7,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j9spbsc/,0,False,1,False,115wkm7,Cplusplus,t5_2qh6x
236,Drugbird,"I believe most ""best practices"" are inseparably linked with IDEs (and workflow in general). 

I.e. use of ""auto"" leads to confusion if you're editing in notepad because you don't see what type is actually used. However, if you use a modern IDE where you can instantly see the type, it offers you additional flexibility. 

However, the general workflow / IDE use is only rarely mentioned when discussing these points.","<div class=""md""><p>I believe most &quot;best practices&quot; are inseparably linked with IDEs (and workflow in general). </p>

<p>I.e. use of &quot;auto&quot; leads to confusion if you&#39;re editing in notepad because you don&#39;t see what type is actually used. However, if you use a modern IDE where you can instantly see the type, it offers you additional flexibility. </p>

<p>However, the general workflow / IDE use is only rarely mentioned when discussing these points.</p>
</div>",1676820352.0,,False,j964ccv,False,t3_115wkm7,t1_j94h3cs,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j964ccv/,1,False,6,False,115wkm7,Cplusplus,t5_2qh6x
237,ternary_tree,Thanks for your thoughtful reply. I'm glad you don't feel the same way!,"<div class=""md""><p>Thanks for your thoughtful reply. I&#39;m glad you don&#39;t feel the same way!</p>
</div>",1676772438.0,,False,j941xa1,True,t3_115wkm7,t1_j93yez2,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j941xa1/,0,False,5,False,115wkm7,Cplusplus,t5_2qh6x
238,TheLurkingGrammarian,"Same here.

They’re all tools - if it makes code safer, more performant and more intelligible at first read then no harm it putting it to good use.

The only time I don’t use new techniques is if they simply don’t contribute meaningfully to the aforementioned reasons e.g. fetishisation of `auto` and / or trailing return types everywhere, use of C++20 techniques that don’t actually improve speed or legibility in place of better algorithms.

Basically, just because you can doesn’t mean you should.

Then there are some visual things I don’t like, like overuse of curly braces or subjectively poor whitespace organisation, but these are just stylistic preferences - if they have no impact on functionally and the team consensus is that it’s a better choice then I’ll concede, no problem.

Be reasonable.","<div class=""md""><p>Same here.</p>

<p>They’re all tools - if it makes code safer, more performant and more intelligible at first read then no harm it putting it to good use.</p>

<p>The only time I don’t use new techniques is if they simply don’t contribute meaningfully to the aforementioned reasons e.g. fetishisation of <code>auto</code> and / or trailing return types everywhere, use of C++20 techniques that don’t actually improve speed or legibility in place of better algorithms.</p>

<p>Basically, just because you can doesn’t mean you should.</p>

<p>Then there are some visual things I don’t like, like overuse of curly braces or subjectively poor whitespace organisation, but these are just stylistic preferences - if they have no impact on functionally and the team consensus is that it’s a better choice then I’ll concede, no problem.</p>

<p>Be reasonable.</p>
</div>",1676823197.0,,False,j96awug,False,t3_115wkm7,t1_j93yez2,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j96awug/,0,False,4,False,115wkm7,Cplusplus,t5_2qh6x
239,android_queen,"For an extreme counter example, Herb Sutter has a blog post entitled “Almost Always Auto,” where he lays out the arguments for why auto usage can make your code more readable and less buggy. It’s an extreme that I don’t fully subscribe to, but it’s a valuable read nonetheless. 

On the other hand, I never use Eigen expressions. To me, that’s a fairly niche use case, even for game programming. I am wholly willing to believe that an approach that deliberately hides the type inference is not a great idea when using patterns that rely on lazy evaluation! I struggle, however, to generalize beyond that specific type of programming though, and I would certainly find it frustrating to get that feedback on a code review if I used auto in a more conventional scenario.","<div class=""md""><p>For an extreme counter example, Herb Sutter has a blog post entitled “Almost Always Auto,” where he lays out the arguments for why auto usage can make your code more readable and less buggy. It’s an extreme that I don’t fully subscribe to, but it’s a valuable read nonetheless. </p>

<p>On the other hand, I never use Eigen expressions. To me, that’s a fairly niche use case, even for game programming. I am wholly willing to believe that an approach that deliberately hides the type inference is not a great idea when using patterns that rely on lazy evaluation! I struggle, however, to generalize beyond that specific type of programming though, and I would certainly find it frustrating to get that feedback on a code review if I used auto in a more conventional scenario.</p>
</div>",1676824226.0,,False,j96dbk4,False,t3_115wkm7,t1_j95degx,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j96dbk4/,1,False,3,False,115wkm7,Cplusplus,t5_2qh6x
240,android_queen,"It’s a really good point. Nobody argues about whether eMacs or vi (notepad???) are superior these days because it’s generally expected that most professional developers will be using a modern IDE, probably with a plug-in or two. Whether or not something is “confusing” or “readable” depends *highly* on the shared common ground.","<div class=""md""><p>It’s a really good point. Nobody argues about whether eMacs or vi (notepad???) are superior these days because it’s generally expected that most professional developers will be using a modern IDE, probably with a plug-in or two. Whether or not something is “confusing” or “readable” depends <em>highly</em> on the shared common ground.</p>
</div>",1676823432.0,,False,j96bgnw,False,t3_115wkm7,t1_j964ccv,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j96bgnw/,0,False,3,False,115wkm7,Cplusplus,t5_2qh6x
241,Ahajha1177,"The Eigen thing is really weird, and only something I discovered recently. Some code that had been working fine for several years suddenly started failing tests. Turns out the problem was use of auto with Eigen. Seems like a really good argument against implicit conversions.","<div class=""md""><p>The Eigen thing is really weird, and only something I discovered recently. Some code that had been working fine for several years suddenly started failing tests. Turns out the problem was use of auto with Eigen. Seems like a really good argument against implicit conversions.</p>
</div>",1676853745.0,,False,j98ao81,False,t3_115wkm7,t1_j96dbk4,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j98ao81/,1,False,2,False,115wkm7,Cplusplus,t5_2qh6x
242,android_queen,Or an argument against lazy evaluation! All depends upon your use case.,"<div class=""md""><p>Or an argument against lazy evaluation! All depends upon your use case.</p>
</div>",1676854349.0,,False,j98bygk,False,t3_115wkm7,t1_j98ao81,/r/Cplusplus/comments/115wkm7/modern_c_attitude_or_ego/j98bygk/,0,False,2,False,115wkm7,Cplusplus,t5_2qh6x
243,Tremolat,Stackoverflow. It's where programmers go to be humiliated until they crack and change careers.,"<div class=""md""><p>Stackoverflow. It&#39;s where programmers go to be humiliated until they crack and change careers.</p>
</div>",1682435879.0,,False,jhnu3uc,False,t3_12ykrk9,t3_12ykrk9,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jhnu3uc/,0,False,27,False,12ykrk9,Cplusplus,t5_2qh6x
244,EstablishmentBig7956,"start looking for open source c++ code in the areas you want to explore you should know the rest of what you'd need to do.

or take elevated classes.","<div class=""md""><p>start looking for open source c++ code in the areas you want to explore you should know the rest of what you&#39;d need to do.</p>

<p>or take elevated classes.</p>
</div>",1682437855.0,,1682438258.0,jhnz6j2,False,t3_12ykrk9,t3_12ykrk9,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jhnz6j2/,1,False,12,False,12ykrk9,Cplusplus,t5_2qh6x
245,freewill-lastwish,Cppcon videos on YouTube,"<div class=""md""><p>Cppcon videos on YouTube</p>
</div>",1682444705.0,,False,jhoh5nh,False,t3_12ykrk9,t3_12ykrk9,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jhoh5nh/,1,False,7,False,12ykrk9,Cplusplus,t5_2qh6x
246,Yamoyek,"I hate to be that guy, but build stuff. 

Modern programming is far too complex to learn from one centralized place. Take a “simple” example of a web server. Starting from the ground up, you have to learn about sockets, then HTTPS, then HTML, then generating/serving HTML, then CSS, then JS, then cookies, then databases… 

Long story short, modern applications touch upon far too many domains. 

So, how do you learn? You break down applications into smaller components. Try to reduce project ideas into mini projects that focus on a single domain instead of a whole slew of them.","<div class=""md""><p>I hate to be that guy, but build stuff. </p>

<p>Modern programming is far too complex to learn from one centralized place. Take a “simple” example of a web server. Starting from the ground up, you have to learn about sockets, then HTTPS, then HTML, then generating/serving HTML, then CSS, then JS, then cookies, then databases… </p>

<p>Long story short, modern applications touch upon far too many domains. </p>

<p>So, how do you learn? You break down applications into smaller components. Try to reduce project ideas into mini projects that focus on a single domain instead of a whole slew of them.</p>
</div>",1682441835.0,,False,jho9ogt,False,t3_12ykrk9,t3_12ykrk9,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jho9ogt/,1,False,13,False,12ykrk9,Cplusplus,t5_2qh6x
247,LongVandyke,"Javidx9 does documented C++ projects on YouTube. They're usually for a specific purpose, and they tend to start from first principles.

Since you mentioned networks, here's one on networking: [https://www.youtube.com/watch?v=2hNdkYInj4g](https://www.youtube.com/watch?v=2hNdkYInj4g) (the second video has more about sockets).

If you're interested in games, synthesis, dithering, and similar topics, there might also be a project that interests you. You can code along to one of them, and then see how you can use your problem-solving to add features you'd like to see.

Personally, I don't have your aim to be an expert, so I don't know if I (or anyone) can help you there. I don't have a stage where I think, okay, this is the amount of knowledge I needed to tell people I'm an expert, at least not in the things I've taken an interest in. Maybe there are areas where the term ""expert"" is used in a non-qualitative way, but I don't think it ever struck me that way.","<div class=""md""><p>Javidx9 does documented C++ projects on YouTube. They&#39;re usually for a specific purpose, and they tend to start from first principles.</p>

<p>Since you mentioned networks, here&#39;s one on networking: <a href=""https://www.youtube.com/watch?v=2hNdkYInj4g"">https://www.youtube.com/watch?v=2hNdkYInj4g</a> (the second video has more about sockets).</p>

<p>If you&#39;re interested in games, synthesis, dithering, and similar topics, there might also be a project that interests you. You can code along to one of them, and then see how you can use your problem-solving to add features you&#39;d like to see.</p>

<p>Personally, I don&#39;t have your aim to be an expert, so I don&#39;t know if I (or anyone) can help you there. I don&#39;t have a stage where I think, okay, this is the amount of knowledge I needed to tell people I&#39;m an expert, at least not in the things I&#39;ve taken an interest in. Maybe there are areas where the term &quot;expert&quot; is used in a non-qualitative way, but I don&#39;t think it ever struck me that way.</p>
</div>",1682463747.0,,1682468480.0,jhps4lw,False,t3_12ykrk9,t3_12ykrk9,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jhps4lw/,0,False,6,False,12ykrk9,Cplusplus,t5_2qh6x
248,CoralKashri,"I didn't understand what exactly are you looking for, but there are a lot of C++ blogs which talking about how to properly write C++ code, here are few examples:

[C++ Senioreas](https://cppsenioreas.wordpress.com/) (my own blog)

[Fluent C++](https://www.fluentcpp.com/) (the blog that have been my inspiration to write about C++)

[C++ Stories](https://www.cppstories.com/)

[Meeting C++](https://www.meetingcpp.com/blog/blogroll/)

And you can find more blogs about C++ in [Hacking C++](https://hackingcpp.com/cpp/blogs.html).

Good luck! :)","<div class=""md""><p>I didn&#39;t understand what exactly are you looking for, but there are a lot of C++ blogs which talking about how to properly write C++ code, here are few examples:</p>

<p><a href=""https://cppsenioreas.wordpress.com/"">C++ Senioreas</a> (my own blog)</p>

<p><a href=""https://www.fluentcpp.com/"">Fluent C++</a> (the blog that have been my inspiration to write about C++)</p>

<p><a href=""https://www.cppstories.com/"">C++ Stories</a></p>

<p><a href=""https://www.meetingcpp.com/blog/blogroll/"">Meeting C++</a></p>

<p>And you can find more blogs about C++ in <a href=""https://hackingcpp.com/cpp/blogs.html"">Hacking C++</a>.</p>

<p>Good luck! :)</p>
</div>",1682492739.0,,False,jhr9qqy,False,t3_12ykrk9,t3_12ykrk9,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jhr9qqy/,0,False,3,False,12ykrk9,Cplusplus,t5_2qh6x
249,,[removed],"<div class=""md""><p>[removed]</p>
</div>",1682470449.0,,False,jhq6usx,False,t3_12ykrk9,t3_12ykrk9,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jhq6usx/,1,False,2,False,12ykrk9,Cplusplus,t5_2qh6x
250,ChrisHuskyFurry,"I can not stress this enough, but The Cherno. I've watched his OpenGL series, literally copied it, but somehow managed to learn how to use OpenGL and even how it works, which allowed me to experiment and learn the advanced stuff all by myself. The same for his Game Engine series, I literally copied it line for line, and it helped me learn so fucking much that I am building my own Game Engine now (all by myself, no tutorials and it is original)","<div class=""md""><p>I can not stress this enough, but The Cherno. I&#39;ve watched his OpenGL series, literally copied it, but somehow managed to learn how to use OpenGL and even how it works, which allowed me to experiment and learn the advanced stuff all by myself. The same for his Game Engine series, I literally copied it line for line, and it helped me learn so fucking much that I am building my own Game Engine now (all by myself, no tutorials and it is original)</p>
</div>",1683486505.0,,False,jj8rzu2,False,t3_12ykrk9,t3_12ykrk9,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jj8rzu2/,1,False,1,False,12ykrk9,Cplusplus,t5_2qh6x
251,saamify,Thank you!,"<div class=""md""><p>Thank you!</p>
</div>",1682455613.0,,False,jhp96zl,True,t3_12ykrk9,t1_jhnz6j2,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jhp96zl/,0,False,2,False,12ykrk9,Cplusplus,t5_2qh6x
252,ignitionweb,"Yes, watch confrence videos. 
Emerse yourself with knowledge from speakers that have taken the time to figure out how to present and articulate a topic well.

As well as cppcon look at accuconf, cppnow, cpponsea, cppnorth, ndc tech town, and many more.

You don't need to watch everything. But the more emersed you become, the better your understanding of modern c++ approaches will be.","<div class=""md""><p>Yes, watch confrence videos. 
Emerse yourself with knowledge from speakers that have taken the time to figure out how to present and articulate a topic well.</p>

<p>As well as cppcon look at accuconf, cppnow, cpponsea, cppnorth, ndc tech town, and many more.</p>

<p>You don&#39;t need to watch everything. But the more emersed you become, the better your understanding of modern c++ approaches will be.</p>
</div>",1682667367.0,,False,ji0zmvr,False,t3_12ykrk9,t1_jhoh5nh,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/ji0zmvr/,0,False,3,False,12ykrk9,Cplusplus,t5_2qh6x
253,saamify,"Thanks so much man, best advice I got recently! <3","<div class=""md""><p>Thanks so much man, best advice I got recently! &lt;3</p>
</div>",1682455595.0,,False,jhp95cx,True,t3_12ykrk9,t1_jho9ogt,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jhp95cx/,1,False,4,False,12ykrk9,Cplusplus,t5_2qh6x
254,Cplusplus-ModTeam,"Your post or comment was removed under **Rule 2 - Content & Quality**. Please review the [r/CPlusPlus Rules](https://www.reddit.com/r/Cplusplus/comments/122wnqy/rcplusplus_rule_updates/).

Your post or comment was not related to C++.

If you'd like to discuss this moderator action, please feel free to send us a [ModMail](https://www.reddit.com/message/compose?to=/r/Cplusplus).","<div class=""md""><p>Your post or comment was removed under <strong>Rule 2 - Content &amp; Quality</strong>. Please review the <a href=""https://www.reddit.com/r/Cplusplus/comments/122wnqy/rcplusplus_rule_updates/"">r/CPlusPlus Rules</a>.</p>

<p>Your post or comment was not related to C++.</p>

<p>If you&#39;d like to discuss this moderator action, please feel free to send us a <a href=""https://www.reddit.com/message/compose?to=/r/Cplusplus"">ModMail</a>.</p>
</div>",1682878090.0,moderator,False,jic080a,False,t3_12ykrk9,t1_jhq6usx,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jic080a/,0,False,1,False,12ykrk9,Cplusplus,t5_2qh6x
255,R-FEEN,"I think this is what I was looking for, thanks!","<div class=""md""><p>I think this is what I was looking for, thanks!</p>
</div>",1686815486.0,,False,jo7accv,False,t3_12ykrk9,t1_jj8rzu2,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jo7accv/,0,False,1,False,12ykrk9,Cplusplus,t5_2qh6x
256,Yamoyek,Glad I could help:),"<div class=""md""><p>Glad I could help:)</p>
</div>",1682510528.0,,False,jhrw6lg,False,t3_12ykrk9,t1_jhp95cx,/r/Cplusplus/comments/12ykrk9/where_to_learn_more_about_c_other_than_the_basics/jhrw6lg/,0,False,2,False,12ykrk9,Cplusplus,t5_2qh6x
257,matu3ba,"Thanks a lot.

How will it compare to [build2](https://build2.org/build2-toolchain/doc/build2-toolchain-intro.xhtml#tldr) and [Conan](https://conan.io/index.html)?

Any comparison/analysis to simple-to-use build solutions for C/C++ would be great.","<div class=""md""><p>Thanks a lot.</p>

<p>How will it compare to <a href=""https://build2.org/build2-toolchain/doc/build2-toolchain-intro.xhtml#tldr"">build2</a> and <a href=""https://conan.io/index.html"">Conan</a>?</p>

<p>Any comparison/analysis to simple-to-use build solutions for C/C++ would be great.</p>
</div>",1602368116.0,,False,g8dqo5y,False,t3_j8rd3y,t3_j8rd3y,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8dqo5y/,1,False,5,False,j8rd3y,Cplusplus,t5_2qh6x
258,,"    if args.len() > 0 {
            match args[0].as_str() {
                ""--help"" => {
                    println!(
                        ""
    Usage: ocean build [OPTIONS]

[Clap](https://docs.rs/clap/2.33.3/clap/)?","<div class=""md""><pre><code>if args.len() &gt; 0 {
        match args[0].as_str() {
            &quot;--help&quot; =&gt; {
                println!(
                    &quot;
Usage: ocean build [OPTIONS]
</code></pre>

<p><a href=""https://docs.rs/clap/2.33.3/clap/"">Clap</a>?</p>
</div>",1602370861.0,,False,g8dzbjv,False,t3_j8rd3y,t3_j8rd3y,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8dzbjv/,1,False,3,False,j8rd3y,Cplusplus,t5_2qh6x
259,chengannur,"Why rust and why not cpp ?

Ps: Not a rust or cpp dev, just curious.","<div class=""md""><p>Why rust and why not cpp ?</p>

<p>Ps: Not a rust or cpp dev, just curious.</p>
</div>",1602416652.0,,False,g8h20r9,False,t3_j8rd3y,t3_j8rd3y,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8h20r9/,1,False,3,False,j8rd3y,Cplusplus,t5_2qh6x
260,Zakru,"I was literally just thinking why something like Cargo doesn't exist for C++. Thank you for developing this, and I hope everything goes well. Maybe I will contribute when I find the time.","<div class=""md""><p>I was literally just thinking why something like Cargo doesn&#39;t exist for C++. Thank you for developing this, and I hope everything goes well. Maybe I will contribute when I find the time.</p>
</div>",1602408384.0,,False,g8gku9t,False,t3_j8rd3y,t3_j8rd3y,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8gku9t/,1,False,1,False,j8rd3y,Cplusplus,t5_2qh6x
261,Boydebucks,"No problem mate.


> How will it compare to build2 and Conan?

> Any comparison/analysis to simple-to-use build solutions for C/C++ would be great.

I'll at some put a comparison on the project README.","<div class=""md""><p>No problem mate.</p>

<blockquote>
<p>How will it compare to build2 and Conan?</p>

<p>Any comparison/analysis to simple-to-use build solutions for C/C++ would be great.</p>
</blockquote>

<p>I&#39;ll at some put a comparison on the project README.</p>
</div>",1602370489.0,,False,g8dy4xb,True,t3_j8rd3y,t1_g8dqo5y,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8dy4xb/,0,False,1,False,j8rd3y,Cplusplus,t5_2qh6x
262,Boydebucks,Thank you! I'll look into using it,"<div class=""md""><p>Thank you! I&#39;ll look into using it</p>
</div>",1602371372.0,,False,g8e0ygi,True,t3_j8rd3y,t1_g8dzbjv,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8e0ygi/,2,False,1,False,j8rd3y,Cplusplus,t5_2qh6x
263,Boydebucks,"I find Rust easier to work with, personally.","<div class=""md""><p>I find Rust easier to work with, personally.</p>
</div>",1602430576.0,,False,g8hucea,True,t3_j8rd3y,t1_g8h20r9,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8hucea/,0,False,2,False,j8rd3y,Cplusplus,t5_2qh6x
264,Boydebucks,Thank you!,"<div class=""md""><p>Thank you!</p>
</div>",1602411732.0,,False,g8grjac,True,t3_j8rd3y,t1_g8gku9t,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8grjac/,0,False,1,False,j8rd3y,Cplusplus,t5_2qh6x
265,,"Np. Something the landing docs page doesn't show in examples is you can extract info from Cargo.toml:

    .author(clap::crate_authors!())
    .version(clap::crate_version!())

Etc.","<div class=""md""><p>Np. Something the landing docs page doesn&#39;t show in examples is you can extract info from Cargo.toml:</p>

<pre><code>.author(clap::crate_authors!())
.version(clap::crate_version!())
</code></pre>

<p>Etc.</p>
</div>",1602371790.0,,False,g8e277t,False,t3_j8rd3y,t1_g8e0ygi,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8e277t/,1,False,2,False,j8rd3y,Cplusplus,t5_2qh6x
266,protestor,Btw structopt is a bit nicer to use (it uses clap underneath). Structopt will get merged into the next version of clap.,"<div class=""md""><p>Btw structopt is a bit nicer to use (it uses clap underneath). Structopt will get merged into the next version of clap.</p>
</div>",1602440484.0,,False,g8ict5s,False,t3_j8rd3y,t1_g8e0ygi,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8ict5s/,1,False,1,False,j8rd3y,Cplusplus,t5_2qh6x
267,robin-m,"there is also a macro that does all of that at once (I forgot the name, on mobile).","<div class=""md""><p>there is also a macro that does all of that at once (I forgot the name, on mobile).</p>
</div>",1602415718.0,,False,g8gzv5o,False,t3_j8rd3y,t1_g8e277t,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8gzv5o/,0,False,1,False,j8rd3y,Cplusplus,t5_2qh6x
268,noomey,Is there an issue on github documenting this coming change? I couldn't find any,"<div class=""md""><p>Is there an issue on github documenting this coming change? I couldn&#39;t find any</p>
</div>",1602641184.0,,False,g8ra3v0,False,t3_j8rd3y,t1_g8ict5s,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8ra3v0/,1,False,1,False,j8rd3y,Cplusplus,t5_2qh6x
269,protestor,"There's this in the readme of the old preview [clap-v3](https://crates.io/crates/clap-v3#faq) (but don't use it)

> How does clap compare to structopt?

> Simple! clap is structopt. With the 3.0 release, clap imported the structopt code into it's own codebase as the clap_derive crate. Since structopt already used clap under the hood, the transition was nearly painless, and is 100% feature compatible.

> If you were using structopt before, the only thing you should have to do is change the attributes from #[structopt(...)] to #[clap(...)].

> Also the derive statements changed from #[derive(Structopt)] to #[derive(Clap)]. There is also some additional functionality that's been added to the clap_derive crate. See the documentation for that crate, for more details.

If you want to test clap 3.0, you should use [the newer 3.0.0-beta.2 preview](https://crates.io/crates/clap/3.0.0-beta.2) (read [using derive macros](https://crates.io/crates/clap/3.0.0-beta.2#using-derive-macros))

[Those are the blockers for the clap 3.0 release](https://github.com/clap-rs/clap/issues/1037). I think that [this issue](https://github.com/clap-rs/clap/issues/1684) also documents the beta releases.

[clap_derive](https://github.com/clap-rs/clap/tree/master/clap_derive) is the crate that will do the structopt stuff on clap (but I think you won't use it directly).","<div class=""md""><p>There&#39;s this in the readme of the old preview <a href=""https://crates.io/crates/clap-v3#faq"">clap-v3</a> (but don&#39;t use it)</p>

<blockquote>
<p>How does clap compare to structopt?</p>

<p>Simple! clap is structopt. With the 3.0 release, clap imported the structopt code into it&#39;s own codebase as the clap_derive crate. Since structopt already used clap under the hood, the transition was nearly painless, and is 100% feature compatible.</p>

<p>If you were using structopt before, the only thing you should have to do is change the attributes from #[structopt(...)] to #[clap(...)].</p>

<p>Also the derive statements changed from #[derive(Structopt)] to #[derive(Clap)]. There is also some additional functionality that&#39;s been added to the clap_derive crate. See the documentation for that crate, for more details.</p>
</blockquote>

<p>If you want to test clap 3.0, you should use <a href=""https://crates.io/crates/clap/3.0.0-beta.2"">the newer 3.0.0-beta.2 preview</a> (read <a href=""https://crates.io/crates/clap/3.0.0-beta.2#using-derive-macros"">using derive macros</a>)</p>

<p><a href=""https://github.com/clap-rs/clap/issues/1037"">Those are the blockers for the clap 3.0 release</a>. I think that <a href=""https://github.com/clap-rs/clap/issues/1684"">this issue</a> also documents the beta releases.</p>

<p><a href=""https://github.com/clap-rs/clap/tree/master/clap_derive"">clap_derive</a> is the crate that will do the structopt stuff on clap (but I think you won&#39;t use it directly).</p>
</div>",1602647652.0,,False,g8rk5mo,False,t3_j8rd3y,t1_g8ra3v0,/r/Cplusplus/comments/j8rd3y/ocean_a_cc_project_managerbuild_system_written_in/g8rk5mo/,0,False,1,False,j8rd3y,Cplusplus,t5_2qh6x
270,UnicycleBloke,"C++ has always had RAII. Used correctly, this guarantees efficient deterministic resource management, even in the presence of exceptions, and completely obviates the case for a garbage collector. This is most likely what Stroustrup meant.

So called modern C++ makes life easier because it permits a unique pointer which works properly (auto_ptr was OK but had serious limitations). The smart pointers and associated methods mean you almost never need to actually write 'new', though I get irritated by those who insist that you must not do so - the complexity of resource management in C++ has always be overstated in my view, and understanding how it works is important.

malloc and free have never been C++.","<div class=""md""><p>C++ has always had RAII. Used correctly, this guarantees efficient deterministic resource management, even in the presence of exceptions, and completely obviates the case for a garbage collector. This is most likely what Stroustrup meant.</p>

<p>So called modern C++ makes life easier because it permits a unique pointer which works properly (auto_ptr was OK but had serious limitations). The smart pointers and associated methods mean you almost never need to actually write &#39;new&#39;, though I get irritated by those who insist that you must not do so - the complexity of resource management in C++ has always be overstated in my view, and understanding how it works is important.</p>

<p>malloc and free have never been C++.</p>
</div>",1580064423.0,,False,ffncwvf,False,t3_eu9sog,t3_eu9sog,/r/Cplusplus/comments/eu9sog/garbage_collection/ffncwvf/,4,False,15,False,eu9sog,Cplusplus,t5_2qh6x
271,DJ_Gamedev,"Don't bring up malloc and free around modern C++ programmers. Hell, don't bring up their successors new and delete either or you'll get an earful. Smart pointers eliminate the need for the majority of allocation micromanagement and fits nicely in line with the Stroustrup quote.","<div class=""md""><p>Don&#39;t bring up malloc and free around modern C++ programmers. Hell, don&#39;t bring up their successors new and delete either or you&#39;ll get an earful. Smart pointers eliminate the need for the majority of allocation micromanagement and fits nicely in line with the Stroustrup quote.</p>
</div>",1580060618.0,,False,ffmzyu4,False,t3_eu9sog,t3_eu9sog,/r/Cplusplus/comments/eu9sog/garbage_collection/ffmzyu4/,1,False,6,False,eu9sog,Cplusplus,t5_2qh6x
272,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1580101506.0,,1629022483.0,ffpps9r,False,t3_eu9sog,t3_eu9sog,/r/Cplusplus/comments/eu9sog/garbage_collection/ffpps9r/,1,False,-5,False,eu9sog,Cplusplus,t5_2qh6x
273,,This was refreshing to read. My thoughts exactly. I feel as though I'm constantly defending raii and telling people how easy resource management is.,"<div class=""md""><p>This was refreshing to read. My thoughts exactly. I feel as though I&#39;m constantly defending raii and telling people how easy resource management is.</p>
</div>",1580110906.0,,False,ffpyfm8,False,t3_eu9sog,t1_ffncwvf,/r/Cplusplus/comments/eu9sog/garbage_collection/ffpyfm8/,1,False,3,False,eu9sog,Cplusplus,t5_2qh6x
274,former-cpp-guy,">malloc and free have never been C++.

You're right. malloc and free are C functions. We used Borland C++ back then, and we did use classes and OOD, which was the big new thing about C++ at the time, but we still used quite a few practices from C too. It was 1993 and 1994, several years before C++98, so to tell you the truth I don't even know which of the modern resource management methods were available to us back then, but I know we didn't have all the advanced features that are available today.

The quote I posted is from a modern book based on C++17 (which includes bits of C++20), in a section called Resource Management. It mostly talks about smart pointers, scope and RAII, and reasons why it is preferred over ""garbage collection"", with the difference presumably being that garbage collection allows for the accumulation of ""garbage"", whereas well-managed resources never reach the point of becoming garbage at all.","<div class=""md""><blockquote>
<p>malloc and free have never been C++.</p>
</blockquote>

<p>You&#39;re right. malloc and free are C functions. We used Borland C++ back then, and we did use classes and OOD, which was the big new thing about C++ at the time, but we still used quite a few practices from C too. It was 1993 and 1994, several years before C++98, so to tell you the truth I don&#39;t even know which of the modern resource management methods were available to us back then, but I know we didn&#39;t have all the advanced features that are available today.</p>

<p>The quote I posted is from a modern book based on C++17 (which includes bits of C++20), in a section called Resource Management. It mostly talks about smart pointers, scope and RAII, and reasons why it is preferred over &quot;garbage collection&quot;, with the difference presumably being that garbage collection allows for the accumulation of &quot;garbage&quot;, whereas well-managed resources never reach the point of becoming garbage at all.</p>
</div>",1580070167.0,,False,ffnsfve,True,t3_eu9sog,t1_ffncwvf,/r/Cplusplus/comments/eu9sog/garbage_collection/ffnsfve/,0,False,1,False,eu9sog,Cplusplus,t5_2qh6x
275,grumpieroldman,">  completely obviates the case for a garbage collector.  
  
In an object-oriented design you can easily have a valid design where the lifetime of an object is not deterministic.  
Or rather your assertion would require all such objects to be regaled to a global pool and never deallocated.  
Garbage-collection consumes fewer resources than reference-counting for these cases.  
  
I fought the battle on your side for many years but it is not true.  
Once you have a multithreaded pin-and-filter-graph RAII fails.","<div class=""md""><blockquote>
<p>completely obviates the case for a garbage collector.  </p>
</blockquote>

<p>In an object-oriented design you can easily have a valid design where the lifetime of an object is not deterministic.<br/>
Or rather your assertion would require all such objects to be regaled to a global pool and never deallocated.<br/>
Garbage-collection consumes fewer resources than reference-counting for these cases.  </p>

<p>I fought the battle on your side for many years but it is not true.<br/>
Once you have a multithreaded pin-and-filter-graph RAII fails.</p>
</div>",1580145701.0,,False,ffqx8v4,False,t3_eu9sog,t1_ffncwvf,/r/Cplusplus/comments/eu9sog/garbage_collection/ffqx8v4/,1,False,1,False,eu9sog,Cplusplus,t5_2qh6x
276,jesseschalken,">completely obviates the case for a garbage collector

Sure, if you like manually reasoning about lifetimes to ensure no reference or pointer ends up dangling.

There's a reason garbage collectors exist, and a reason Rust's borrow checker exists, because even with `unique_ptr`, `shared_ptr` and friends, getting lifetimes right in large complex C++ applications is extra work at best and extremely difficult at worst.","<div class=""md""><blockquote>
<p>completely obviates the case for a garbage collector</p>
</blockquote>

<p>Sure, if you like manually reasoning about lifetimes to ensure no reference or pointer ends up dangling.</p>

<p>There&#39;s a reason garbage collectors exist, and a reason Rust&#39;s borrow checker exists, because even with <code>unique_ptr</code>, <code>shared_ptr</code> and friends, getting lifetimes right in large complex C++ applications is extra work at best and extremely difficult at worst.</p>
</div>",1580068728.0,,False,ffnow0i,False,t3_eu9sog,t1_ffncwvf,/r/Cplusplus/comments/eu9sog/garbage_collection/ffnow0i/,1,False,1,False,eu9sog,Cplusplus,t5_2qh6x
277,,"Which is the sad thing. In reality, you're most likely using malloc and free somewhere in your code in a C++ program if you're using any C++ -compatible C libraries. In some cases, you are even supposed to free the memory returned by a C library - but if you're wrapping it with C++, you can't use delete because there's no guarantee malloc/free are used under the hood.

Therefore, free must (!!) be used in c++. Same thing can happen in the inverse (""this function takes ownership of the pointer passed in`p` and will `free` it when finished"", indicating you must use malloc even in c++).

All the absolutisms C++ devs make and get fussy about only give it a bad name.","<div class=""md""><p>Which is the sad thing. In reality, you&#39;re most likely using malloc and free somewhere in your code in a C++ program if you&#39;re using any C++ -compatible C libraries. In some cases, you are even supposed to free the memory returned by a C library - but if you&#39;re wrapping it with C++, you can&#39;t use delete because there&#39;s no guarantee malloc/free are used under the hood.</p>

<p>Therefore, free must (!!) be used in c++. Same thing can happen in the inverse (&quot;this function takes ownership of the pointer passed in<code>p</code> and will <code>free</code> it when finished&quot;, indicating you must use malloc even in c++).</p>

<p>All the absolutisms C++ devs make and get fussy about only give it a bad name.</p>
</div>",1580111180.0,,False,ffpyn7c,False,t3_eu9sog,t1_ffmzyu4,/r/Cplusplus/comments/eu9sog/garbage_collection/ffpyn7c/,1,False,1,False,eu9sog,Cplusplus,t5_2qh6x
278,,"Just use Typescript.

See? We can all hand-wave away complex, nuanced debate!","<div class=""md""><p>Just use Typescript.</p>

<p>See? We can all hand-wave away complex, nuanced debate!</p>
</div>",1580111011.0,,False,ffpyiic,False,t3_eu9sog,t1_ffpps9r,/r/Cplusplus/comments/eu9sog/garbage_collection/ffpyiic/,1,False,3,False,eu9sog,Cplusplus,t5_2qh6x
279,UnicycleBloke,"""Defending""? What's not to like? I've always thought RAII was underused, and have lost count of the conversations I've had with C++ programmers who don't seem to understand it or its implications. Destructors are arguably the most interesting and powerful feature of the whole language.

One of my learning projects in C++ was to create an OO framework which encapsulated the Win32 API. I followed a book (I've forgotten its title) whose goal was to create such a wrapper, with a heavy focus on RAII. Handles for windows, brushes, pens, devices contexts, and so on were all represented by classes which took care of the allocation and deallocation of these resources automatically. My (admittedly terrible) little library was used for one application and then discarded in favour of Borland's OWL. I think this exercise was incredibly valuable.  

I've never had formal training in any language, and have no idea how C++ is taught, but if RAII is not a key topic in CPP101, that seems like a mistake to me. Something as simple as a scoped mutex lock or interrupt disable would do. Or a ring buffer whose size is determined at runtime...","<div class=""md""><p>&quot;Defending&quot;? What&#39;s not to like? I&#39;ve always thought RAII was underused, and have lost count of the conversations I&#39;ve had with C++ programmers who don&#39;t seem to understand it or its implications. Destructors are arguably the most interesting and powerful feature of the whole language.</p>

<p>One of my learning projects in C++ was to create an OO framework which encapsulated the Win32 API. I followed a book (I&#39;ve forgotten its title) whose goal was to create such a wrapper, with a heavy focus on RAII. Handles for windows, brushes, pens, devices contexts, and so on were all represented by classes which took care of the allocation and deallocation of these resources automatically. My (admittedly terrible) little library was used for one application and then discarded in favour of Borland&#39;s OWL. I think this exercise was incredibly valuable.  </p>

<p>I&#39;ve never had formal training in any language, and have no idea how C++ is taught, but if RAII is not a key topic in CPP101, that seems like a mistake to me. Something as simple as a scoped mutex lock or interrupt disable would do. Or a ring buffer whose size is determined at runtime...</p>
</div>",1580116786.0,,False,ffq2hv1,False,t3_eu9sog,t1_ffpyfm8,/r/Cplusplus/comments/eu9sog/garbage_collection/ffq2hv1/,1,False,2,False,eu9sog,Cplusplus,t5_2qh6x
280,UnicycleBloke,"I only mean deterministic in the sense that when you are done with an object  the associated memory and other resources are freed immediately. I guess the memory part isn't so important, but the other resources are.

I'm not familiar with the term pin-and-filter, but have worked with directed acyclic graphs in C++. I don't recall any particular difficulty. However, I have been told that one of the motivations for Rust was problems such as you describe. Can you give more detail of how RAIi didn't work?","<div class=""md""><p>I only mean deterministic in the sense that when you are done with an object  the associated memory and other resources are freed immediately. I guess the memory part isn&#39;t so important, but the other resources are.</p>

<p>I&#39;m not familiar with the term pin-and-filter, but have worked with directed acyclic graphs in C++. I don&#39;t recall any particular difficulty. However, I have been told that one of the motivations for Rust was problems such as you describe. Can you give more detail of how RAIi didn&#39;t work?</p>
</div>",1580149129.0,,1580195880.0,ffr2nsz,False,t3_eu9sog,t1_ffqx8v4,/r/Cplusplus/comments/eu9sog/garbage_collection/ffr2nsz/,0,False,1,False,eu9sog,Cplusplus,t5_2qh6x
281,UnicycleBloke,"I can only speak from my own experience: resource management, lifetimes and dangling pointers have never been huge issues in my code. My bugs have generally lain elsewhere. 

Garbage collectors, in my view, create as many problems as they solve. The non-determinism has tripped me up more than once. The focus on memory rather than all types of limited resource is also a limitation. I understand that experienced users of Java and C# resort to creating pools and other data structures in order get around the performance issues of constantly allocating and forgetting memory. That is to say, they manage the garbage collector itself. 

I've seen that C# has an explicit disposal mechanism to address the issue of non-memory resources. I guess this sort of does the work of a destructor, but you must remember to call it directly, or indirectly through the ""using"" construct. RAII is a superior solution: the destructor is called automatically when an object goes out of scope - no ifs, no buts - and results in efficient automatic deterministic garbage collection. 

Rust does look interesting but, from where I'm standing, it is not remotely compelling. C++ has more features and I have almost thirty years of experience with it.","<div class=""md""><p>I can only speak from my own experience: resource management, lifetimes and dangling pointers have never been huge issues in my code. My bugs have generally lain elsewhere. </p>

<p>Garbage collectors, in my view, create as many problems as they solve. The non-determinism has tripped me up more than once. The focus on memory rather than all types of limited resource is also a limitation. I understand that experienced users of Java and C# resort to creating pools and other data structures in order get around the performance issues of constantly allocating and forgetting memory. That is to say, they manage the garbage collector itself. </p>

<p>I&#39;ve seen that C# has an explicit disposal mechanism to address the issue of non-memory resources. I guess this sort of does the work of a destructor, but you must remember to call it directly, or indirectly through the &quot;using&quot; construct. RAII is a superior solution: the destructor is called automatically when an object goes out of scope - no ifs, no buts - and results in efficient automatic deterministic garbage collection. </p>

<p>Rust does look interesting but, from where I&#39;m standing, it is not remotely compelling. C++ has more features and I have almost thirty years of experience with it.</p>
</div>",1580070947.0,,False,ffnud4d,False,t3_eu9sog,t1_ffnow0i,/r/Cplusplus/comments/eu9sog/garbage_collection/ffnud4d/,1,False,2,False,eu9sog,Cplusplus,t5_2qh6x
282,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1580136647.0,,False,ffqjxq6,False,t3_eu9sog,t1_ffpyn7c,/r/Cplusplus/comments/eu9sog/garbage_collection/ffqjxq6/,1,False,3,False,eu9sog,Cplusplus,t5_2qh6x
283,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1580352297.0,,1629020853.0,ffypyif,False,t3_eu9sog,t1_ffpyiic,/r/Cplusplus/comments/eu9sog/garbage_collection/ffypyif/,1,False,0,False,eu9sog,Cplusplus,t5_2qh6x
284,,"Agreed with all.

I should have been clearer - I defend C++ (whataboutisms regarding memory safety) by explaining RAII.","<div class=""md""><p>Agreed with all.</p>

<p>I should have been clearer - I defend C++ (whataboutisms regarding memory safety) by explaining RAII.</p>
</div>",1580131591.0,,False,ffqdul6,False,t3_eu9sog,t1_ffq2hv1,/r/Cplusplus/comments/eu9sog/garbage_collection/ffqdul6/,0,False,2,False,eu9sog,Cplusplus,t5_2qh6x
285,lustyperson,">I understand that experienced users of Java and C# resort to creating  pools and other data structures in order get around the performance  issues of constantly allocating and forgetting memory. That is to say,  they manage the garbage collector itself.

Using object pools is not something experts do in general. They use it when it is worth the effort for their special case. Thus it is no argument against a GC in Java or many programs.

[https://softwareengineering.stackexchange.com/questions/115163/is-object-pooling-a-deprecated-technique](https://softwareengineering.stackexchange.com/questions/115163/is-object-pooling-a-deprecated-technique)

Of course much depends on the used garbage collector too.

[https://www.artima.com/lejava/articles/azul\_pauseless\_gc.html](https://www.artima.com/lejava/articles/azul_pauseless_gc.html)

>Quote:  
>  
>And since at our current sub-millisecond levels there are bigger causes for   jitter, like the CPU scheduler for example, improving GC phase   shift further won't actually improve application behavior unless   those other causes are also addressed.  
>  
>Over the years—we shipped our first pauseless collector in   2005—we have been chipping away at all those little engineering   tasks. What gets done in a pause is fewer and fewer things. For   example, weak ref processing, soft ref processing, finalizer   processing are not done in a pause anymore in Azul VM.

[\[VDT19\] Concurrent Garbage Collectors: ZGC & Shenandoah by Simone Bordet \[IT\]](https://www.youtube.com/watch?v=WU_mqNBEacw) (2019-10-11).

&#x200B;

>RAII is a superior solution: the destructor is called automatically when  an object goes out of scope - no ifs, no buts - and results in  efficient automatic deterministic garbage collection.

A GC manages arbitrary references between objects and input and output of functions in a very safe and efficient way. RAII is no complete alternative. Lifetimes are no complete alternative. Simplistic reference counting is no complete alternative.","<div class=""md""><blockquote>
<p>I understand that experienced users of Java and C# resort to creating  pools and other data structures in order get around the performance  issues of constantly allocating and forgetting memory. That is to say,  they manage the garbage collector itself.</p>
</blockquote>

<p>Using object pools is not something experts do in general. They use it when it is worth the effort for their special case. Thus it is no argument against a GC in Java or many programs.</p>

<p><a href=""https://softwareengineering.stackexchange.com/questions/115163/is-object-pooling-a-deprecated-technique"">https://softwareengineering.stackexchange.com/questions/115163/is-object-pooling-a-deprecated-technique</a></p>

<p>Of course much depends on the used garbage collector too.</p>

<p><a href=""https://www.artima.com/lejava/articles/azul_pauseless_gc.html"">https://www.artima.com/lejava/articles/azul_pauseless_gc.html</a></p>

<blockquote>
<p>Quote:  </p>

<p>And since at our current sub-millisecond levels there are bigger causes for   jitter, like the CPU scheduler for example, improving GC phase   shift further won&#39;t actually improve application behavior unless   those other causes are also addressed.  </p>

<p>Over the years—we shipped our first pauseless collector in   2005—we have been chipping away at all those little engineering   tasks. What gets done in a pause is fewer and fewer things. For   example, weak ref processing, soft ref processing, finalizer   processing are not done in a pause anymore in Azul VM.</p>
</blockquote>

<p><a href=""https://www.youtube.com/watch?v=WU_mqNBEacw"">[VDT19] Concurrent Garbage Collectors: ZGC &amp; Shenandoah by Simone Bordet [IT]</a> (2019-10-11).</p>

<p>&#x200B;</p>

<blockquote>
<p>RAII is a superior solution: the destructor is called automatically when  an object goes out of scope - no ifs, no buts - and results in  efficient automatic deterministic garbage collection.</p>
</blockquote>

<p>A GC manages arbitrary references between objects and input and output of functions in a very safe and efficient way. RAII is no complete alternative. Lifetimes are no complete alternative. Simplistic reference counting is no complete alternative.</p>
</div>",1580078359.0,,1580080332.0,ffojk6w,False,t3_eu9sog,t1_ffnud4d,/r/Cplusplus/comments/eu9sog/garbage_collection/ffojk6w/,1,False,1,False,eu9sog,Cplusplus,t5_2qh6x
286,,"Yep, that's why I said

> if you're using any C++ -compatible C libraries","<div class=""md""><p>Yep, that&#39;s why I said</p>

<blockquote>
<p>if you&#39;re using any C++ -compatible C libraries</p>
</blockquote>
</div>",1580137035.0,,False,ffqkgh8,False,t3_eu9sog,t1_ffqjxq6,/r/Cplusplus/comments/eu9sog/garbage_collection/ffqkgh8/,0,False,1,False,eu9sog,Cplusplus,t5_2qh6x
287,,It is most definitely not as fast as C++,"<div class=""md""><p>It is most definitely not as fast as C++</p>
</div>",1580387353.0,,False,ffznsna,False,t3_eu9sog,t1_ffypyif,/r/Cplusplus/comments/eu9sog/garbage_collection/ffznsna/,1,False,2,False,eu9sog,Cplusplus,t5_2qh6x
288,grumpieroldman,"> Using object pools is not something experts do in general. They use it when it is worth the effort for their special case. Thus it is no argument against a GC in Java or many programs.

I have always had to resort to using object pools to elide GC non-determinism to get our programs to run correctly.  
We even force JIT at installation because that cannot happen during execution without screwing things up.  
Unless your project has no-GUI and-also interfaces to no-hardware what you are claiming is Ivory Tower bullshit.","<div class=""md""><blockquote>
<p>Using object pools is not something experts do in general. They use it when it is worth the effort for their special case. Thus it is no argument against a GC in Java or many programs.</p>
</blockquote>

<p>I have always had to resort to using object pools to elide GC non-determinism to get our programs to run correctly.<br/>
We even force JIT at installation because that cannot happen during execution without screwing things up.<br/>
Unless your project has no-GUI and-also interfaces to no-hardware what you are claiming is Ivory Tower bullshit.</p>
</div>",1580145972.0,,False,ffqxo3o,False,t3_eu9sog,t1_ffojk6w,/r/Cplusplus/comments/eu9sog/garbage_collection/ffqxo3o/,1,False,1,False,eu9sog,Cplusplus,t5_2qh6x
289,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1580395572.0,,1629020850.0,ffzxpvg,False,t3_eu9sog,t1_ffznsna,/r/Cplusplus/comments/eu9sog/garbage_collection/ffzxpvg/,1,False,0,False,eu9sog,Cplusplus,t5_2qh6x
290,lustyperson,">Unless your project has no-GUI and-also interfaces to no-hardware what you are claiming is Ivory Tower bullshit.

Your username suits you.

Most GUI software uses automatic memory management. Have you ever heard of IPhone and Android and Javascript?

Programmers using the Unreal Engine can use a garbage collector.

[https://wiki.unrealengine.com/Garbage\_Collection\_Overview](https://wiki.unrealengine.com/Garbage_Collection_Overview)

Even Java Card 3.0 has a GC.

[https://en.wikipedia.org/wiki/Java\_Card](https://en.wikipedia.org/wiki/Java_Card)

I guess you made a mistake in your sentence. All programs use hardware. And if you write a device driver, you probably do not need a GC.

Maybe you are trolling and I am wasting my time for yet another useless discussion about GC that has been settled since the first GC in Lisp.","<div class=""md""><blockquote>
<p>Unless your project has no-GUI and-also interfaces to no-hardware what you are claiming is Ivory Tower bullshit.</p>
</blockquote>

<p>Your username suits you.</p>

<p>Most GUI software uses automatic memory management. Have you ever heard of IPhone and Android and Javascript?</p>

<p>Programmers using the Unreal Engine can use a garbage collector.</p>

<p><a href=""https://wiki.unrealengine.com/Garbage_Collection_Overview"">https://wiki.unrealengine.com/Garbage_Collection_Overview</a></p>

<p>Even Java Card 3.0 has a GC.</p>

<p><a href=""https://en.wikipedia.org/wiki/Java_Card"">https://en.wikipedia.org/wiki/Java_Card</a></p>

<p>I guess you made a mistake in your sentence. All programs use hardware. And if you write a device driver, you probably do not need a GC.</p>

<p>Maybe you are trolling and I am wasting my time for yet another useless discussion about GC that has been settled since the first GC in Lisp.</p>
</div>",1580149688.0,,1580150483.0,ffr3k65,False,t3_eu9sog,t1_ffqxo3o,/r/Cplusplus/comments/eu9sog/garbage_collection/ffr3k65/,0,False,2,False,eu9sog,Cplusplus,t5_2qh6x
291,,"Rust uses libc, not its own syscall wrappers, and the reference counter prevents you from sharing memory safely and from performing a constant time lookup in a list of references, something their reference counter can't safely do at a theoretical level.

Comparing javascript and c++ seriously, like you are, is hilarious.","<div class=""md""><p>Rust uses libc, not its own syscall wrappers, and the reference counter prevents you from sharing memory safely and from performing a constant time lookup in a list of references, something their reference counter can&#39;t safely do at a theoretical level.</p>

<p>Comparing javascript and c++ seriously, like you are, is hilarious.</p>
</div>",1580399892.0,,False,fg04a5u,False,t3_eu9sog,t1_ffzxpvg,/r/Cplusplus/comments/eu9sog/garbage_collection/fg04a5u/,1,False,2,False,eu9sog,Cplusplus,t5_2qh6x
292,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1580421868.0,,1629020847.0,fg16t5a,False,t3_eu9sog,t1_fg04a5u,/r/Cplusplus/comments/eu9sog/garbage_collection/fg16t5a/,1,False,0,False,eu9sog,Cplusplus,t5_2qh6x
293,,mmk.,"<div class=""md""><p>mmk.</p>
</div>",1580427428.0,,False,fg1hy0r,False,t3_eu9sog,t1_fg16t5a,/r/Cplusplus/comments/eu9sog/garbage_collection/fg1hy0r/,0,False,1,False,eu9sog,Cplusplus,t5_2qh6x
294,,"I mean, I would say that after 10 years you should be looking for interesting challenges, not shying away from them.

I would learn C++ if you think you'll have some problem to apply it to. Trying to learn a language without having a concrete plan to *use* what you've learned is a waste of time. At least for me, I learn it better and retain it longer if I'm actually using it for something.","<div class=""md""><p>I mean, I would say that after 10 years you should be looking for interesting challenges, not shying away from them.</p>

<p>I would learn C++ if you think you&#39;ll have some problem to apply it to. Trying to learn a language without having a concrete plan to <em>use</em> what you&#39;ve learned is a waste of time. At least for me, I learn it better and retain it longer if I&#39;m actually using it for something.</p>
</div>",1637678851.0,,False,hlrtnsg,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlrtnsg/,2,False,23,False,r0bl0v,Cplusplus,t5_2qh6x
295,goodgamin,"There's a lot of fear around C++, and I never understood it. I know a little PHP, a little Java, I've dabbled in Python, and I really like C++ the best. I learned C++ on my own, I purchased a thick book for $50 through a used bookstore online. I thought it was a really straightforward language, even though it does have a lot of details. But it's super flexible. You can do anything, and that's what I like most about it.","<div class=""md""><p>There&#39;s a lot of fear around C++, and I never understood it. I know a little PHP, a little Java, I&#39;ve dabbled in Python, and I really like C++ the best. I learned C++ on my own, I purchased a thick book for $50 through a used bookstore online. I thought it was a really straightforward language, even though it does have a lot of details. But it&#39;s super flexible. You can do anything, and that&#39;s what I like most about it.</p>
</div>",1637680089.0,,False,hlrwh4i,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlrwh4i/,2,False,12,False,r0bl0v,Cplusplus,t5_2qh6x
296,Joshument,probably better to ask in a general programming subreddit bevause people will be biased here. In my opinion if you want your code to be super fast then go for it,"<div class=""md""><p>probably better to ask in a general programming subreddit bevause people will be biased here. In my opinion if you want your code to be super fast then go for it</p>
</div>",1637672547.0,,False,hlrh707,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlrh707/,0,False,8,False,r0bl0v,Cplusplus,t5_2qh6x
297,Tremolat,"Quality skills that produce quality results are hard to learn and definitely take time to master. C++ is a challenge for programmers trained in Playskool languages in the same way as Chinese is hard for native English speakers. It takes years of training and practice to know either fluently. You'll make many mistakes along the way, but each effort is progress. Like Chinese, C++ has a lot of words you need to memorize and understand when to use in context. But, eventually, it'll click and fluency achieved. But then, as with any language, just knowing it doesn't mean you can produce meaningful results. That's a completely different skill set.","<div class=""md""><p>Quality skills that produce quality results are hard to learn and definitely take time to master. C++ is a challenge for programmers trained in Playskool languages in the same way as Chinese is hard for native English speakers. It takes years of training and practice to know either fluently. You&#39;ll make many mistakes along the way, but each effort is progress. Like Chinese, C++ has a lot of words you need to memorize and understand when to use in context. But, eventually, it&#39;ll click and fluency achieved. But then, as with any language, just knowing it doesn&#39;t mean you can produce meaningful results. That&#39;s a completely different skill set.</p>
</div>",1637672771.0,,False,hlrhkqk,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlrhkqk/,0,False,3,False,r0bl0v,Cplusplus,t5_2qh6x
298,RolandMT32,"As a programmer, don't be afraid of difficult things.  I think C++ is actually a great language and has features that even newer languages don't have (such as multiple inheritance, pointers, etc.).  I think knowing C++ will give a good base of knowledge that can help to understand other languages.","<div class=""md""><p>As a programmer, don&#39;t be afraid of difficult things.  I think C++ is actually a great language and has features that even newer languages don&#39;t have (such as multiple inheritance, pointers, etc.).  I think knowing C++ will give a good base of knowledge that can help to understand other languages.</p>
</div>",1637685450.0,,False,hls9hja,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hls9hja/,0,False,3,False,r0bl0v,Cplusplus,t5_2qh6x
299,KingAggressive1498,"C++ was my second language (my first was Java). I found _some things_ to be overly challenging but I didn't find it challenging in general. I was 16 when I started learning C++.

The biggest thing that threw me was not getting an exception for low-level errors (buffer overflow, arithmetic error, etc) but learning how to do a stack trace (which currently requires non-trivial OS and architecture specific code or a third party library that abstracts over that stuff, but a very useful class for this has been approved for inclusion in C++23) helped a lot with dealing with them when they resulted in a crash. Unfortunately these low level errors are often ""silent"" bugs because they really require ahead-of-time checks to catch reliably, and that's just counter to C++'s general design philosophy of ""don't pay for what you don't need"" (and you don't need these checks if you write your code properly).","<div class=""md""><p>C++ was my second language (my first was Java). I found <em>some things</em> to be overly challenging but I didn&#39;t find it challenging in general. I was 16 when I started learning C++.</p>

<p>The biggest thing that threw me was not getting an exception for low-level errors (buffer overflow, arithmetic error, etc) but learning how to do a stack trace (which currently requires non-trivial OS and architecture specific code or a third party library that abstracts over that stuff, but a very useful class for this has been approved for inclusion in C++23) helped a lot with dealing with them when they resulted in a crash. Unfortunately these low level errors are often &quot;silent&quot; bugs because they really require ahead-of-time checks to catch reliably, and that&#39;s just counter to C++&#39;s general design philosophy of &quot;don&#39;t pay for what you don&#39;t need&quot; (and you don&#39;t need these checks if you write your code properly).</p>
</div>",1637720729.0,,False,hlumblh,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlumblh/,0,False,2,False,r0bl0v,Cplusplus,t5_2qh6x
300,Exe_plorer,"C++ is definitely worth it.
You can integrate it easily with network applications, etc.
If you know C, then C# is like the bridge to C++.
And it's really not that difficult.

There are plenty of functions where you have 2 syntaxes, exemple printf works in C++, but you should better use cout>> from C++ library, not to be confused after.

EDIT: I mean C++ can interpret some C functions, but in fact the compiler converts it C++ syntax.
And I just took the example of printf that is a C function, and cout is a C++ function.
Both wil work on C++.

I wrote this message because I thought you know C, but as you have written somewhere here, you don't really ""enjoy,"" pointers.. so maybe you don't know C, I have no idea in fact, I made a suggestion based on your comment and my own interpretation ..

The pointers are the easiest way to do some specific functions.

You have a variable1 with a value1 and a value2 for where it's located on memory , you can make a pointer to the variable1, the pointer has also a memory address, value3, and it's ""content"" is the variable1.

If you have 2 layers function, like you call a function1 you have written, witch calls another function2, witch works on the variable1, you will need to pass the pointer1 adress (and not the value of variable1 of course or its useless) to the pointer2 that gives itn to your sub-prog.. finally it will work on the variable1 located at the address you passed initially. You can see the pointer as a way to pass a variable to a function.
And that goes as long as you will.
In this example you pass *pointer1 to **pointer2 and function works on the content ot what's in this address (important to understand, or can crash random things running on your PC'.. until PC freeze.. yes it's funny to know yiu can do a lot.
Hope this helps, I know it's hard to get it at start.
It's the most annoying part haha,;).

Draw it on paper to understand more easily.

All good.","<div class=""md""><p>C++ is definitely worth it.
You can integrate it easily with network applications, etc.
If you know C, then C# is like the bridge to C++.
And it&#39;s really not that difficult.</p>

<p>There are plenty of functions where you have 2 syntaxes, exemple printf works in C++, but you should better use cout&gt;&gt; from C++ library, not to be confused after.</p>

<p>EDIT: I mean C++ can interpret some C functions, but in fact the compiler converts it C++ syntax.
And I just took the example of printf that is a C function, and cout is a C++ function.
Both wil work on C++.</p>

<p>I wrote this message because I thought you know C, but as you have written somewhere here, you don&#39;t really &quot;enjoy,&quot; pointers.. so maybe you don&#39;t know C, I have no idea in fact, I made a suggestion based on your comment and my own interpretation ..</p>

<p>The pointers are the easiest way to do some specific functions.</p>

<p>You have a variable1 with a value1 and a value2 for where it&#39;s located on memory , you can make a pointer to the variable1, the pointer has also a memory address, value3, and it&#39;s &quot;content&quot; is the variable1.</p>

<p>If you have 2 layers function, like you call a function1 you have written, witch calls another function2, witch works on the variable1, you will need to pass the pointer1 adress (and not the value of variable1 of course or its useless) to the pointer2 that gives itn to your sub-prog.. finally it will work on the variable1 located at the address you passed initially. You can see the pointer as a way to pass a variable to a function.
And that goes as long as you will.
In this example you pass <em>pointer1 to *</em>pointer2 and function works on the content ot what&#39;s in this address (important to understand, or can crash random things running on your PC&#39;.. until PC freeze.. yes it&#39;s funny to know yiu can do a lot.
Hope this helps, I know it&#39;s hard to get it at start.
It&#39;s the most annoying part haha,;).</p>

<p>Draw it on paper to understand more easily.</p>

<p>All good.</p>
</div>",1638629207.0,,1638682630.0,hn76lze,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hn76lze/,1,False,2,False,r0bl0v,Cplusplus,t5_2qh6x
301,0raymondjiang0,"Thank you very much for your suggestions, I think I can try C++ :)","<div class=""md""><p>Thank you very much for your suggestions, I think I can try C++ :)</p>
</div>",1637717208.0,,False,hlueu8z,True,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlueu8z/,0,False,1,False,r0bl0v,Cplusplus,t5_2qh6x
302,vonadz,Try Rust.,"<div class=""md""><p>Try Rust.</p>
</div>",1637680118.0,,False,hlrwjh9,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlrwjh9/,0,False,-5,False,r0bl0v,Cplusplus,t5_2qh6x
303,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1637673746.0,,False,hlrjawn,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlrjawn/,1,False,-3,False,r0bl0v,Cplusplus,t5_2qh6x
304,AlchemistAlex,It's pretty similar to JavaScript,"<div class=""md""><p>It&#39;s pretty similar to JavaScript</p>
</div>",1637689763.0,,False,hlskoto,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlskoto/,0,False,-3,False,r0bl0v,Cplusplus,t5_2qh6x
305,vhite,Do you have a reason to learn it?,"<div class=""md""><p>Do you have a reason to learn it?</p>
</div>",1637674930.0,,False,hlrlinf,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlrlinf/,0,False,1,False,r0bl0v,Cplusplus,t5_2qh6x
306,MCRusher,"It gets very deep as complexity increases, but the basics are pretty shallow.

Make frequent uses of docs like cppreference and probably use C++17 at least, so the docs are mostly reflective of the version you're using.","<div class=""md""><p>It gets very deep as complexity increases, but the basics are pretty shallow.</p>

<p>Make frequent uses of docs like cppreference and probably use C++17 at least, so the docs are mostly reflective of the version you&#39;re using.</p>
</div>",1637687639.0,,False,hlsf4gy,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlsf4gy/,1,False,1,False,r0bl0v,Cplusplus,t5_2qh6x
307,Creapermann,"It depends on what you want to do/you like, if c++ is a good language to do what you want to do, of course, if you just want some experience with c++, why not? It’s a great language and it will always be a benefit knowing something","<div class=""md""><p>It depends on what you want to do/you like, if c++ is a good language to do what you want to do, of course, if you just want some experience with c++, why not? It’s a great language and it will always be a benefit knowing something</p>
</div>",1637707916.0,,False,hltuizo,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hltuizo/,0,False,1,False,r0bl0v,Cplusplus,t5_2qh6x
308,Expensive_Drawer1,"I am learning c++, my first language, after this I am going for Java and SQL then python. Starting from scratch c++ is fun, lots to learn, lots of details, I might not get A but if I get B grade, I will be happy. Almost end of semester.","<div class=""md""><p>I am learning c++, my first language, after this I am going for Java and SQL then python. Starting from scratch c++ is fun, lots to learn, lots of details, I might not get A but if I get B grade, I will be happy. Almost end of semester.</p>
</div>",1638460393.0,,False,hmxzk3d,False,t3_r0bl0v,t3_r0bl0v,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hmxzk3d/,0,False,1,False,r0bl0v,Cplusplus,t5_2qh6x
309,CorysInTheHouse69,"For me I learn to languages to find new ways to solve a problem. Or even just to learn there’s just to learn new ways of thinking so I can go about tasks differently, even if there’s no problem to begin with. But Ik what you’re saying and it’s true. If there’s no way you can apply anything from learning language (or learning anything for that matter) it’s useless","<div class=""md""><p>For me I learn to languages to find new ways to solve a problem. Or even just to learn there’s just to learn new ways of thinking so I can go about tasks differently, even if there’s no problem to begin with. But Ik what you’re saying and it’s true. If there’s no way you can apply anything from learning language (or learning anything for that matter) it’s useless</p>
</div>",1637691259.0,,False,hlsok1o,False,t3_r0bl0v,t1_hlrtnsg,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlsok1o/,0,False,6,False,r0bl0v,Cplusplus,t5_2qh6x
310,MCRusher,"I kinda disagree, I follow and like ziglang but hardly ever write code in it.

But I did learn a design pattern compatible with C and C++ to implement inheritance, and I use that regularly.

I didn't even know that pattern existed before I started, so obviously I wasn't looking to learn about it.

I didn't go in expected to learn something specific, I just went in to learn something new.

That's why I follow lots of new languages, and especially because I want to design my own eventually.","<div class=""md""><p>I kinda disagree, I follow and like ziglang but hardly ever write code in it.</p>

<p>But I did learn a design pattern compatible with C and C++ to implement inheritance, and I use that regularly.</p>

<p>I didn&#39;t even know that pattern existed before I started, so obviously I wasn&#39;t looking to learn about it.</p>

<p>I didn&#39;t go in expected to learn something specific, I just went in to learn something new.</p>

<p>That&#39;s why I follow lots of new languages, and especially because I want to design my own eventually.</p>
</div>",1637693015.0,,False,hlst31z,False,t3_r0bl0v,t1_hlrtnsg,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlst31z/,0,False,4,False,r0bl0v,Cplusplus,t5_2qh6x
311,trees91,"For most people the scary part comes in a few flavors: Pointers, pass by value/ref/ptr, const correctness, garbage collection, and just general memory management issues.

Many languages trade raw potential efficiency for more comfort/safety, for instance in Java everything is pass-by-value to avoid troubles with shared references, and the virtual machine handles memory/heap management","<div class=""md""><p>For most people the scary part comes in a few flavors: Pointers, pass by value/ref/ptr, const correctness, garbage collection, and just general memory management issues.</p>

<p>Many languages trade raw potential efficiency for more comfort/safety, for instance in Java everything is pass-by-value to avoid troubles with shared references, and the virtual machine handles memory/heap management</p>
</div>",1637725144.0,,False,hluvjnn,False,t3_r0bl0v,t1_hlrwh4i,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hluvjnn/,1,False,2,False,r0bl0v,Cplusplus,t5_2qh6x
312,Creapermann,i feel exactly the same,"<div class=""md""><p>i feel exactly the same</p>
</div>",1637736933.0,,False,hlvg7bi,False,t3_r0bl0v,t1_hlrwh4i,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlvg7bi/,0,False,1,False,r0bl0v,Cplusplus,t5_2qh6x
313,0raymondjiang0,Thank you,"<div class=""md""><p>Thank you</p>
</div>",1638665561.0,,False,hn9j8ps,True,t3_r0bl0v,t1_hn76lze,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hn9j8ps/,0,False,1,False,r0bl0v,Cplusplus,t5_2qh6x
314,MCRusher,"Those are exactly the kind of things they should not start with, trying just to get into C++ to start with.

Wanna tell them about virtual destructors next?","<div class=""md""><p>Those are exactly the kind of things they should not start with, trying just to get into C++ to start with.</p>

<p>Wanna tell them about virtual destructors next?</p>
</div>",1637687747.0,,False,hlsfeom,False,t3_r0bl0v,t1_hlrjawn,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlsfeom/,2,False,7,False,r0bl0v,Cplusplus,t5_2qh6x
315,0raymondjiang0,cppreference is a great website. thanks,"<div class=""md""><p>cppreference is a great website. thanks</p>
</div>",1637717938.0,,False,hlugef4,True,t3_r0bl0v,t1_hlsf4gy,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlugef4/,0,False,2,False,r0bl0v,Cplusplus,t5_2qh6x
316,Exe_plorer,"That's why you should have a look on C first.
Personally, learning ASM was really nice, you clearly understand how your memory works, and you can start to play with it and make a polymorphic progs, it's always grateful when it works haha.
Just have to choose a chip, we learned at that time 6800, 8800, ...it's Always the same, just more  ""variables"", you learn how the Push (the battery stack) works..
I really think it's a good idea to learn Assembler, all hated it, but I loved it.
And yes there you can littteraly do everyrhing, as you write-read from wherever you want.
Also you have to calculate where to put this or that, so you get used with 32 bits vs 64 bits for example.
Yes this is the kind of language you write down on paper first ..

EDIT: that's why I don't like Java or others, the compiler makes choices for you ..yes it seems easier for most, but not for me, because it means I know what my prog is doing, but have no idea how my prog  works.

And I can get that pointers, addresses etc is not easy, it's true. But once you know how it goes, suddenly everything is far more easy, and you can develop nice projects.

All good to you!","<div class=""md""><p>That&#39;s why you should have a look on C first.
Personally, learning ASM was really nice, you clearly understand how your memory works, and you can start to play with it and make a polymorphic progs, it&#39;s always grateful when it works haha.
Just have to choose a chip, we learned at that time 6800, 8800, ...it&#39;s Always the same, just more  &quot;variables&quot;, you learn how the Push (the battery stack) works..
I really think it&#39;s a good idea to learn Assembler, all hated it, but I loved it.
And yes there you can littteraly do everyrhing, as you write-read from wherever you want.
Also you have to calculate where to put this or that, so you get used with 32 bits vs 64 bits for example.
Yes this is the kind of language you write down on paper first ..</p>

<p>EDIT: that&#39;s why I don&#39;t like Java or others, the compiler makes choices for you ..yes it seems easier for most, but not for me, because it means I know what my prog is doing, but have no idea how my prog  works.</p>

<p>And I can get that pointers, addresses etc is not easy, it&#39;s true. But once you know how it goes, suddenly everything is far more easy, and you can develop nice projects.</p>

<p>All good to you!</p>
</div>",1638629776.0,,1638631411.0,hn77rrb,False,t3_r0bl0v,t1_hluvjnn,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hn77rrb/,1,False,1,False,r0bl0v,Cplusplus,t5_2qh6x
317,SupermanLeRetour,"I mean OP has been a programmer for 10 years, so the basis of the C++ language shouldn't be too hard to handle. If he's already used OOP langages, it's just a matter of learning the specific keywords. Then they can quickly dabble into C++ specific features like template meta programming, virtual inheritance, etc. It really depends on what OP is used to, but they're not an absolute beginner.","<div class=""md""><p>I mean OP has been a programmer for 10 years, so the basis of the C++ language shouldn&#39;t be too hard to handle. If he&#39;s already used OOP langages, it&#39;s just a matter of learning the specific keywords. Then they can quickly dabble into C++ specific features like template meta programming, virtual inheritance, etc. It really depends on what OP is used to, but they&#39;re not an absolute beginner.</p>
</div>",1637709433.0,,False,hltxzzq,False,t3_r0bl0v,t1_hlsfeom,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hltxzzq/,0,False,2,False,r0bl0v,Cplusplus,t5_2qh6x
318,Creapermann,After let him find out perfect forwarding by himself,"<div class=""md""><p>After let him find out perfect forwarding by himself</p>
</div>",1637736997.0,,False,hlvgalh,False,t3_r0bl0v,t1_hlsfeom,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hlvgalh/,0,False,1,False,r0bl0v,Cplusplus,t5_2qh6x
319,trees91,"Yeah, I mean I learned x86 Assembly in college during my CS degree, and I agree generally that it helped immensely in understanding what the machine ends up actually doing… but lots of folks did that and then immediately jumped to learning “modern” C++ (11 lol) soon after and the disconnect between the two is pretty strong. Without the help of a good professor or a lot of outside work and research, the gap between the two is not generally bridged in my experience.","<div class=""md""><p>Yeah, I mean I learned x86 Assembly in college during my CS degree, and I agree generally that it helped immensely in understanding what the machine ends up actually doing… but lots of folks did that and then immediately jumped to learning “modern” C++ (11 lol) soon after and the disconnect between the two is pretty strong. Without the help of a good professor or a lot of outside work and research, the gap between the two is not generally bridged in my experience.</p>
</div>",1638636407.0,,False,hn7maec,False,t3_r0bl0v,t1_hn77rrb,/r/Cplusplus/comments/r0bl0v/should_i_start_to_learn_c_after_ten_years_as_a/hn7maec/,0,False,1,False,r0bl0v,Cplusplus,t5_2qh6x
320,jackbrucesimpson,"I enjoyed listening to these guys, shame they haven't released any new content for the past year.","<div class=""md""><p>I enjoyed listening to these guys, shame they haven&#39;t released any new content for the past year.</p>
</div>",1473220623.0,,False,d7cexg2,False,t3_51ef27,t3_51ef27,/r/Cplusplus/comments/51ef27/the_first_podcast_by_c_developers_for_c_developers/d7cexg2/,1,False,1,False,51ef27,Cplusplus,t5_2qh6x
321,Koxymon,"Never listened to this (because I didn't know this) but will do that asap! What do these guys talk usually talk about? I mean, ofc they talk about C++, but could one of you give me some examples?","<div class=""md""><p>Never listened to this (because I didn&#39;t know this) but will do that asap! What do these guys talk usually talk about? I mean, ofc they talk about C++, but could one of you give me some examples?</p>
</div>",1479398888.0,,False,da4bmsh,False,t3_51ef27,t3_51ef27,/r/Cplusplus/comments/51ef27/the_first_podcast_by_c_developers_for_c_developers/da4bmsh/,0,False,1,False,51ef27,Cplusplus,t5_2qh6x
322,alarobric,There's weekly podcasts - are you subscribed to an different feed or something?,"<div class=""md""><p>There&#39;s weekly podcasts - are you subscribed to an different feed or something?</p>
</div>",1475732536.0,,False,d8g4367,False,t3_51ef27,t1_d7cexg2,/r/Cplusplus/comments/51ef27/the_first_podcast_by_c_developers_for_c_developers/d8g4367/,1,False,1,False,51ef27,Cplusplus,t5_2qh6x
323,jackbrucesimpson,"hmm that's really strange, for some reason my podcast app hadn't received any new casts from them in ages - thanks for replying I'm trying to fix it because I really did enjoy listening to it!","<div class=""md""><p>hmm that&#39;s really strange, for some reason my podcast app hadn&#39;t received any new casts from them in ages - thanks for replying I&#39;m trying to fix it because I really did enjoy listening to it!</p>
</div>",1475746667.0,,False,d8g8ksz,False,t3_51ef27,t1_d8g4367,/r/Cplusplus/comments/51ef27/the_first_podcast_by_c_developers_for_c_developers/d8g8ksz/,0,False,1,False,51ef27,Cplusplus,t5_2qh6x
324,cam10159,"Your method seems simple but quite effective, what resource did yoy use for the graphics? ","<div class=""md""><p>Your method seems simple but quite effective, what resource did yoy use for the graphics? </p>
</div>",1552959918.0,,False,eiuicgu,False,t3_b2m6c7,t3_b2m6c7,/r/Cplusplus/comments/b2m6c7/first_games_in_c_building_a_simple_racing_ai/eiuicgu/,1,False,3,False,b2m6c7,Cplusplus,t5_2qh6x
325,every_day_is_a_plus,Pretty clever solution! The beauty s in the simplicity!,"<div class=""md""><p>Pretty clever solution! The beauty s in the simplicity!</p>
</div>",1552999688.0,,False,eivgvnd,False,t3_b2m6c7,t3_b2m6c7,/r/Cplusplus/comments/b2m6c7/first_games_in_c_building_a_simple_racing_ai/eivgvnd/,1,False,2,False,b2m6c7,Cplusplus,t5_2qh6x
326,s0lly,"The graphics are all drawn using pixel-drawing routines using the Chili framework (which allows for a simple way to plot pixels to the screen), using my own (very basic) art.

All drawing routines are therefore basically my own code. The ground drawing routine was inspired by a very cool video by javidx9 - I think I linked to it in the description to my video.","<div class=""md""><p>The graphics are all drawn using pixel-drawing routines using the Chili framework (which allows for a simple way to plot pixels to the screen), using my own (very basic) art.</p>

<p>All drawing routines are therefore basically my own code. The ground drawing routine was inspired by a very cool video by javidx9 - I think I linked to it in the description to my video.</p>
</div>",1553020232.0,,False,eiwbyu0,True,t3_b2m6c7,t1_eiuicgu,/r/Cplusplus/comments/b2m6c7/first_games_in_c_building_a_simple_racing_ai/eiwbyu0/,0,False,1,False,b2m6c7,Cplusplus,t5_2qh6x
327,s0lly,Thanks! It works surprising well for so few rules!,"<div class=""md""><p>Thanks! It works surprising well for so few rules!</p>
</div>",1553020067.0,,False,eiwboxb,True,t3_b2m6c7,t1_eivgvnd,/r/Cplusplus/comments/b2m6c7/first_games_in_c_building_a_simple_racing_ai/eiwboxb/,0,False,1,False,b2m6c7,Cplusplus,t5_2qh6x
328,TheDefalt8,"most of them are still in development but here are some lightweight libraries

[axl.math](https://github.com/Defalt8/axl.math)

[axl.ds](https://github.com/Defalt8/axl.ds) - data structures

[axl.cm](https://github.com/Defalt8/axl.cm) - common [in dev]

[axl.glfl](https://github.com/Defalt8/axl.glfl) - C++ OpenGL function loader

[axl.gl](https://github.com/Defalt8/axl.gl) - OpenGL based graphics library

[axl.ge](https://github.com/Defalt8/axl.ge) - game engine, [in dev]

[axl.media](https://github.com/Defalt8/axl.media) - [in dev]","<div class=""md""><p>most of them are still in development but here are some lightweight libraries</p>

<p><a href=""https://github.com/Defalt8/axl.math"">axl.math</a></p>

<p><a href=""https://github.com/Defalt8/axl.ds"">axl.ds</a> - data structures</p>

<p><a href=""https://github.com/Defalt8/axl.cm"">axl.cm</a> - common [in dev]</p>

<p><a href=""https://github.com/Defalt8/axl.glfl"">axl.glfl</a> - C++ OpenGL function loader</p>

<p><a href=""https://github.com/Defalt8/axl.gl"">axl.gl</a> - OpenGL based graphics library</p>

<p><a href=""https://github.com/Defalt8/axl.ge"">axl.ge</a> - game engine, [in dev]</p>

<p><a href=""https://github.com/Defalt8/axl.media"">axl.media</a> - [in dev]</p>
</div>",1638721801.0,,False,hnc76zj,False,t3_r9dukh,t3_r9dukh,/r/Cplusplus/comments/r9dukh/whats_some_github_repo_to_take_a_look_at_to_get_a/hnc76zj/,1,False,11,False,r9dukh,Cplusplus,t5_2qh6x
329,mrexodia,"Perhaps you’re interested in my brain child: https://github.com/x64dbg/x64dbg it’s a mess code-wise, but it’s definitely used in the real world 🤷‍♂️","<div class=""md""><p>Perhaps you’re interested in my brain child: <a href=""https://github.com/x64dbg/x64dbg"">https://github.com/x64dbg/x64dbg</a> it’s a mess code-wise, but it’s definitely used in the real world 🤷‍♂️</p>
</div>",1638711282.0,,False,hnbl8zg,False,t3_r9dukh,t3_r9dukh,/r/Cplusplus/comments/r9dukh/whats_some_github_repo_to_take_a_look_at_to_get_a/hnbl8zg/,1,False,10,False,r9dukh,Cplusplus,t5_2qh6x
330,Middlewarian,"I have a [code generator](https://github.com/Ebenezer-group/onwards) that's a mix of closed and open-source code.  I'm looking for some external users so it hasn't been completely realized yet, but I did give [Bjarne Stroustrup a demo of it](https://www.reddit.com/r/codereview/comments/qo8yq3/c_programs/) and it's written as a service, which is as real as software gets.   The service architecture helps me to minimize the amount of code that users have to download/build/maintain.","<div class=""md""><p>I have a <a href=""https://github.com/Ebenezer-group/onwards"">code generator</a> that&#39;s a mix of closed and open-source code.  I&#39;m looking for some external users so it hasn&#39;t been completely realized yet, but I did give <a href=""https://www.reddit.com/r/codereview/comments/qo8yq3/c_programs/"">Bjarne Stroustrup a demo of it</a> and it&#39;s written as a service, which is as real as software gets.   The service architecture helps me to minimize the amount of code that users have to download/build/maintain.</p>
</div>",1638733098.0,,False,hnd0v34,False,t3_r9dukh,t3_r9dukh,/r/Cplusplus/comments/r9dukh/whats_some_github_repo_to_take_a_look_at_to_get_a/hnd0v34/,0,False,3,False,r9dukh,Cplusplus,t5_2qh6x
331,Nikolai3d,https://github.com/stlab/adobe_source_libraries,"<div class=""md""><p><a href=""https://github.com/stlab/adobe_source_libraries"">https://github.com/stlab/adobe_source_libraries</a></p>
</div>",1638722865.0,,False,hnc9pvs,False,t3_r9dukh,t3_r9dukh,/r/Cplusplus/comments/r9dukh/whats_some_github_repo_to_take_a_look_at_to_get_a/hnc9pvs/,0,False,3,False,r9dukh,Cplusplus,t5_2qh6x
332,iobug,These look like really good libraries to learn from. Thanks a bunch for this.,"<div class=""md""><p>These look like really good libraries to learn from. Thanks a bunch for this.</p>
</div>",1638722136.0,,False,hnc7zjk,True,t3_r9dukh,t1_hnc76zj,/r/Cplusplus/comments/r9dukh/whats_some_github_repo_to_take_a_look_at_to_get_a/hnc7zjk/,1,False,4,False,r9dukh,Cplusplus,t5_2qh6x
333,iobug,"Awesome, of course I'll try this one... Thanks a lot 🙏🏼","<div class=""md""><p>Awesome, of course I&#39;ll try this one... Thanks a lot 🙏🏼</p>
</div>",1638721985.0,,False,hnc7moa,True,t3_r9dukh,t1_hnbl8zg,/r/Cplusplus/comments/r9dukh/whats_some_github_repo_to_take_a_look_at_to_get_a/hnc7moa/,0,False,3,False,r9dukh,Cplusplus,t5_2qh6x
334,TheDefalt8,np. and Thanks!,"<div class=""md""><p>np. and Thanks!</p>
</div>",1638723757.0,,False,hncbwu8,False,t3_r9dukh,t1_hnc7zjk,/r/Cplusplus/comments/r9dukh/whats_some_github_repo_to_take_a_look_at_to_get_a/hncbwu8/,0,False,3,False,r9dukh,Cplusplus,t5_2qh6x
335,AKostur,Deterministic destruction.,"<div class=""md""><p>Deterministic destruction.</p>
</div>",1649045930.0,,False,i3baf0c,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3baf0c/,4,False,53,False,tvpp21,Cplusplus,t5_2qh6x
336,ISvengali,Templates.  Theyre lovely and so much better than Generics.,"<div class=""md""><p>Templates.  Theyre lovely and so much better than Generics.</p>
</div>",1649047007.0,,False,i3bc81b,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3bc81b/,2,False,28,False,tvpp21,Cplusplus,t5_2qh6x
337,flying_5loths,metaprogramming,"<div class=""md""><p>metaprogramming</p>
</div>",1649041122.0,,False,i3b17vi,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3b17vi/,0,False,17,False,tvpp21,Cplusplus,t5_2qh6x
338,jaap_null,I like the minimum cost abstraction of classes and the fact that almost every implementation detail is known/visible. I like that every byte in memory is known* - this makes it very easy for me to known and discuss perf implications of almost all (trivial) code.,"<div class=""md""><p>I like the minimum cost abstraction of classes and the fact that almost every implementation detail is known/visible. I like that every byte in memory is known* - this makes it very easy for me to known and discuss perf implications of almost all (trivial) code.</p>
</div>",1649043476.0,,False,i3b5xso,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3b5xso/,0,False,18,False,tvpp21,Cplusplus,t5_2qh6x
339,Middlewarian,I stick to C++ as much as possible.   It's enough in terms of learning to focus on one language.   C++ is great for a variety of tasks and my SaaS is intended to make it even better.,"<div class=""md""><p>I stick to C++ as much as possible.   It&#39;s enough in terms of learning to focus on one language.   C++ is great for a variety of tasks and my SaaS is intended to make it even better.</p>
</div>",1649039710.0,,False,i3ayb4k,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3ayb4k/,0,False,9,False,tvpp21,Cplusplus,t5_2qh6x
340,Brahvim,"Operator Overloading (and sometimes, pointers) when I'm writing Java.","<div class=""md""><p>Operator Overloading (and sometimes, pointers) when I&#39;m writing Java.</p>
</div>",1649056361.0,,False,i3bpfd9,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3bpfd9/,0,False,7,False,tvpp21,Cplusplus,t5_2qh6x
341,sumpygreg,tears.,"<div class=""md""><p>tears.</p>
</div>",1649037980.0,,False,i3auoba,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3auoba/,1,False,23,False,tvpp21,Cplusplus,t5_2qh6x
342,drobilla,"I might get hung for this around here, but... direct ""native"" C compatibility.","<div class=""md""><p>I might get hung for this around here, but... direct &quot;native&quot; C compatibility.</p>
</div>",1649113866.0,,False,i3f2a0s,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3f2a0s/,1,False,6,False,tvpp21,Cplusplus,t5_2qh6x
343,Kohana55,"Casting a object into a buffer. 

In C# and other languages I have to write a serialise function.","<div class=""md""><p>Casting a object into a buffer. </p>

<p>In C# and other languages I have to write a serialise function.</p>
</div>",1649061761.0,,False,i3bvqld,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3bvqld/,0,False,5,False,tvpp21,Cplusplus,t5_2qh6x
344,MikeVegan,"Const methods, const args, const returns, canst objects, everything const. I love const.

Raii, templates, constexpr, deleting methods too.

I generally like that I have many options to do the same thing and I can choose the best one for the particular situation. As an example would be I can put extra effort to execute some code at compile time with constexpr or I can simply execute on runtime. I can create variable on stack or in heap, create by copy or move. I like how all these things, when done correctly, help compilers generate faster code, but also make it cleaner, easier to read and also describes the intend and let people know what to expect.

But mostly i absolutely love to add consts. When I visit some legacy code and find that something can be const when it's not, I just can't help myself. Just one keyword makes everything so much cleaner and nicer","<div class=""md""><p>Const methods, const args, const returns, canst objects, everything const. I love const.</p>

<p>Raii, templates, constexpr, deleting methods too.</p>

<p>I generally like that I have many options to do the same thing and I can choose the best one for the particular situation. As an example would be I can put extra effort to execute some code at compile time with constexpr or I can simply execute on runtime. I can create variable on stack or in heap, create by copy or move. I like how all these things, when done correctly, help compilers generate faster code, but also make it cleaner, easier to read and also describes the intend and let people know what to expect.</p>

<p>But mostly i absolutely love to add consts. When I visit some legacy code and find that something can be const when it&#39;s not, I just can&#39;t help myself. Just one keyword makes everything so much cleaner and nicer</p>
</div>",1649093218.0,,False,i3dkt99,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3dkt99/,1,False,4,False,tvpp21,Cplusplus,t5_2qh6x
345,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1649046686.0,,False,i3bbp2h,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3bbp2h/,1,False,4,False,tvpp21,Cplusplus,t5_2qh6x
346,juvation,Destructors,"<div class=""md""><p>Destructors</p>
</div>",1649095103.0,,False,i3dps0i,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3dps0i/,0,False,3,False,tvpp21,Cplusplus,t5_2qh6x
347,thisisbasil,raii,"<div class=""md""><p>raii</p>
</div>",1649184287.0,,False,i3ivkjq,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3ivkjq/,0,False,3,False,tvpp21,Cplusplus,t5_2qh6x
348,ArmoredLeaf,"The fact that templatization is done at compile time rather than runtime.

That, and constexpr.","<div class=""md""><p>The fact that templatization is done at compile time rather than runtime.</p>

<p>That, and constexpr.</p>
</div>",1649213666.0,,False,i3ktvl6,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3ktvl6/,0,False,3,False,tvpp21,Cplusplus,t5_2qh6x
349,mapledriver,Ability to see how some of the most optimized algorithms are actually implemented,"<div class=""md""><p>Ability to see how some of the most optimized algorithms are actually implemented</p>
</div>",1649428730.0,,False,i3wmf2v,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3wmf2v/,0,False,3,False,tvpp21,Cplusplus,t5_2qh6x
350,DasFrebier,#define,"<div class=""md""><h1>define</h1>
</div>",1649044955.0,,False,i3b8pid,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3b8pid/,0,False,4,False,tvpp21,Cplusplus,t5_2qh6x
351,dangerzone2,Free functions. .NET/c# lately,"<div class=""md""><p>Free functions. .NET/c# lately</p>
</div>",1649049612.0,,False,i3bgbv2,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3bgbv2/,0,False,2,False,tvpp21,Cplusplus,t5_2qh6x
352,GrantSRobertson,"I am working on relearning C++ after having had one or two classes back in 2005. While the massive number of variations of a type built upon a base type and when those are allowed and implied and fucking everything is just completely overwhelming my mind right now, I also can see that that is insanely powerful. I can determine exactly every iota of the characteristics of a type, over and above just the class or base type. Yes, I know about automatic types. But, if one uses them completely blindly without having any clue about what it is inferring the type from then, hell, you might as well just use python.","<div class=""md""><p>I am working on relearning C++ after having had one or two classes back in 2005. While the massive number of variations of a type built upon a base type and when those are allowed and implied and fucking everything is just completely overwhelming my mind right now, I also can see that that is insanely powerful. I can determine exactly every iota of the characteristics of a type, over and above just the class or base type. Yes, I know about automatic types. But, if one uses them completely blindly without having any clue about what it is inferring the type from then, hell, you might as well just use python.</p>
</div>",1649051691.0,,False,i3bjbqr,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3bjbqr/,0,False,2,False,tvpp21,Cplusplus,t5_2qh6x
353,DavideDaSerra,"I don't know, C++ isn't my favouritelanguage, but it happens I have to work with it. I'd say... the standard library (with boosts at its side). It saves so much effort not having to reinvent a (efficient yet generic) wheel. Having already made low-level stuff is great: effort-saving and speed-bumping (and also pointers-hiding).Also the references: the efficiency of pointers but without dealing with actual pointers. (Actually I don't miss references in other languages because, mostly, I don't need them there).","<div class=""md""><p>I don&#39;t know, C++ isn&#39;t my favouritelanguage, but it happens I have to work with it. I&#39;d say... the standard library (with boosts at its side). It saves so much effort not having to reinvent a (efficient yet generic) wheel. Having already made low-level stuff is great: effort-saving and speed-bumping (and also pointers-hiding).Also the references: the efficiency of pointers but without dealing with actual pointers. (Actually I don&#39;t miss references in other languages because, mostly, I don&#39;t need them there).</p>
</div>",1650383174.0,,1650387127.0,i5cttwg,False,t3_tvpp21,t3_tvpp21,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i5cttwg/,0,False,2,False,tvpp21,Cplusplus,t5_2qh6x
354,kingofthejaffacakes,"You beat me to it.

It's crazy that other languages think self-management of lifetime is a bad thing.","<div class=""md""><p>You beat me to it.</p>

<p>It&#39;s crazy that other languages think self-management of lifetime is a bad thing.</p>
</div>",1649054441.0,,False,i3bmzcx,False,t3_tvpp21,t1_i3baf0c,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3bmzcx/,0,False,9,False,tvpp21,Cplusplus,t5_2qh6x
355,ISvengali,Its the best.,"<div class=""md""><p>Its the best.</p>
</div>",1649046855.0,,False,i3bbz2k,False,t3_tvpp21,t1_i3baf0c,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3bbz2k/,0,False,3,False,tvpp21,Cplusplus,t5_2qh6x
356,aayushch,This!,"<div class=""md""><p>This!</p>
</div>",1649050365.0,,False,i3bhfzy,False,t3_tvpp21,t1_i3baf0c,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3bhfzy/,0,False,3,False,tvpp21,Cplusplus,t5_2qh6x
357,New_Computer3619,"Agree. In my opinion, C++ is the best when it comes to resources management.","<div class=""md""><p>Agree. In my opinion, C++ is the best when it comes to resources management.</p>
</div>",1650879017.0,,False,i63ywa3,False,t3_tvpp21,t1_i3baf0c,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i63ywa3/,0,False,1,False,tvpp21,Cplusplus,t5_2qh6x
358,blorchmclorchenstein,"This. I'm now doing c# and python after cpp at my old job, and I miss my templates.","<div class=""md""><p>This. I&#39;m now doing c# and python after cpp at my old job, and I miss my templates.</p>
</div>",1649062250.0,,False,i3bwavy,False,t3_tvpp21,t1_i3bc81b,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3bwavy/,0,False,5,False,tvpp21,Cplusplus,t5_2qh6x
359,,[removed],"<div class=""md""><p>[removed]</p>
</div>",1649084254.0,,False,i3cy2hw,False,t3_tvpp21,t1_i3bc81b,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3cy2hw/,1,False,-2,False,tvpp21,Cplusplus,t5_2qh6x
360,rtgftw,"I ain't passed the bar, but I sure do appreciate me some language lawyering.

Also type aliasing resulting in random ub.","<div class=""md""><p>I ain&#39;t passed the bar, but I sure do appreciate me some language lawyering.</p>

<p>Also type aliasing resulting in random ub.</p>
</div>",1649118688.0,,False,i3febdj,False,t3_tvpp21,t1_i3auoba,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3febdj/,0,False,3,False,tvpp21,Cplusplus,t5_2qh6x
361,WindForce02,Real. Sometimes good ol C comes handy,"<div class=""md""><p>Real. Sometimes good ol C comes handy</p>
</div>",1651346498.0,,False,i6tmooe,False,t3_tvpp21,t1_i3f2a0s,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i6tmooe/,0,False,1,False,tvpp21,Cplusplus,t5_2qh6x
362,ignorantpisswalker,D has it. It comes by default when the compiler sees it can do it. Even consexpr... Just magically happens.,"<div class=""md""><p>D has it. It comes by default when the compiler sees it can do it. Even consexpr... Just magically happens.</p>
</div>",1649096655.0,,False,i3dttbg,False,t3_tvpp21,t1_i3dkt99,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3dttbg/,0,False,3,False,tvpp21,Cplusplus,t5_2qh6x
363,IQueryVisiC,"What is wrong with generics in C#? I still did not get a clean statement about the difference. ""template"" is such an overused word in IT. `TypeParameter` is just so natural. I like that C# applies the parameter just in time, though for startup time that may not be so good.","<div class=""md""><p>What is wrong with generics in C#? I still did not get a clean statement about the difference. &quot;template&quot; is such an overused word in IT. <code>TypeParameter</code> is just so natural. I like that C# applies the parameter just in time, though for startup time that may not be so good.</p>
</div>",1649051568.0,,False,i3bj5jv,False,t3_tvpp21,t1_i3bbp2h,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3bj5jv/,0,False,2,False,tvpp21,Cplusplus,t5_2qh6x
364,ISvengali,"Not everyone rates everything the same way, but even so, it was taken so meh.  Let people have fun","<div class=""md""><p>Not everyone rates everything the same way, but even so, it was taken so meh.  Let people have fun</p>
</div>",1649091244.0,,False,i3dfp60,False,t3_tvpp21,t1_i3cy2hw,/r/Cplusplus/comments/tvpp21/what_is_your_favourite_c_specific_feature_that/i3dfp60/,0,False,4,False,tvpp21,Cplusplus,t5_2qh6x
365,boukeg,I liked codewars.com.,"<div class=""md""><p>I liked codewars.com.</p>
</div>",1656837228.0,,False,ieocz5q,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ieocz5q/,0,False,13,False,vqbxdh,Cplusplus,t5_2qh6x
366,aregtech,[Here](https://up-for-grabs.net/#/filters?tags=cpp) you can find list of projects that look for help in OSS projects.,"<div class=""md""><p><a href=""https://up-for-grabs.net/#/filters?tags=cpp"">Here</a> you can find list of projects that look for help in OSS projects.</p>
</div>",1656838892.0,,False,ieoeuy9,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ieoeuy9/,0,False,10,False,vqbxdh,Cplusplus,t5_2qh6x
367,Substantial-Ad-3543,leetcode,"<div class=""md""><p>leetcode</p>
</div>",1656837098.0,,False,ieoctq8,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ieoctq8/,1,False,12,False,vqbxdh,Cplusplus,t5_2qh6x
368,Mpeterwhistler83,Try to solve some problems on project Euler or on the advent of code using c++,"<div class=""md""><p>Try to solve some problems on project Euler or on the advent of code using c++</p>
</div>",1656851577.0,,False,ieouus6,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ieouus6/,0,False,4,False,vqbxdh,Cplusplus,t5_2qh6x
369,Pink_Slyvie,"What are you trying to do?   


Are you trying to learn to write software? Look at some of the freecodecamp projects. They are more geared toward web stuff, but you can work with that.   


Are you trying to learn syntax?  Any old book will do, or various courses.   


Are you trying to learn DS/Algo's? Leetcode like sites.   


What is your end goal?   Typically if you are asking this question, I'd say skip c++ and learn to code with python, there are far more resources now.  If you are looking for a job, learn python,java, javascript etc etc.","<div class=""md""><p>What are you trying to do?   </p>

<p>Are you trying to learn to write software? Look at some of the freecodecamp projects. They are more geared toward web stuff, but you can work with that.   </p>

<p>Are you trying to learn syntax?  Any old book will do, or various courses.   </p>

<p>Are you trying to learn DS/Algo&#39;s? Leetcode like sites.   </p>

<p>What is your end goal?   Typically if you are asking this question, I&#39;d say skip c++ and learn to code with python, there are far more resources now.  If you are looking for a job, learn python,java, javascript etc etc.</p>
</div>",1656902784.0,,False,ierv0go,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ierv0go/,0,False,4,False,vqbxdh,Cplusplus,t5_2qh6x
370,userknownunknown,Try game dev or try making desktop GUI apps,"<div class=""md""><p>Try game dev or try making desktop GUI apps</p>
</div>",1656834177.0,,False,ieo9gqv,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ieo9gqv/,0,False,6,False,vqbxdh,Cplusplus,t5_2qh6x
371,Shadowslip99,"You could try these.

https://www.w3resource.com/cpp-exercises/basic/index.php","<div class=""md""><p>You could try these.</p>

<p><a href=""https://www.w3resource.com/cpp-exercises/basic/index.php"">https://www.w3resource.com/cpp-exercises/basic/index.php</a></p>
</div>",1656856790.0,,False,iep44r1,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/iep44r1/,0,False,3,False,vqbxdh,Cplusplus,t5_2qh6x
372,quan194,https://app.codesignal.com/login,"<div class=""md""><p><a href=""https://app.codesignal.com/login"">https://app.codesignal.com/login</a></p>
</div>",1656843771.0,,False,ieokf55,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ieokf55/,0,False,2,False,vqbxdh,Cplusplus,t5_2qh6x
373,Ekstraploator,"https://www.hackerrank.com

Is ok","<div class=""md""><p><a href=""https://www.hackerrank.com"">https://www.hackerrank.com</a></p>

<p>Is ok</p>
</div>",1656872282.0,,False,ieq3zsy,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ieq3zsy/,0,False,2,False,vqbxdh,Cplusplus,t5_2qh6x
374,ZavierTheSavior,"First start out with a tic tax toe game using arrays, then do a simple battleship game using functions, from there so simple projects with classes and then you should start doing leet code","<div class=""md""><p>First start out with a tic tax toe game using arrays, then do a simple battleship game using functions, from there so simple projects with classes and then you should start doing leet code</p>
</div>",1656907249.0,,False,ies2lsg,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ies2lsg/,0,False,2,False,vqbxdh,Cplusplus,t5_2qh6x
375,Same-Impress-6899,at home,"<div class=""md""><p>at home</p>
</div>",1656873357.0,,False,ieq6gcj,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ieq6gcj/,0,False,0,False,vqbxdh,Cplusplus,t5_2qh6x
376,spanishgum,"https://godbolt.org

I use Compiler Explorer to quickly toy with features I’m not familiar with.

If you’re reading a book like Effective C++ for example, it can be useful to throw the snippets there yourself.","<div class=""md""><p><a href=""https://godbolt.org"">https://godbolt.org</a></p>

<p>I use Compiler Explorer to quickly toy with features I’m not familiar with.</p>

<p>If you’re reading a book like Effective C++ for example, it can be useful to throw the snippets there yourself.</p>
</div>",1656884431.0,,False,ieqve4o,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ieqve4o/,0,False,1,False,vqbxdh,Cplusplus,t5_2qh6x
377,andy8452,[https://edabit.com/challenges](https://edabit.com/challenges),"<div class=""md""><p><a href=""https://edabit.com/challenges"">https://edabit.com/challenges</a></p>
</div>",1656891314.0,,False,ier9r7v,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ier9r7v/,0,False,1,False,vqbxdh,Cplusplus,t5_2qh6x
378,__kidkag3,I use replit.com,"<div class=""md""><p>I use replit.com</p>
</div>",1659319890.0,,False,iigiier,False,t3_vqbxdh,t3_vqbxdh,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/iigiier/,0,False,1,False,vqbxdh,Cplusplus,t5_2qh6x
379,simulacrasimulation_,"I'm not sure what OP's level of experience is, but I will assume novice. While Leetcode is absolutely a wonderful resource to learn the fundamentals of computer science concepts such as DSA, I feel like it might be a little too far out of OP's reach at their given skill level. OP might be looking for something more project-oriented and simple, like a Calculator or Tic-Tac-Toe game. When OP is familiar with the syntax of the language and is comfortable exploring in it, then more abstract puzzles like Leetcode might be more suitable.","<div class=""md""><p>I&#39;m not sure what OP&#39;s level of experience is, but I will assume novice. While Leetcode is absolutely a wonderful resource to learn the fundamentals of computer science concepts such as DSA, I feel like it might be a little too far out of OP&#39;s reach at their given skill level. OP might be looking for something more project-oriented and simple, like a Calculator or Tic-Tac-Toe game. When OP is familiar with the syntax of the language and is comfortable exploring in it, then more abstract puzzles like Leetcode might be more suitable.</p>
</div>",1656904961.0,,False,ieryswm,False,t3_vqbxdh,t1_ieoctq8,/r/Cplusplus/comments/vqbxdh/where_can_i_practice_c/ieryswm/,0,False,4,False,vqbxdh,Cplusplus,t5_2qh6x
380,Cakefonz,"It boils down to how you want to express usage to the callers of your function.

The interface for `functionOne` says to its callers: I need a reference to a non-null instance of `Object` which I may modify.

The inteface for `functionTwo` says: You can *optionally* pass a reference (pointer) to an instance of `Object` which  I may modify. I say ""optionally"" here because the caller is allowed to pass `nullptr`.

If you, as the implementer of the function, require a non-null instance of `Object` then you would use a reference (`&`) to enforce that. You *could* still use a pointer and then enforce that it's non-null by throwing an exception, for example, but you've then complicated the interface and pushed the enforcement down the line to runtime behavior.","<div class=""md""><p>It boils down to how you want to express usage to the callers of your function.</p>

<p>The interface for <code>functionOne</code> says to its callers: I need a reference to a non-null instance of <code>Object</code> which I may modify.</p>

<p>The inteface for <code>functionTwo</code> says: You can <em>optionally</em> pass a reference (pointer) to an instance of <code>Object</code> which  I may modify. I say &quot;optionally&quot; here because the caller is allowed to pass <code>nullptr</code>.</p>

<p>If you, as the implementer of the function, require a non-null instance of <code>Object</code> then you would use a reference (<code>&amp;</code>) to enforce that. You <em>could</em> still use a pointer and then enforce that it&#39;s non-null by throwing an exception, for example, but you&#39;ve then complicated the interface and pushed the enforcement down the line to runtime behavior.</p>
</div>",1611134213.0,,False,gjxfqwa,False,t3_l14p0z,t3_l14p0z,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gjxfqwa/,1,False,16,False,l14p0z,Cplusplus,t5_2qh6x
381,StackOfCookies,"Pointer: The thing you're passing in is allowed to not exist.

Reference: The thing you're passing in must exist.

In modern C++ you might also use std::optional& instead of a pointer to have the same semantics.","<div class=""md""><p>Pointer: The thing you&#39;re passing in is allowed to not exist.</p>

<p>Reference: The thing you&#39;re passing in must exist.</p>

<p>In modern C++ you might also use std::optional&amp; instead of a pointer to have the same semantics.</p>
</div>",1611145924.0,,False,gjxs9us,False,t3_l14p0z,t3_l14p0z,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gjxs9us/,1,False,9,False,l14p0z,Cplusplus,t5_2qh6x
382,mdgagne87,"In both cases thing is passed-by-reference; meaning the method is supplied access to an object owned by the caller. The two method prototypes demonstrate reference semantics and pointer semantics.

Pointer semantics, are carried over for C compatibility. The supplied pointer should be checked for null and follow the application's strategy for memory management.

Reference semantics imply (but can't guarantee) the supplied reference is for a valid object who's lifecycle is managed by the caller.

IMO reference semantics should be *preferred* because the memory management is less ambiguous because references  are bound at creation.

Lastly, one should consider using the const keyword (const correctness) in both cases if the object should not be modified. Pass-by-const-reference is a common pattern that avoids needless object copies.","<div class=""md""><p>In both cases thing is passed-by-reference; meaning the method is supplied access to an object owned by the caller. The two method prototypes demonstrate reference semantics and pointer semantics.</p>

<p>Pointer semantics, are carried over for C compatibility. The supplied pointer should be checked for null and follow the application&#39;s strategy for memory management.</p>

<p>Reference semantics imply (but can&#39;t guarantee) the supplied reference is for a valid object who&#39;s lifecycle is managed by the caller.</p>

<p>IMO reference semantics should be <em>preferred</em> because the memory management is less ambiguous because references  are bound at creation.</p>

<p>Lastly, one should consider using the const keyword (const correctness) in both cases if the object should not be modified. Pass-by-const-reference is a common pattern that avoids needless object copies.</p>
</div>",1611138450.0,,False,gjxjys6,False,t3_l14p0z,t3_l14p0z,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gjxjys6/,1,False,4,False,l14p0z,Cplusplus,t5_2qh6x
383,cristi1990an,I personally use pointers as parameters if my method is going to be used by other people. This forces them to pass their variables by reference so there's no confusion on their end which variable might be changed and which won't.,"<div class=""md""><p>I personally use pointers as parameters if my method is going to be used by other people. This forces them to pass their variables by reference so there&#39;s no confusion on their end which variable might be changed and which won&#39;t.</p>
</div>",1612269784.0,,False,glq26mg,False,t3_l14p0z,t3_l14p0z,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/glq26mg/,0,False,2,False,l14p0z,Cplusplus,t5_2qh6x
384,,I don't think that there is a special meaning in class methods! It works the same way as in a function.,"<div class=""md""><p>I don&#39;t think that there is a special meaning in class methods! It works the same way as in a function.</p>
</div>",1611130431.0,,False,gjxbrz9,False,t3_l14p0z,t3_l14p0z,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gjxbrz9/,0,False,-1,False,l14p0z,Cplusplus,t5_2qh6x
385,Milchgauss,Great answer. Thank you. And to everyone else as well.,"<div class=""md""><p>Great answer. Thank you. And to everyone else as well.</p>
</div>",1611188646.0,,False,gk097q8,True,t3_l14p0z,t1_gjxfqwa,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gk097q8/,0,False,4,False,l14p0z,Cplusplus,t5_2qh6x
386,,"> In modern C++ you might also use std::optional& instead of a pointer to have the same semantics.

it would have to be const since a mutable reference would disallow use of `std::nullopt` or a default constructed optional; there would be no added benefit","<div class=""md""><blockquote>
<p>In modern C++ you might also use std::optional&amp; instead of a pointer to have the same semantics.</p>
</blockquote>

<p>it would have to be const since a mutable reference would disallow use of <code>std::nullopt</code> or a default constructed optional; there would be no added benefit</p>
</div>",1611164464.0,,False,gjys3lj,False,t3_l14p0z,t1_gjxs9us,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gjys3lj/,1,False,3,False,l14p0z,Cplusplus,t5_2qh6x
387,flyingron,"No, in the case of a &, you pass an object by reference.

In the case of \*, you are passing a pointer to the object BY VALUE.","<div class=""md""><p>No, in the case of a &amp;, you pass an object by reference.</p>

<p>In the case of *, you are passing a pointer to the object BY VALUE.</p>
</div>",1611154362.0,,False,gjy64ut,False,t3_l14p0z,t1_gjxjys6,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gjy64ut/,3,False,0,False,l14p0z,Cplusplus,t5_2qh6x
388,Shikuji,you'd probably want to simply use reference wrapper to the object instead of reference to optional i.e. std::optional<std::reference_wrapper<Object>>,"<div class=""md""><p>you&#39;d probably want to simply use reference wrapper to the object instead of reference to optional i.e. std::optional&lt;std::reference_wrapper&lt;Object&gt;&gt;</p>
</div>",1611182765.0,,False,gjzxkiy,False,t3_l14p0z,t1_gjys3lj,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gjzxkiy/,1,False,2,False,l14p0z,Cplusplus,t5_2qh6x
389,Milchgauss,"In both cases, I would be able to access the element and match values to it, right?

So, for example: If I had:  
`std::vector<std::string> interestingVector`  
as the object, I would be able to iterate through this filled vector and match a string to it like:  


`std::string interestingString=""string1"";`

`for (int i=0;i<interestingVector.size();i++){`

`if(interestingString==interestingVector[i]){`

`//Do something here.`

`}`  
`}`  


From what I know, references are like ""aliases"" to objects.","<div class=""md""><p>In both cases, I would be able to access the element and match values to it, right?</p>

<p>So, for example: If I had:<br/>
<code>std::vector&lt;std::string&gt; interestingVector</code><br/>
as the object, I would be able to iterate through this filled vector and match a string to it like:  </p>

<p><code>std::string interestingString=&quot;string1&quot;;</code></p>

<p><code>for (int i=0;i&lt;interestingVector.size();i++){</code></p>

<p><code>if(interestingString==interestingVector[i]){</code></p>

<p><code>//Do something here.</code></p>

<p><code>}</code><br/>
<code>}</code>  </p>

<p>From what I know, references are like &quot;aliases&quot; to objects.</p>
</div>",1611188967.0,,False,gk09uhr,True,t3_l14p0z,t1_gjy64ut,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gk09uhr/,0,False,1,False,l14p0z,Cplusplus,t5_2qh6x
390,mdgagne87,"Agreed, but theyre semantically equivalent. The pointer is passed by value, but it can be dereferenced to access the object. Sorry if I wasn't clear on that.","<div class=""md""><p>Agreed, but theyre semantically equivalent. The pointer is passed by value, but it can be dereferenced to access the object. Sorry if I wasn&#39;t clear on that.</p>
</div>",1611154697.0,,False,gjy6sc5,False,t3_l14p0z,t1_gjy64ut,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gjy6sc5/,0,False,1,False,l14p0z,Cplusplus,t5_2qh6x
391,bert8128,"The value/reference debate doesn’t arise in C++ because parameters are only passed by value, and the parameter type tells you what you are dealing with - an object, object reference, pointer, integer type, float type, Boolean or reference to any of the those native types. All passed by value. If the called function modifies the value passed, the caller’s version is not modified.","<div class=""md""><p>The value/reference debate doesn’t arise in C++ because parameters are only passed by value, and the parameter type tells you what you are dealing with - an object, object reference, pointer, integer type, float type, Boolean or reference to any of the those native types. All passed by value. If the called function modifies the value passed, the caller’s version is not modified.</p>
</div>",1611177215.0,,False,gjzlh3c,False,t3_l14p0z,t1_gjy64ut,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gjzlh3c/,1,False,1,False,l14p0z,Cplusplus,t5_2qh6x
392,,"Yes, I was mainly replying to this:

> you might also use std::optional& instead of a pointer to have the same semantics","<div class=""md""><p>Yes, I was mainly replying to this:</p>

<blockquote>
<p>you might also use std::optional&amp; instead of a pointer to have the same semantics</p>
</blockquote>
</div>",1611202934.0,,False,gk10uij,False,t3_l14p0z,t1_gjzxkiy,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gk10uij/,0,False,1,False,l14p0z,Cplusplus,t5_2qh6x
393,mdgagne87,"Technically yes, all types are passed by value. More subtly there are l-values, r-values, and r-value reference types. Semantically passing r-values (pointers, references) allow the function to make changes to the object owned by the caller thereby making the call semantically behave as something being passed-by-reference. It's important to realize this because calls to functions that take a type vs type& are syntactically equivalent at the callsight.","<div class=""md""><p>Technically yes, all types are passed by value. More subtly there are l-values, r-values, and r-value reference types. Semantically passing r-values (pointers, references) allow the function to make changes to the object owned by the caller thereby making the call semantically behave as something being passed-by-reference. It&#39;s important to realize this because calls to functions that take a type vs type&amp; are syntactically equivalent at the callsight.</p>
</div>",1611339332.0,,False,gk7r3pr,False,t3_l14p0z,t1_gjzlh3c,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gk7r3pr/,1,False,1,False,l14p0z,Cplusplus,t5_2qh6x
394,bert8128,"But this is the key to understanding how C++ passes parameters.  In Java and Python there is no way to add reference or pointer tags - you just have to know which types are passed by value, and which by reference. In C++ you can simply read what the type is a thus deduce the behaviour.

I'm not saying it's not subtle.  But it is clear, and it is powerful. But I agree, you have to look at the function signature.","<div class=""md""><p>But this is the key to understanding how C++ passes parameters.  In Java and Python there is no way to add reference or pointer tags - you just have to know which types are passed by value, and which by reference. In C++ you can simply read what the type is a thus deduce the behaviour.</p>

<p>I&#39;m not saying it&#39;s not subtle.  But it is clear, and it is powerful. But I agree, you have to look at the function signature.</p>
</div>",1611355409.0,,False,gk954za,False,t3_l14p0z,t1_gk7r3pr,/r/Cplusplus/comments/l14p0z/the_main_difference_between_and_arguments_in/gk954za/,0,False,1,False,l14p0z,Cplusplus,t5_2qh6x
395,DrSuresh,"Thanks, will let you know how it goes after two weeks of looking into it! :)","<div class=""md""><p>Thanks, will let you know how it goes after two weeks of looking into it! :)</p>
</div>",1593931476.0,,False,fwz6r1b,False,t3_hkztau,t3_hkztau,/r/Cplusplus/comments/hkztau/collection_of_top_c_tutorials_for_beginners/fwz6r1b/,2,False,3,False,hkztau,Cplusplus,t5_2qh6x
396,Raghu_vamshi,"Thanks for the link. I am a VB. Net hobby programmer, who wants to wet his toe in C++ but really feared about the so called do as don'ts.","<div class=""md""><p>Thanks for the link. I am a VB. Net hobby programmer, who wants to wet his toe in C++ but really feared about the so called do as don&#39;ts.</p>
</div>",1593962532.0,,False,fx06qlq,False,t3_hkztau,t3_hkztau,/r/Cplusplus/comments/hkztau/collection_of_top_c_tutorials_for_beginners/fx06qlq/,1,False,1,False,hkztau,Cplusplus,t5_2qh6x
397,,"Was just going to ask in /r/cplusplus a minute ago about tutorials integrating design patterns with modern C++... and here comes your post with a link to this exact thing. (#7)

Thanks!","<div class=""md""><p>Was just going to ask in <a href=""/r/cplusplus"">/r/cplusplus</a> a minute ago about tutorials integrating design patterns with modern C++... and here comes your post with a link to this exact thing. (#7)</p>

<p>Thanks!</p>
</div>",1594038404.0,,False,fx3crdf,False,t3_hkztau,t3_hkztau,/r/Cplusplus/comments/hkztau/collection_of_top_c_tutorials_for_beginners/fx3crdf/,1,False,1,False,hkztau,Cplusplus,t5_2qh6x
398,gospel-of-goose,"It’s been two weeks! What’s the verdict, Dr?","<div class=""md""><p>It’s been two weeks! What’s the verdict, Dr?</p>
</div>",1595199952.0,,False,fyls4t4,False,t3_hkztau,t1_fwz6r1b,/r/Cplusplus/comments/hkztau/collection_of_top_c_tutorials_for_beginners/fyls4t4/,0,False,3,False,hkztau,Cplusplus,t5_2qh6x
399,dev2049,"Glad you liked it /u/DrSuresh . Sure will be awaiting for your feedback and findings.
Happy learning !!!","<div class=""md""><p>Glad you liked it <a href=""/u/DrSuresh"">/u/DrSuresh</a> . Sure will be awaiting for your feedback and findings.
Happy learning !!!</p>
</div>",1594031227.0,,False,fx34so4,True,t3_hkztau,t1_fwz6r1b,/r/Cplusplus/comments/hkztau/collection_of_top_c_tutorials_for_beginners/fx34so4/,0,False,2,False,hkztau,Cplusplus,t5_2qh6x
400,dev2049,"Glad you liked it /u/raghu_vamshi. Will be awaiting your feedback on whether you overcame the fear and found any solution . Would love to know.

Happy Exploration!!!","<div class=""md""><p>Glad you liked it <a href=""/u/raghu_vamshi"">/u/raghu_vamshi</a>. Will be awaiting your feedback on whether you overcame the fear and found any solution . Would love to know.</p>

<p>Happy Exploration!!!</p>
</div>",1594031143.0,,False,fx34pn9,True,t3_hkztau,t1_fx06qlq,/r/Cplusplus/comments/hkztau/collection_of_top_c_tutorials_for_beginners/fx34pn9/,0,False,1,False,hkztau,Cplusplus,t5_2qh6x
401,dev2049,"Awesome that's great do help yourselves 

Glad you liked it /u/Art_Pixel  

Happy learning and exploring !!!","<div class=""md""><p>Awesome that&#39;s great do help yourselves </p>

<p>Glad you liked it <a href=""/u/Art_Pixel"">/u/Art_Pixel</a>  </p>

<p>Happy learning and exploring !!!</p>
</div>",1594042788.0,,False,fx3j6xd,True,t3_hkztau,t1_fx3crdf,/r/Cplusplus/comments/hkztau/collection_of_top_c_tutorials_for_beginners/fx3j6xd/,0,False,1,False,hkztau,Cplusplus,t5_2qh6x
402,aravynn,"So 2 ways I’m aware of:

-	use the libraries built by windows for building your own GUI. So either win32 or winRT
-	use a much easier prebuilt application like QT, or WXWidgets that has the GUI libraries built in. Also, these options are cross platform too, so they mostly work on Linux and Mac.","<div class=""md""><p>So 2 ways I’m aware of:</p>

<ul>
<li>  use the libraries built by windows for building your own GUI. So either win32 or winRT</li>
<li>  use a much easier prebuilt application like QT, or WXWidgets that has the GUI libraries built in. Also, these options are cross platform too, so they mostly work on Linux and Mac.</li>
</ul>
</div>",1602932540.0,,False,g93ci0z,False,t3_jct0qt,t3_jct0qt,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g93ci0z/,1,False,25,False,jct0qt,Cplusplus,t5_2qh6x
403,,Bump cuz I wanna know also,"<div class=""md""><p>Bump cuz I wanna know also</p>
</div>",1602932361.0,,False,g93cbrb,False,t3_jct0qt,t3_jct0qt,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g93cbrb/,1,False,10,False,jct0qt,Cplusplus,t5_2qh6x
404,WhyNotDIYIt,Qt is a relatively easy framework to develop c++ programs with a GUI.,"<div class=""md""><p>Qt is a relatively easy framework to develop c++ programs with a GUI.</p>
</div>",1602937384.0,,False,g93hvuv,False,t3_jct0qt,t3_jct0qt,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g93hvuv/,1,False,12,False,jct0qt,Cplusplus,t5_2qh6x
405,dgellow,"I understand that you're on Windows 10, so you can try Win32 (the old, classic windows  way to create GUI, not very nice but still works well), or C++/WinRT (modern, UWP applications).

\- Win32 introduction: [https://docs.microsoft.com/en-us/windows/win32/LearnWin32/your-first-windows-program](https://docs.microsoft.com/en-us/windows/win32/LearnWin32/your-first-windows-program)

\- C++/WinRT example: [https://docs.microsoft.com/en-us/samples/microsoft/windows-appsample-photo-editor/photo-editor-cwinrt-sample-application/](https://docs.microsoft.com/en-us/samples/microsoft/windows-appsample-photo-editor/photo-editor-cwinrt-sample-application/)

You also have something called ~~C++/CLI~~ C++/CX, a custom version of C++ by Microsoft that allows you to integrate C++ into .Net applications. That has been replaced by C++/WinRT, based on standard C++, but ~~C++/CLI~~ C++/CX still works. So that's also an option, but I wouldn't bet on it as it won't be developed anymore in the future (as far as I understand it).","<div class=""md""><p>I understand that you&#39;re on Windows 10, so you can try Win32 (the old, classic windows  way to create GUI, not very nice but still works well), or C++/WinRT (modern, UWP applications).</p>

<p>- Win32 introduction: <a href=""https://docs.microsoft.com/en-us/windows/win32/LearnWin32/your-first-windows-program"">https://docs.microsoft.com/en-us/windows/win32/LearnWin32/your-first-windows-program</a></p>

<p>- C++/WinRT example: <a href=""https://docs.microsoft.com/en-us/samples/microsoft/windows-appsample-photo-editor/photo-editor-cwinrt-sample-application/"">https://docs.microsoft.com/en-us/samples/microsoft/windows-appsample-photo-editor/photo-editor-cwinrt-sample-application/</a></p>

<p>You also have something called <del>C++/CLI</del> C++/CX, a custom version of C++ by Microsoft that allows you to integrate C++ into .Net applications. That has been replaced by C++/WinRT, based on standard C++, but <del>C++/CLI</del> C++/CX still works. So that&#39;s also an option, but I wouldn&#39;t bet on it as it won&#39;t be developed anymore in the future (as far as I understand it).</p>
</div>",1602956741.0,,1603023030.0,g94fcm0,False,t3_jct0qt,t3_jct0qt,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g94fcm0/,1,False,6,False,jct0qt,Cplusplus,t5_2qh6x
406,Amster2,"Highjacking tbe thread to ask the same thing, but for a python program.

Qt works with it? Or any alternative?

(Edit: mb, thought I was in /r/programming , but my question still stands)","<div class=""md""><p>Highjacking tbe thread to ask the same thing, but for a python program.</p>

<p>Qt works with it? Or any alternative?</p>

<p>(Edit: mb, thought I was in <a href=""/r/programming"">/r/programming</a> , but my question still stands)</p>
</div>",1602974260.0,,False,g95ezl3,False,t3_jct0qt,t3_jct0qt,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g95ezl3/,1,False,2,False,jct0qt,Cplusplus,t5_2qh6x
407,warpod,"Download and install Qt (**3.7 GB** [link](http://download.qt.io/official_releases/qt/5.12/5.12.9/qt-opensource-windows-x86-5.12.9.exe))

try tutorial example:

https://doc.qt.io/archives/3.3/tutorial1-01.html","<div class=""md""><p>Download and install Qt (<strong>3.7 GB</strong> <a href=""http://download.qt.io/official_releases/qt/5.12/5.12.9/qt-opensource-windows-x86-5.12.9.exe"">link</a>)</p>

<p>try tutorial example:</p>

<p><a href=""https://doc.qt.io/archives/3.3/tutorial1-01.html"">https://doc.qt.io/archives/3.3/tutorial1-01.html</a></p>
</div>",1602934720.0,,False,g93eqiw,False,t3_jct0qt,t3_jct0qt,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g93eqiw/,1,False,5,False,jct0qt,Cplusplus,t5_2qh6x
408,PMmesomehappiness,thank you! :),"<div class=""md""><p>thank you! :)</p>
</div>",1602990999.0,,False,g96bm6s,True,t3_jct0qt,t1_g93ci0z,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g96bm6s/,0,False,3,False,jct0qt,Cplusplus,t5_2qh6x
409,WhyNotDIYIt,Qt is a relatively easy framework to develop c++ programs with a GUI,"<div class=""md""><p>Qt is a relatively easy framework to develop c++ programs with a GUI</p>
</div>",1602937299.0,,False,g93hrvv,False,t3_jct0qt,t1_g93cbrb,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g93hrvv/,0,False,5,False,jct0qt,Cplusplus,t5_2qh6x
410,FoxRaptix,"+1 for QT, it was really easy to learn and work with when building personal projects in college.","<div class=""md""><p>+1 for QT, it was really easy to learn and work with when building personal projects in college.</p>
</div>",1602984453.0,,False,g95zdbl,False,t3_jct0qt,t1_g93hvuv,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g95zdbl/,0,False,6,False,jct0qt,Cplusplus,t5_2qh6x
411,guyonahorse,"Just a correction.. C++/CLI wasn't replaced by C++/WinRT, you're thinking C++/CX. Both C++/CX & C++/WinRT are for calling UWP APIs from C++, but C++/CX was just... very confusing. C++/WinRT is way nicer (though the name of it is very confusing!).

"" [**C++/WinRT**](https://docs.microsoft.com/en-us/windows/uwp/cpp-and-winrt-apis/index) **is the recommended alternative to C++/CX**. ""

[https://docs.microsoft.com/en-us/cpp/cppcx/visual-c-language-reference-c-cx?view=vs-2019](https://docs.microsoft.com/en-us/cpp/cppcx/visual-c-language-reference-c-cx?view=vs-2019)","<div class=""md""><p>Just a correction.. C++/CLI wasn&#39;t replaced by C++/WinRT, you&#39;re thinking C++/CX. Both C++/CX &amp; C++/WinRT are for calling UWP APIs from C++, but C++/CX was just... very confusing. C++/WinRT is way nicer (though the name of it is very confusing!).</p>

<p>&quot; <a href=""https://docs.microsoft.com/en-us/windows/uwp/cpp-and-winrt-apis/index""><strong>C++/WinRT</strong></a> <strong>is the recommended alternative to C++/CX</strong>. &quot;</p>

<p><a href=""https://docs.microsoft.com/en-us/cpp/cppcx/visual-c-language-reference-c-cx?view=vs-2019"">https://docs.microsoft.com/en-us/cpp/cppcx/visual-c-language-reference-c-cx?view=vs-2019</a></p>
</div>",1602960813.0,,False,g94nh1t,False,t3_jct0qt,t1_g94fcm0,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g94nh1t/,1,False,2,False,jct0qt,Cplusplus,t5_2qh6x
412,,PyQt provides Qt bindings for python.,"<div class=""md""><p>PyQt provides Qt bindings for python.</p>
</div>",1602975356.0,,False,g95h9dc,False,t3_jct0qt,t1_g95ezl3,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g95h9dc/,1,False,3,False,jct0qt,Cplusplus,t5_2qh6x
413,njalmeister81,👆,"<div class=""md""><p>👆</p>
</div>",1602936694.0,,False,g93h248,False,t3_jct0qt,t1_g93eqiw,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g93h248/,0,False,2,False,jct0qt,Cplusplus,t5_2qh6x
414,dgellow,"Thanks, I always confuse both names! You're of course correct.","<div class=""md""><p>Thanks, I always confuse both names! You&#39;re of course correct.</p>
</div>",1603022984.0,,False,g97nhpi,False,t3_jct0qt,t1_g94nh1t,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g97nhpi/,0,False,2,False,jct0qt,Cplusplus,t5_2qh6x
415,Amster2,Thank you!,"<div class=""md""><p>Thank you!</p>
</div>",1602975378.0,,False,g95hb15,False,t3_jct0qt,t1_g95h9dc,/r/Cplusplus/comments/jct0qt/how_do_you_turn_a_c_program_into_a_proper_windows/g95hb15/,0,False,1,False,jct0qt,Cplusplus,t5_2qh6x
416,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1642493753.0,,False,ht5jiam,False,t3_s6ouwy,t3_s6ouwy,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht5jiam/,2,False,13,False,s6ouwy,Cplusplus,t5_2qh6x
417,dvali,"Not sure if mine is a success story yet but I think I'm on the way.

Started a systems engineering job a couple of years ago with nothing but a smattering of Python under my belt, which I learned by automating a few tasks at the previous job. I wasn't remotely qualified, but I sounded keen when they mentioned machine learning (relevant to a research project they were about to start), and got the job entirely on that basis.

About a year in, we had built a prototype system for a particular task, but it was awful. It was going to be an edge compute device so needed to be fast, but the prototype was all python in docker containers, messaging between services achieved via nsq. Basically, despite my arguing against it, the group decided that a microservice architecture in docker was the right choice for a small, tight, performant system... Yeah. Still sour about it haha.

I fully understand the use of docker in general. In this case it just brought added complexity and pain for no benefit.

After a few months of trying our best to hold the whole thing together with string, I had enough and took it upon myself to rewrite the whole thing in C++, having never used the language. Didn't bother to tell anyone, just did it between other jobs. About two months in I threw away all the old code and presented a much faster, much simpler, and MUCH more reliable system, and we're still using it now.

I'm a systems engineer so don't consider myself to be a {{language}} developer, but C++ is definitely now my preferred language in most instances. Python sometimes. I started Go before C++, and liked it, but now that I know C++ pretty well I don't really see any non-web use cases for Go. Done a fair amount of Java too, no thanks. Although that was before C++; I might get on better with it now. I know and use several other languages, all self taught. Also occasionally design, fabricate, test simple PCBs and electronics. Definitely a lot of variety in my job!

C++ has a reputation for being difficult but after a few months it's no more difficult than any other language. Lots of things are a lot easier than Python and everything is much more transparent.

My background is in pure mathematics and physics. I think the skills learned there are definitely transferrable. I've noticed I think very differently than my colleagues about problems, and that enables me to offer novel solutions. The particular task I discuss above is a longstanding problem but I was able to solve it by using a little physical intuition to develop a simple physically-inspired optimisation algorithm. I think my background also lends itself well to programming and learning languages in general. I'm very accustomed to thinking in terms of abstract tools and symbols.

My advice is to always be learning something. Any good tech employer should understand the value of continued education. I spend maybe 20% of my work time tinkering with new tools, languages, tech. YouTube tutorials, reading, coursera courses, the list goes on. It ALWAYS pays off. Always. And I'm just playing. This isn't guided learning geared to particular tasks. Never be afraid to experiment, and just because something is not obviously directly related to the job, doesn't mean it's not useful. It very often brings perspective and insight that others don't have.

(My other more specific advice is watch The Cherno on YouTube, specifically his C++ series, not the game engine stuff. Can't rate it highly enough.)","<div class=""md""><p>Not sure if mine is a success story yet but I think I&#39;m on the way.</p>

<p>Started a systems engineering job a couple of years ago with nothing but a smattering of Python under my belt, which I learned by automating a few tasks at the previous job. I wasn&#39;t remotely qualified, but I sounded keen when they mentioned machine learning (relevant to a research project they were about to start), and got the job entirely on that basis.</p>

<p>About a year in, we had built a prototype system for a particular task, but it was awful. It was going to be an edge compute device so needed to be fast, but the prototype was all python in docker containers, messaging between services achieved via nsq. Basically, despite my arguing against it, the group decided that a microservice architecture in docker was the right choice for a small, tight, performant system... Yeah. Still sour about it haha.</p>

<p>I fully understand the use of docker in general. In this case it just brought added complexity and pain for no benefit.</p>

<p>After a few months of trying our best to hold the whole thing together with string, I had enough and took it upon myself to rewrite the whole thing in C++, having never used the language. Didn&#39;t bother to tell anyone, just did it between other jobs. About two months in I threw away all the old code and presented a much faster, much simpler, and MUCH more reliable system, and we&#39;re still using it now.</p>

<p>I&#39;m a systems engineer so don&#39;t consider myself to be a {{language}} developer, but C++ is definitely now my preferred language in most instances. Python sometimes. I started Go before C++, and liked it, but now that I know C++ pretty well I don&#39;t really see any non-web use cases for Go. Done a fair amount of Java too, no thanks. Although that was before C++; I might get on better with it now. I know and use several other languages, all self taught. Also occasionally design, fabricate, test simple PCBs and electronics. Definitely a lot of variety in my job!</p>

<p>C++ has a reputation for being difficult but after a few months it&#39;s no more difficult than any other language. Lots of things are a lot easier than Python and everything is much more transparent.</p>

<p>My background is in pure mathematics and physics. I think the skills learned there are definitely transferrable. I&#39;ve noticed I think very differently than my colleagues about problems, and that enables me to offer novel solutions. The particular task I discuss above is a longstanding problem but I was able to solve it by using a little physical intuition to develop a simple physically-inspired optimisation algorithm. I think my background also lends itself well to programming and learning languages in general. I&#39;m very accustomed to thinking in terms of abstract tools and symbols.</p>

<p>My advice is to always be learning something. Any good tech employer should understand the value of continued education. I spend maybe 20% of my work time tinkering with new tools, languages, tech. YouTube tutorials, reading, coursera courses, the list goes on. It ALWAYS pays off. Always. And I&#39;m just playing. This isn&#39;t guided learning geared to particular tasks. Never be afraid to experiment, and just because something is not obviously directly related to the job, doesn&#39;t mean it&#39;s not useful. It very often brings perspective and insight that others don&#39;t have.</p>

<p>(My other more specific advice is watch The Cherno on YouTube, specifically his C++ series, not the game engine stuff. Can&#39;t rate it highly enough.)</p>
</div>",1642542200.0,,1642542478.0,ht8elix,False,t3_s6ouwy,t3_s6ouwy,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht8elix/,0,False,3,False,s6ouwy,Cplusplus,t5_2qh6x
418,FrozenFirebat,I got lucky. I was a butcher. I also liked making a renderer as a hobby project and got into Vulkan during the early days. Met my first employer here on Reddit and they took a chance on me.,"<div class=""md""><p>I got lucky. I was a butcher. I also liked making a renderer as a hobby project and got into Vulkan during the early days. Met my first employer here on Reddit and they took a chance on me.</p>
</div>",1642509682.0,,False,ht64jfp,False,t3_s6ouwy,t3_s6ouwy,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht64jfp/,1,False,3,False,s6ouwy,Cplusplus,t5_2qh6x
419,mredding,"I'm not a self-taught professional but I've worked with many who have been, even in recent years. All of them came up through QA/testing departments. A really good QA/tester is going to have intimate knowledge of the product, down through the source code. You would look at the bug report, the code submission, the developer written tests, and ideally deduce your own test scenarios that we didn't think of (no really, break my shit, break it now, before it breaks in production and embarrasses us all). You would even want to write your own automated tests.

QA is the perfect environment to develop your own skill, and if you're not working with a bunch of elitist jerks, no developer should have any problem helping you learn code and improve your job, because that helps us do our job and get our work out the door all the faster and better. After a while, you can become proficient enough to get your shot at transitioning.

For all whom I've worked with, it took a few years, but I don't know how much they intended to make that transition, how much push back they got, etc... So I can't say how long it would take you to get there if you went this route.

And of course there's no guarantee that opportunity would present itself. With that in mind, you do want to teach yourself programming, you do want to do so in a way that you can put it down on a resume (writing automated tests in X language and Y testing suite for Z years), and you do want to develop a portfolio of code projects to showcase in lieu of a formal education.

I encourage you to pursue a formal education eventually. While achieving this goal is indeed an accomplishment that affords you more opportunity than ever before, you will always be in a niche among your peers. That will become evident. I have a BS and I know I'm stuck in a niche; if only I had a masters, my opportunities might have matched my ambitions... That is to say, there are things I want to do, things I can do, that I'll never get paid to do because I lack the credentials. You will be in the same boat, because we're all in that same boat. Any peer with a BS will have more opportunities than you will have, just as my peers with a MS have more opportunities than I have. Even if they're less qualified. The statistics don't lie: those with higher education receive higher compensation at all points in their career than those of lower education. I know it's a big ask, and I'm not trying to dismiss you here and say, ""Psh, go to school!"" like I'm sure you're sick of hearing. Do what you've got to do, but if you can still factor a formal education in there somewhere, it's totally worth your time. My brother is in his 40s and is doing the same thing, because it's not too late. And when you're in your career stride, employers are more willing to pay your tuition than you may realize. In fact, it's practically a slogan I've heard throughout my career that masters degrees are nice, if the employer is willing to pay for it... I'm just waiting for my son to get a little older before I consider diving into that path myself.","<div class=""md""><p>I&#39;m not a self-taught professional but I&#39;ve worked with many who have been, even in recent years. All of them came up through QA/testing departments. A really good QA/tester is going to have intimate knowledge of the product, down through the source code. You would look at the bug report, the code submission, the developer written tests, and ideally deduce your own test scenarios that we didn&#39;t think of (no really, break my shit, break it now, before it breaks in production and embarrasses us all). You would even want to write your own automated tests.</p>

<p>QA is the perfect environment to develop your own skill, and if you&#39;re not working with a bunch of elitist jerks, no developer should have any problem helping you learn code and improve your job, because that helps us do our job and get our work out the door all the faster and better. After a while, you can become proficient enough to get your shot at transitioning.</p>

<p>For all whom I&#39;ve worked with, it took a few years, but I don&#39;t know how much they intended to make that transition, how much push back they got, etc... So I can&#39;t say how long it would take you to get there if you went this route.</p>

<p>And of course there&#39;s no guarantee that opportunity would present itself. With that in mind, you do want to teach yourself programming, you do want to do so in a way that you can put it down on a resume (writing automated tests in X language and Y testing suite for Z years), and you do want to develop a portfolio of code projects to showcase in lieu of a formal education.</p>

<p>I encourage you to pursue a formal education eventually. While achieving this goal is indeed an accomplishment that affords you more opportunity than ever before, you will always be in a niche among your peers. That will become evident. I have a BS and I know I&#39;m stuck in a niche; if only I had a masters, my opportunities might have matched my ambitions... That is to say, there are things I want to do, things I can do, that I&#39;ll never get paid to do because I lack the credentials. You will be in the same boat, because we&#39;re all in that same boat. Any peer with a BS will have more opportunities than you will have, just as my peers with a MS have more opportunities than I have. Even if they&#39;re less qualified. The statistics don&#39;t lie: those with higher education receive higher compensation at all points in their career than those of lower education. I know it&#39;s a big ask, and I&#39;m not trying to dismiss you here and say, &quot;Psh, go to school!&quot; like I&#39;m sure you&#39;re sick of hearing. Do what you&#39;ve got to do, but if you can still factor a formal education in there somewhere, it&#39;s totally worth your time. My brother is in his 40s and is doing the same thing, because it&#39;s not too late. And when you&#39;re in your career stride, employers are more willing to pay your tuition than you may realize. In fact, it&#39;s practically a slogan I&#39;ve heard throughout my career that masters degrees are nice, if the employer is willing to pay for it... I&#39;m just waiting for my son to get a little older before I consider diving into that path myself.</p>
</div>",1642519264.0,,False,ht6oq1z,False,t3_s6ouwy,t3_s6ouwy,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht6oq1z/,1,False,3,False,s6ouwy,Cplusplus,t5_2qh6x
420,,"Self-taught, never taken a computer class outside of high-school. Tried learning C++ on my own starting at around 15. I read a ton, but this was 1995, and I was barely capable in QuickBASIC. I managed to get a “Hello World” up, but anything beyond that was beyond me. Couldn’t decipher error messages, no idea what to do about the segfaults I got right away. Gave up after a couple weeks of effort, but all I had to read was in the Help menu of the Turbo C++ “IDE” and that didn’t get me far.

Messed around with PHP from ‘97 to ‘99. That got me a _little_ more familiar with C, or at least the terminology and conventions, given how a lot of it was fairly thin wrappers around libc at the time. This also directed me to Linux, and `man glibc` and its various functions was another stepping stone. Took another crack at it, I think I got to a functional `for` loop that time, before I was again stymied by memory management when I tried to go further. I had access to much more docs this time, and learned more, but still didn’t have enough generalist background to know that I had to go through B to get from A to C.

In 2000 I set up a FreeBSD system. I was working as a dial-up internet helpdesk tech since ‘98, and read everything I didn’t understand, so I got somewhat familiar with IP and TCP/UDP, to a level well above what was needed for my job. I spent about a week just getting a system up. Most things needed compiling, but there was a really strong community around it at the time, so I was able to search error messages and find solutions. This filled in more and more blank spots as I got more and more ambitious.

I eventually got a qmail, ftp, and http server up. Our internet kept going down at the place I was living with friends, so we got a second connection. I set up a FreeBSD router with failover if one provider was down. All of this took a lot of learning, a lot of compiling, and a lot of failures. I learned from each one.

Eventually, I went to another company to do software support. I kind of apprenticed with the (only) network admin at that company. When he left, the intern took over. When things got hard, the intern quit and I was the only real choice since the company had two weeks of notice.

Oh, somewhere in here I learned Ruby, and with it the basics of OOP.

Sometime around 2004, with all my reading and experimenting, I heard about Bjarne Stroustrup. I bought The C++ Programming Language 3rd edition and read it cover to cover. It’s kind of a superpower of mine. In high school, I read an RPG II (old programming language) textbook in a week, and took 2nd place in a statewide programming competition the next week. So yeah, with a good source and all the context I’d built up before, it finally clicked, or at least enough to be able to unstick myself. I still made tons of newbie mistakes. One in particular I remember, I wanted my exception throwing to be more efficient, so I changed everything in the learning library I was writing to throw pointers instead of copying. I never knew why I’d occasionally segfault on errors until years later. When you’re in the process of crashing, you tend to not overwrite memory, so it’d only happen like 1 out of 100 times when trying to print the error message. I wasn’t nearly sophisticated enough to work that out.

I eventually moved up to being a dev in that company, mostly C# which I’d picked up on the job and at home, with some very primitive C++ work. Did that for 4 years, about 5% touching C++ code. Sometime in there I realized I was throwing pointers to locals, the C# and doing it professionally taught me a good mental model of stacks.

Did Java and Perl for a couple years at Amazon. I was working this whole time on my C++ learning library, and I was starting to get fairly good, to the point where when I went to my next job that was full C++, I was helping my teammates solve hundreds of lines long template errors.

Only stayed there a couple years though, it was a failed start-up. Now I’m trying to get back up to speed on C++20 features, particularly modules.

Anyway, the tl;dr is, keep at it until you stop making progress, then go do other things. They’ll add context. Keep trying every so often, worst case you’ll have new things to be extremely curious about whose solutions will stick strongly in your head when you happen upon them. Eventually, you’ll know enough to be able to bootstrap and solve problems without having to temporarily give up and move on to other things. Then, hone those skills, make something you’re proud of, then make it better, or broader. When you feel you can do it and get paid for it, apply, apply, apply to jobs. Just get your foot in the door, no matter how crappy a shop it may seem. Once you’ve got a year of programming on your resume, you’ll have a _much_ easier time getting your next job, where you’ll learn what was good about your first job, and what was bad. It’ll probably mostly be bad if you got it without a degree, but you won’t know that until you move on. Keep it up, move on when you aren’t learning much at one place anymore. Next thing you know, you’ve got a career.","<div class=""md""><p>Self-taught, never taken a computer class outside of high-school. Tried learning C++ on my own starting at around 15. I read a ton, but this was 1995, and I was barely capable in QuickBASIC. I managed to get a “Hello World” up, but anything beyond that was beyond me. Couldn’t decipher error messages, no idea what to do about the segfaults I got right away. Gave up after a couple weeks of effort, but all I had to read was in the Help menu of the Turbo C++ “IDE” and that didn’t get me far.</p>

<p>Messed around with PHP from ‘97 to ‘99. That got me a <em>little</em> more familiar with C, or at least the terminology and conventions, given how a lot of it was fairly thin wrappers around libc at the time. This also directed me to Linux, and <code>man glibc</code> and its various functions was another stepping stone. Took another crack at it, I think I got to a functional <code>for</code> loop that time, before I was again stymied by memory management when I tried to go further. I had access to much more docs this time, and learned more, but still didn’t have enough generalist background to know that I had to go through B to get from A to C.</p>

<p>In 2000 I set up a FreeBSD system. I was working as a dial-up internet helpdesk tech since ‘98, and read everything I didn’t understand, so I got somewhat familiar with IP and TCP/UDP, to a level well above what was needed for my job. I spent about a week just getting a system up. Most things needed compiling, but there was a really strong community around it at the time, so I was able to search error messages and find solutions. This filled in more and more blank spots as I got more and more ambitious.</p>

<p>I eventually got a qmail, ftp, and http server up. Our internet kept going down at the place I was living with friends, so we got a second connection. I set up a FreeBSD router with failover if one provider was down. All of this took a lot of learning, a lot of compiling, and a lot of failures. I learned from each one.</p>

<p>Eventually, I went to another company to do software support. I kind of apprenticed with the (only) network admin at that company. When he left, the intern took over. When things got hard, the intern quit and I was the only real choice since the company had two weeks of notice.</p>

<p>Oh, somewhere in here I learned Ruby, and with it the basics of OOP.</p>

<p>Sometime around 2004, with all my reading and experimenting, I heard about Bjarne Stroustrup. I bought The C++ Programming Language 3rd edition and read it cover to cover. It’s kind of a superpower of mine. In high school, I read an RPG II (old programming language) textbook in a week, and took 2nd place in a statewide programming competition the next week. So yeah, with a good source and all the context I’d built up before, it finally clicked, or at least enough to be able to unstick myself. I still made tons of newbie mistakes. One in particular I remember, I wanted my exception throwing to be more efficient, so I changed everything in the learning library I was writing to throw pointers instead of copying. I never knew why I’d occasionally segfault on errors until years later. When you’re in the process of crashing, you tend to not overwrite memory, so it’d only happen like 1 out of 100 times when trying to print the error message. I wasn’t nearly sophisticated enough to work that out.</p>

<p>I eventually moved up to being a dev in that company, mostly C# which I’d picked up on the job and at home, with some very primitive C++ work. Did that for 4 years, about 5% touching C++ code. Sometime in there I realized I was throwing pointers to locals, the C# and doing it professionally taught me a good mental model of stacks.</p>

<p>Did Java and Perl for a couple years at Amazon. I was working this whole time on my C++ learning library, and I was starting to get fairly good, to the point where when I went to my next job that was full C++, I was helping my teammates solve hundreds of lines long template errors.</p>

<p>Only stayed there a couple years though, it was a failed start-up. Now I’m trying to get back up to speed on C++20 features, particularly modules.</p>

<p>Anyway, the tl;dr is, keep at it until you stop making progress, then go do other things. They’ll add context. Keep trying every so often, worst case you’ll have new things to be extremely curious about whose solutions will stick strongly in your head when you happen upon them. Eventually, you’ll know enough to be able to bootstrap and solve problems without having to temporarily give up and move on to other things. Then, hone those skills, make something you’re proud of, then make it better, or broader. When you feel you can do it and get paid for it, apply, apply, apply to jobs. Just get your foot in the door, no matter how crappy a shop it may seem. Once you’ve got a year of programming on your resume, you’ll have a <em>much</em> easier time getting your next job, where you’ll learn what was good about your first job, and what was bad. It’ll probably mostly be bad if you got it without a degree, but you won’t know that until you move on. Keep it up, move on when you aren’t learning much at one place anymore. Next thing you know, you’ve got a career.</p>
</div>",1642752327.0,,False,htko62v,False,t3_s6ouwy,t3_s6ouwy,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/htko62v/,1,False,3,False,s6ouwy,Cplusplus,t5_2qh6x
421,,"I am an engineer but was working mainly with projects and system engineering. Decided to take C++ nano degree on Udacity, after that i applied for work as a developer in entry level positions and it landed be a job. Worked as a developer for more than a year now and it's quite nice.","<div class=""md""><p>I am an engineer but was working mainly with projects and system engineering. Decided to take C++ nano degree on Udacity, after that i applied for work as a developer in entry level positions and it landed be a job. Worked as a developer for more than a year now and it&#39;s quite nice.</p>
</div>",1642607544.0,,False,htbwnm3,False,t3_s6ouwy,t3_s6ouwy,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/htbwnm3/,0,False,1,False,s6ouwy,Cplusplus,t5_2qh6x
422,Sakops,"What field of academics did you work in, if you don't mind me asking? Did you have exposure to programming there by any chance?","<div class=""md""><p>What field of academics did you work in, if you don&#39;t mind me asking? Did you have exposure to programming there by any chance?</p>
</div>",1642493840.0,,False,ht5jmck,True,t3_s6ouwy,t1_ht5jiam,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht5jmck/,1,False,7,False,s6ouwy,Cplusplus,t5_2qh6x
423,ElaborateSloth,"I started learning C++ with [learncpp.com](https://learncpp.com), and have never regretted that decision. It is a well thought out series of tutorials for both experienced programmers and complete novices. Its credibility is well known as well.

I agree that it can be hard to find an online tutorial that follow good programming practices, but you really can't go wrong with learncpp.","<div class=""md""><p>I started learning C++ with <a href=""https://learncpp.com"">learncpp.com</a>, and have never regretted that decision. It is a well thought out series of tutorials for both experienced programmers and complete novices. Its credibility is well known as well.</p>

<p>I agree that it can be hard to find an online tutorial that follow good programming practices, but you really can&#39;t go wrong with learncpp.</p>
</div>",1642495818.0,,False,ht5m4e4,False,t3_s6ouwy,t1_ht5jiam,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht5m4e4/,1,False,6,False,s6ouwy,Cplusplus,t5_2qh6x
424,Sakops,"You use vulkan, so you are in the game industry?","<div class=""md""><p>You use vulkan, so you are in the game industry?</p>
</div>",1642514455.0,,False,ht6dj0g,True,t3_s6ouwy,t1_ht64jfp,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht6dj0g/,1,False,1,False,s6ouwy,Cplusplus,t5_2qh6x
425,Sakops,"Idk the country that I live in doesn't really require you to have bachelors, let alone a master in computer science for many developer jobs. Tbh it's not something I can afford. I am considering an apprenticeship  though","<div class=""md""><p>Idk the country that I live in doesn&#39;t really require you to have bachelors, let alone a master in computer science for many developer jobs. Tbh it&#39;s not something I can afford. I am considering an apprenticeship  though</p>
</div>",1642524657.0,,False,ht72tb2,True,t3_s6ouwy,t1_ht6oq1z,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht72tb2/,0,False,3,False,s6ouwy,Cplusplus,t5_2qh6x
426,Sakops,Damn these are the kind of stories that really inspire me. You truly deserve what you have. Learning on your own especially suring the time when the internet was in its baby phase is hard as hell,"<div class=""md""><p>Damn these are the kind of stories that really inspire me. You truly deserve what you have. Learning on your own especially suring the time when the internet was in its baby phase is hard as hell</p>
</div>",1642843403.0,,False,htq2ir2,True,t3_s6ouwy,t1_htko62v,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/htq2ir2/,1,False,1,False,s6ouwy,Cplusplus,t5_2qh6x
427,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1642495904.0,,False,ht5m8ai,False,t3_s6ouwy,t1_ht5jmck,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht5m8ai/,1,False,7,False,s6ouwy,Cplusplus,t5_2qh6x
428,Sakops,"I head a lot of bad review of it, I think learning from books is a much better idea","<div class=""md""><p>I head a lot of bad review of it, I think learning from books is a much better idea</p>
</div>",1642497613.0,,False,ht5od4p,True,t3_s6ouwy,t1_ht5m4e4,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht5od4p/,1,False,1,False,s6ouwy,Cplusplus,t5_2qh6x
429,FrozenFirebat,"Yep. Working on a niche game engine. Got double lucky in that regard too. Games Industry is a hard one to break into. Seems like everybody is looking for more people, but it's hard to get a job in the games industry without games industry experience.","<div class=""md""><p>Yep. Working on a niche game engine. Got double lucky in that regard too. Games Industry is a hard one to break into. Seems like everybody is looking for more people, but it&#39;s hard to get a job in the games industry without games industry experience.</p>
</div>",1642531998.0,,False,ht7mtdp,False,t3_s6ouwy,t1_ht6dj0g,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht7mtdp/,1,False,2,False,s6ouwy,Cplusplus,t5_2qh6x
430,,"Well then I don’t feel so bad about the wall of text. Good. Keep at it. You’ll get there eventually. It can take longer for us poor kids to make it, but when we do, we’re guaranteed to have the most important skill of all once schooling is over—how to learn new things without a teacher. Just make sure to keep yourself open to learning things the easy way, too.","<div class=""md""><p>Well then I don’t feel so bad about the wall of text. Good. Keep at it. You’ll get there eventually. It can take longer for us poor kids to make it, but when we do, we’re guaranteed to have the most important skill of all once schooling is over—how to learn new things without a teacher. Just make sure to keep yourself open to learning things the easy way, too.</p>
</div>",1642845605.0,,False,htq5ixw,False,t3_s6ouwy,t1_htq2ir2,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/htq5ixw/,0,False,2,False,s6ouwy,Cplusplus,t5_2qh6x
431,Sakops,Thanks for the advice. Do you think the 5th edition 2013 of c++ primer is sufficient?,"<div class=""md""><p>Thanks for the advice. Do you think the 5th edition 2013 of c++ primer is sufficient?</p>
</div>",1642496657.0,,False,ht5n65g,True,t3_s6ouwy,t1_ht5m8ai,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht5n65g/,0,False,2,False,s6ouwy,Cplusplus,t5_2qh6x
432,ElaborateSloth,"I'm interested in where you heard that review, I've only seen recommendations. To each their own though, boils down to preferences.","<div class=""md""><p>I&#39;m interested in where you heard that review, I&#39;ve only seen recommendations. To each their own though, boils down to preferences.</p>
</div>",1642500602.0,,False,ht5s0jc,False,t3_s6ouwy,t1_ht5od4p,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht5s0jc/,0,False,2,False,s6ouwy,Cplusplus,t5_2qh6x
433,Sakops,Are you based in the US?,"<div class=""md""><p>Are you based in the US?</p>
</div>",1642534119.0,,False,ht7sj8q,True,t3_s6ouwy,t1_ht7mtdp,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht7sj8q/,1,False,1,False,s6ouwy,Cplusplus,t5_2qh6x
434,FrozenFirebat,"Yeah. Los Angeles is the cradle of game development. A lot of the biggest banners are based here. You got Riot, Activision, THQ, Sony Santa Monica... the Blizzard campus is within possible driving distance down in Irvine. And because of that, there are tons of smaller studios around here as well.","<div class=""md""><p>Yeah. Los Angeles is the cradle of game development. A lot of the biggest banners are based here. You got Riot, Activision, THQ, Sony Santa Monica... the Blizzard campus is within possible driving distance down in Irvine. And because of that, there are tons of smaller studios around here as well.</p>
</div>",1642534687.0,,False,ht7u2ln,False,t3_s6ouwy,t1_ht7sj8q,/r/Cplusplus/comments/s6ouwy/self_taught_c_developers_success_stories/ht7u2ln/,0,False,2,False,s6ouwy,Cplusplus,t5_2qh6x
435,khedoros,"When you pass the interview, I suppose. I had a pretty iffy grasp of the language when I got my first job writing it. Granted, I *did* have a computer science education backing it up, on the theoretical side. There's a lot more than just the language that you'll need to learn, starting your first job.","<div class=""md""><p>When you pass the interview, I suppose. I had a pretty iffy grasp of the language when I got my first job writing it. Granted, I <em>did</em> have a computer science education backing it up, on the theoretical side. There&#39;s a lot more than just the language that you&#39;ll need to learn, starting your first job.</p>
</div>",1629737178.0,,False,ha1unya,False,t3_pa3fk7,t3_pa3fk7,/r/Cplusplus/comments/pa3fk7/when_do_you_know_you_have_enough_knowledge_about/ha1unya/,1,False,13,False,pa3fk7,Cplusplus,t5_2qh6x
436,Shadow_Gabriel,"Probably when your C++ stops looking like C.

Also, probably when you show your code to another programmer that doesn't know C++ and they ask if you skipped your meds again.","<div class=""md""><p>Probably when your C++ stops looking like C.</p>

<p>Also, probably when you show your code to another programmer that doesn&#39;t know C++ and they ask if you skipped your meds again.</p>
</div>",1629751223.0,,False,ha2t2x9,False,t3_pa3fk7,t3_pa3fk7,/r/Cplusplus/comments/pa3fk7/when_do_you_know_you_have_enough_knowledge_about/ha2t2x9/,1,False,9,False,pa3fk7,Cplusplus,t5_2qh6x
437,yesnomaybe102,After you've completed your first developed program that is fully working?,"<div class=""md""><p>After you&#39;ve completed your first developed program that is fully working?</p>
</div>",1629747624.0,,False,ha2k6o5,False,t3_pa3fk7,t3_pa3fk7,/r/Cplusplus/comments/pa3fk7/when_do_you_know_you_have_enough_knowledge_about/ha2k6o5/,0,False,3,False,pa3fk7,Cplusplus,t5_2qh6x
438,vhite,"I've seen some places take junior devs simply based on some previous experiences with programming, even if they didn't know the language they were meant to be using, with the expectation that they would learn the basics along the way.

Honestly, the main benefit of hiring junior developers in most companies seems to be that you're willing to accept much lower pay and they hope that you will be able to tolerate that pay even a year or two after, when you've learned enough to be a proper productive dev that doesn't need handholding. Smart developers should at this point probably start looking for a new job with shiny new industry experience on their resume, but there are some people that just have issues with quitting their job, either lacking confidence or thinking they owe their company something.","<div class=""md""><p>I&#39;ve seen some places take junior devs simply based on some previous experiences with programming, even if they didn&#39;t know the language they were meant to be using, with the expectation that they would learn the basics along the way.</p>

<p>Honestly, the main benefit of hiring junior developers in most companies seems to be that you&#39;re willing to accept much lower pay and they hope that you will be able to tolerate that pay even a year or two after, when you&#39;ve learned enough to be a proper productive dev that doesn&#39;t need handholding. Smart developers should at this point probably start looking for a new job with shiny new industry experience on their resume, but there are some people that just have issues with quitting their job, either lacking confidence or thinking they owe their company something.</p>
</div>",1629751537.0,,1629751884.0,ha2tv4i,False,t3_pa3fk7,t3_pa3fk7,/r/Cplusplus/comments/pa3fk7/when_do_you_know_you_have_enough_knowledge_about/ha2tv4i/,0,False,3,False,pa3fk7,Cplusplus,t5_2qh6x
439,OMGArron,"Honestly it really depends on the job.

At my company we mostly hire MSc/PhD Mathematicians and Physicists with little to no C++ experience.

Essentially my point is just work hard show you are enthusiastic and eager to learn and that you have a grasp on programming fundamentals. Like vectors vs list, maps/dictionaries, how some languages do memory management (Java garbage collection, C++ manual mostly), compiled vs interpreted languages (C++, Python) etc - obviously there is more but any ""fundamentals"" list online would give you very good starting lists

Good luck","<div class=""md""><p>Honestly it really depends on the job.</p>

<p>At my company we mostly hire MSc/PhD Mathematicians and Physicists with little to no C++ experience.</p>

<p>Essentially my point is just work hard show you are enthusiastic and eager to learn and that you have a grasp on programming fundamentals. Like vectors vs list, maps/dictionaries, how some languages do memory management (Java garbage collection, C++ manual mostly), compiled vs interpreted languages (C++, Python) etc - obviously there is more but any &quot;fundamentals&quot; list online would give you very good starting lists</p>

<p>Good luck</p>
</div>",1630311975.0,,False,hawmvbm,False,t3_pa3fk7,t3_pa3fk7,/r/Cplusplus/comments/pa3fk7/when_do_you_know_you_have_enough_knowledge_about/hawmvbm/,0,False,2,False,pa3fk7,Cplusplus,t5_2qh6x
440,jowowei,"Is it easy to find interview questions that still is used?

I have a engineering bachelor, with a course in C. Can’t say I’m good at it even if I have the highest grade possible.","<div class=""md""><p>Is it easy to find interview questions that still is used?</p>

<p>I have a engineering bachelor, with a course in C. Can’t say I’m good at it even if I have the highest grade possible.</p>
</div>",1629740008.0,,False,ha21nqz,True,t3_pa3fk7,t1_ha1unya,/r/Cplusplus/comments/pa3fk7/when_do_you_know_you_have_enough_knowledge_about/ha21nqz/,2,False,3,False,pa3fk7,Cplusplus,t5_2qh6x
441,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1629789626.0,,1630605334.0,ha4vq7y,False,t3_pa3fk7,t1_ha2t2x9,/r/Cplusplus/comments/pa3fk7/when_do_you_know_you_have_enough_knowledge_about/ha4vq7y/,2,False,1,False,pa3fk7,Cplusplus,t5_2qh6x
442,mredding,"In my experience, there's two different kinds of employers: those who want you to work, and those who want you to think. Those who want you to think probably won't interview you much about writing actual code. I've been to interviews where we didn't talk about code or computer science at all. The worst kinds of jobs are interviewing you for code application specific to their needs - they want a senior specialist with a junior budget, and they're already behind on their deadlines. You can sense the desperation.

The middle ground, they want you for your smarts, and just want to gauge how much they're going to have to invest in you up front, and maybe some of them like that have a lower threshold.

All that is to say, you don't have to be an amazing programmer to land a job. A good place will teach you what you need to know. I've taken on both juniors and seniors who didn't know C++ - because they're good engineers, and language was just a detail.

It's worth studying more programming. It's worth practicing more programming - take on a real project, not just portfolio fodder, but pursue problems that actually interest you, whether it's a practical application, or if the problem is an exercise in code and architecture, and it didn't matter what the program did (ie, make a video game). It's worth studying more computer science and fundamentals, especially calculus, linear algebra, and stats. And it's worth interviewing even now.

You need to go in knowing you have nothing to lose - the market is not without opportunity, because there's always someone hiring. So everyone you interview with is practice for the next interview. The first few are just for shaking out nerves and getting in practice. It'll also give you a feel for the market and how this job search is going to go. You will perfect your interviewing technique as you go, and refine your resume and cover letters. You will go in there with confidence; you know what you know, and you're honest about what you don't. If they don't like it, then it's not for you, or it's not your time.

As for your resume, short and sweet. I don't want to see a work history including Starbucks and McDonalds, it's not relevant. I don't want to see you pad the thing, because bullshit fluffing and needless word count will be used against you. Short and sweet. Talk about your academic career since that's what you've got. The resume is dry and technical.

If you want to brag and show some personality, put it in the cover letter. That's where you get to tell your story, that's where you give some context to your resume, about why that one bullet point is actually so awesome, since it seems so unassuming on its own. If you write a cover letter, it's basically guaranteed to at least be read. That's a lot more than the other guy who couldn't be bothered to write one. You can get 2-3x more attention with a cover letter than the other guys, and that's a big deal. Between you and them, they know more about you, and more often than not, it's about the fit, not the credentials. You're a junior, applying to a junior position. We know you don't know anything or have any experience, those are not the reason we're hiring you. We hire juniors because you're clay. Seniors are rigid, opinionated, and jaded, and they don't like to work very hard. We don't hire juniors because we can't afford seniors, you have things to offer that a pack of seniors cannot offer. We always need a mix. Know that, and sell it.","<div class=""md""><p>In my experience, there&#39;s two different kinds of employers: those who want you to work, and those who want you to think. Those who want you to think probably won&#39;t interview you much about writing actual code. I&#39;ve been to interviews where we didn&#39;t talk about code or computer science at all. The worst kinds of jobs are interviewing you for code application specific to their needs - they want a senior specialist with a junior budget, and they&#39;re already behind on their deadlines. You can sense the desperation.</p>

<p>The middle ground, they want you for your smarts, and just want to gauge how much they&#39;re going to have to invest in you up front, and maybe some of them like that have a lower threshold.</p>

<p>All that is to say, you don&#39;t have to be an amazing programmer to land a job. A good place will teach you what you need to know. I&#39;ve taken on both juniors and seniors who didn&#39;t know C++ - because they&#39;re good engineers, and language was just a detail.</p>

<p>It&#39;s worth studying more programming. It&#39;s worth practicing more programming - take on a real project, not just portfolio fodder, but pursue problems that actually interest you, whether it&#39;s a practical application, or if the problem is an exercise in code and architecture, and it didn&#39;t matter what the program did (ie, make a video game). It&#39;s worth studying more computer science and fundamentals, especially calculus, linear algebra, and stats. And it&#39;s worth interviewing even now.</p>

<p>You need to go in knowing you have nothing to lose - the market is not without opportunity, because there&#39;s always someone hiring. So everyone you interview with is practice for the next interview. The first few are just for shaking out nerves and getting in practice. It&#39;ll also give you a feel for the market and how this job search is going to go. You will perfect your interviewing technique as you go, and refine your resume and cover letters. You will go in there with confidence; you know what you know, and you&#39;re honest about what you don&#39;t. If they don&#39;t like it, then it&#39;s not for you, or it&#39;s not your time.</p>

<p>As for your resume, short and sweet. I don&#39;t want to see a work history including Starbucks and McDonalds, it&#39;s not relevant. I don&#39;t want to see you pad the thing, because bullshit fluffing and needless word count will be used against you. Short and sweet. Talk about your academic career since that&#39;s what you&#39;ve got. The resume is dry and technical.</p>

<p>If you want to brag and show some personality, put it in the cover letter. That&#39;s where you get to tell your story, that&#39;s where you give some context to your resume, about why that one bullet point is actually so awesome, since it seems so unassuming on its own. If you write a cover letter, it&#39;s basically guaranteed to at least be read. That&#39;s a lot more than the other guy who couldn&#39;t be bothered to write one. You can get 2-3x more attention with a cover letter than the other guys, and that&#39;s a big deal. Between you and them, they know more about you, and more often than not, it&#39;s about the fit, not the credentials. You&#39;re a junior, applying to a junior position. We know you don&#39;t know anything or have any experience, those are not the reason we&#39;re hiring you. We hire juniors because you&#39;re clay. Seniors are rigid, opinionated, and jaded, and they don&#39;t like to work very hard. We don&#39;t hire juniors because we can&#39;t afford seniors, you have things to offer that a pack of seniors cannot offer. We always need a mix. Know that, and sell it.</p>
</div>",1629742827.0,,False,ha28jxr,False,t3_pa3fk7,t1_ha21nqz,/r/Cplusplus/comments/pa3fk7/when_do_you_know_you_have_enough_knowledge_about/ha28jxr/,0,False,11,False,pa3fk7,Cplusplus,t5_2qh6x
443,khedoros,"Cracking the Coding Interview is kind of the classic. It goes through a few patterns of interview processes, timelines to prepare for them, and not just specific coding exercises but also a bunch of patterns to analyze problems that aren't covered in the book.","<div class=""md""><p>Cracking the Coding Interview is kind of the classic. It goes through a few patterns of interview processes, timelines to prepare for them, and not just specific coding exercises but also a bunch of patterns to analyze problems that aren&#39;t covered in the book.</p>
</div>",1629740737.0,,False,ha23g39,False,t3_pa3fk7,t1_ha21nqz,/r/Cplusplus/comments/pa3fk7/when_do_you_know_you_have_enough_knowledge_about/ha23g39/,0,False,1,False,pa3fk7,Cplusplus,t5_2qh6x
444,Shadow_Gabriel,Tell that to all the universities in my country.,"<div class=""md""><p>Tell that to all the universities in my country.</p>
</div>",1629790661.0,,False,ha4wxzw,False,t3_pa3fk7,t1_ha4vq7y,/r/Cplusplus/comments/pa3fk7/when_do_you_know_you_have_enough_knowledge_about/ha4wxzw/,0,False,3,False,pa3fk7,Cplusplus,t5_2qh6x
445,,"I don't think it is outdated. You assume everyone starts with a modern tutorial...

(They don't).","<div class=""md""><p>I don&#39;t think it is outdated. You assume everyone starts with a modern tutorial...</p>

<p>(They don&#39;t).</p>
</div>",1629811665.0,,False,ha5qmgq,False,t3_pa3fk7,t1_ha4vq7y,/r/Cplusplus/comments/pa3fk7/when_do_you_know_you_have_enough_knowledge_about/ha5qmgq/,0,False,2,False,pa3fk7,Cplusplus,t5_2qh6x
446,0xcedbeef,Yes,"<div class=""md""><p>Yes</p>
</div>",1686059024.0,,False,jn4ac1q,False,t3_142fycr,t3_142fycr,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn4ac1q/,0,False,19,False,142fycr,Cplusplus,t5_2qh6x
447,bargle0,Yes.,"<div class=""md""><p>Yes.</p>
</div>",1686059314.0,,False,jn4azwv,False,t3_142fycr,t3_142fycr,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn4azwv/,0,False,13,False,142fycr,Cplusplus,t5_2qh6x
448,slashtab,Yes!!,"<div class=""md""><p>Yes!!</p>
</div>",1686064629.0,,False,jn4o22h,False,t3_142fycr,t3_142fycr,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn4o22h/,0,False,13,False,142fycr,Cplusplus,t5_2qh6x
449,Celestial_Blu3,Yes,"<div class=""md""><p>Yes</p>
</div>",1686075918.0,,False,jn5gkk4,False,t3_142fycr,t3_142fycr,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn5gkk4/,0,False,10,False,142fycr,Cplusplus,t5_2qh6x
450,morganmachine91,"I’d love to see more subreddits shutting down indefinitely pending a change in policy from Reddit, but I know that’s a big step.","<div class=""md""><p>I’d love to see more subreddits shutting down indefinitely pending a change in policy from Reddit, but I know that’s a big step.</p>
</div>",1686087763.0,,False,jn6blhu,False,t3_142fycr,t3_142fycr,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn6blhu/,0,False,3,False,142fycr,Cplusplus,t5_2qh6x
451,,"Yes.

And I do urge as many people not to come back to reddit unless they are reasonable (although a company that tries to do this is already never to be trusted and looked up to again).","<div class=""md""><p>Yes.</p>

<p>And I do urge as many people not to come back to reddit unless they are reasonable (although a company that tries to do this is already never to be trusted and looked up to again).</p>
</div>",1686121396.0,,False,jn84tdk,False,t3_142fycr,t3_142fycr,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn84tdk/,0,False,3,False,142fycr,Cplusplus,t5_2qh6x
452,2uk08573,Yeess!!!,"<div class=""md""><p>Yeess!!!</p>
</div>",1686523703.0,,False,jnu4uah,False,t3_142fycr,t3_142fycr,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jnu4uah/,0,False,2,False,142fycr,Cplusplus,t5_2qh6x
453,mikeblas,"It won't change anything, either way.

Edit: Here's [a longer thread about the anticipated impact](https://www.reddit.com/r/CasualConversation/comments/143dbzh/subreddits_going_dark_arent_really_going_to_do/)","<div class=""md""><p>It won&#39;t change anything, either way.</p>

<p>Edit: Here&#39;s <a href=""https://www.reddit.com/r/CasualConversation/comments/143dbzh/subreddits_going_dark_arent_really_going_to_do/"">a longer thread about the anticipated impact</a></p>
</div>",1686060482.0,,1686153995.0,jn4dqc5,False,t3_142fycr,t3_142fycr,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn4dqc5/,2,False,-6,False,142fycr,Cplusplus,t5_2qh6x
454,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1686115754.0,,1686118631.0,jn7x6h6,False,t3_142fycr,t3_142fycr,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn7x6h6/,1,False,1,False,142fycr,Cplusplus,t5_2qh6x
455,lord_pirax,dbmn   and,"<div class=""md""><p>dbmn   and</p>
</div>",1693087510.0,,False,jxvu3ux,False,t3_142fycr,t3_142fycr,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jxvu3ux/,0,False,1,False,142fycr,Cplusplus,t5_2qh6x
456,,Might as well give it a shot then,"<div class=""md""><p>Might as well give it a shot then</p>
</div>",1686060677.0,,False,jn4e75x,False,t3_142fycr,t1_jn4dqc5,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn4e75x/,1,False,14,False,142fycr,Cplusplus,t5_2qh6x
457,,Don't use reddit then if they don't care even about this.,"<div class=""md""><p>Don&#39;t use reddit then if they don&#39;t care even about this.</p>
</div>",1686121298.0,,False,jn84ox1,False,t3_142fycr,t1_jn4dqc5,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn84ox1/,0,False,1,False,142fycr,Cplusplus,t5_2qh6x
458,IamImposter,"20m. That's so huge. 

But my question is why would any developer spend any money on api charges just to provide a free to use app? Do they have any way of making money from a free app?","<div class=""md""><p>20m. That&#39;s so huge. </p>

<p>But my question is why would any developer spend any money on api charges just to provide a free to use app? Do they have any way of making money from a free app?</p>
</div>",1686131842.0,,False,jn8h9rg,False,t3_142fycr,t1_jn7x6h6,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn8h9rg/,1,False,1,False,142fycr,Cplusplus,t5_2qh6x
459,mikeblas,It is not without cost.,"<div class=""md""><p>It is not without cost.</p>
</div>",1686078586.0,,False,jn5nkf8,False,t3_142fycr,t1_jn4e75x,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn5nkf8/,2,False,-4,False,142fycr,Cplusplus,t5_2qh6x
460,mikeblas,As usual: ads.,"<div class=""md""><p>As usual: ads.</p>
</div>",1686153958.0,,False,jn9rhvf,False,t3_142fycr,t1_jn8h9rg,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn9rhvf/,0,False,1,False,142fycr,Cplusplus,t5_2qh6x
461,,What is the cost then?,"<div class=""md""><p>What is the cost then?</p>
</div>",1686081562.0,,False,jn5vffe,False,t3_142fycr,t1_jn5nkf8,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn5vffe/,1,False,5,False,142fycr,Cplusplus,t5_2qh6x
462,Curcles,Dude there are alternates out there to reddit,"<div class=""md""><p>Dude there are alternates out there to reddit</p>
</div>",1686107237.0,,False,jn7iq0q,False,t3_142fycr,t1_jn5nkf8,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn7iq0q/,0,False,1,False,142fycr,Cplusplus,t5_2qh6x
463,mikeblas,Time and effort.,"<div class=""md""><p>Time and effort.</p>
</div>",1686153978.0,,False,jn9rjwu,False,t3_142fycr,t1_jn5vffe,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jn9rjwu/,1,False,1,False,142fycr,Cplusplus,t5_2qh6x
464,,"It will be hard, indeed, to not open Reddit for 2 whole days, but I think we can pull through if we support each other during those harsh days /s","<div class=""md""><p>It will be hard, indeed, to not open Reddit for 2 whole days, but I think we can pull through if we support each other during those harsh days /s</p>
</div>",1686159473.0,,False,jna6ciu,False,t3_142fycr,t1_jn9rjwu,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jna6ciu/,1,False,1,False,142fycr,Cplusplus,t5_2qh6x
465,mikeblas,"Sorry, I thought it was obvious that I was describing the effort put in by the moderators.","<div class=""md""><p>Sorry, I thought it was obvious that I was describing the effort put in by the moderators.</p>
</div>",1686160241.0,,False,jna8f2h,False,t3_142fycr,t1_jna6ciu,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jna8f2h/,1,False,1,False,142fycr,Cplusplus,t5_2qh6x
466,,"While English isn't my native language, I don't think I could have inferred that from your comment. Anyway, to save some of my own time and effort, I'll leave it at this.","<div class=""md""><p>While English isn&#39;t my native language, I don&#39;t think I could have inferred that from your comment. Anyway, to save some of my own time and effort, I&#39;ll leave it at this.</p>
</div>",1686164629.0,,False,jnak79t,False,t3_142fycr,t1_jna8f2h,/r/Cplusplus/comments/142fycr/should_this_subreddit_participate_in_the_june_12/jnak79t/,0,False,1,False,142fycr,Cplusplus,t5_2qh6x
467,ascents1,"I spent all day trying to figure out why my code was wrong in VSCode. Then I ran it in DevC++, and it works fine. Why is VSCode outputting differently? I am new to C++, this program is just a simple calculator program for my course. Thanks","<div class=""md""><p>I spent all day trying to figure out why my code was wrong in VSCode. Then I ran it in DevC++, and it works fine. Why is VSCode outputting differently? I am new to C++, this program is just a simple calculator program for my course. Thanks</p>
</div>",1683666207.0,,False,jjirfly,True,t3_13d5wxk,t3_13d5wxk,/r/Cplusplus/comments/13d5wxk/different_output_between_ides/jjirfly/,2,False,10,False,13d5wxk,Cplusplus,t5_2qh6x
468,flyingron,"Something is very wrong with the one on the left.   Somehow op1 and op2 got reversed.

By the way, any time you have to cut and paste the same thing over and over like that, it's a good indication that your program is designed wrong.","<div class=""md""><p>Something is very wrong with the one on the left.   Somehow op1 and op2 got reversed.</p>

<p>By the way, any time you have to cut and paste the same thing over and over like that, it&#39;s a good indication that your program is designed wrong.</p>
</div>",1683666653.0,,False,jjiskt8,False,t3_13d5wxk,t3_13d5wxk,/r/Cplusplus/comments/13d5wxk/different_output_between_ides/jjiskt8/,1,False,6,False,13d5wxk,Cplusplus,t5_2qh6x
469,cosmin10834,"try to compile it first, then debug it, ya now, gdb isn't compiling stuff, g++/gcc does that","<div class=""md""><p>try to compile it first, then debug it, ya now, gdb isn&#39;t compiling stuff, g++/gcc does that</p>
</div>",1683717738.0,,False,jjl8lld,False,t3_13d5wxk,t3_13d5wxk,/r/Cplusplus/comments/13d5wxk/different_output_between_ides/jjl8lld/,0,False,1,False,13d5wxk,Cplusplus,t5_2qh6x
470,lukajda33,"Are you absolutely sure you are running the most recent version of the code and not some binary you compiled some while ago ?

EDIT: I think it could be that because the command in the terminal only shows gdb.exe - a debugger, so you might have compiled your program a while ago, made some changes, but the debug command still uses the old executable that do not include the changes in your code. That said, the task name is ""g++ build"", so it is weird it would nto actually compile the program, but the command shown says it does not.","<div class=""md""><p>Are you absolutely sure you are running the most recent version of the code and not some binary you compiled some while ago ?</p>

<p>EDIT: I think it could be that because the command in the terminal only shows gdb.exe - a debugger, so you might have compiled your program a while ago, made some changes, but the debug command still uses the old executable that do not include the changes in your code. That said, the task name is &quot;g++ build&quot;, so it is weird it would nto actually compile the program, but the command shown says it does not.</p>
</div>",1683666606.0,,1683666851.0,jjisgmz,False,t3_13d5wxk,t1_jjirfly,/r/Cplusplus/comments/13d5wxk/different_output_between_ides/jjisgmz/,1,False,20,False,13d5wxk,Cplusplus,t5_2qh6x
471,no-sig-available,">trying to figure out why my code was wrong in VSCode

VSCode is known to have a default setting of **not** saving changes before compiling the program. It prefers to compile the old version instead.

You should perhaps spend some time finding where to change this setting (I don't know the details, sorry).","<div class=""md""><blockquote>
<p>trying to figure out why my code was wrong in VSCode</p>
</blockquote>

<p>VSCode is known to have a default setting of <strong>not</strong> saving changes before compiling the program. It prefers to compile the old version instead.</p>

<p>You should perhaps spend some time finding where to change this setting (I don&#39;t know the details, sorry).</p>
</div>",1683704649.0,,False,jjkspe7,False,t3_13d5wxk,t1_jjirfly,/r/Cplusplus/comments/13d5wxk/different_output_between_ides/jjkspe7/,1,False,4,False,13d5wxk,Cplusplus,t5_2qh6x
472,ascents1,"The code was provided by my instructor, I just had to make changes and debug. Somewhere along the way I ended up running an old version of the code before I made those changes, I guess.","<div class=""md""><p>The code was provided by my instructor, I just had to make changes and debug. Somewhere along the way I ended up running an old version of the code before I made those changes, I guess.</p>
</div>",1683667666.0,,False,jjiv2z1,True,t3_13d5wxk,t1_jjiskt8,/r/Cplusplus/comments/13d5wxk/different_output_between_ides/jjiv2z1/,1,False,4,False,13d5wxk,Cplusplus,t5_2qh6x
473,ascents1,"I just closed and reopened VSCode (should have done that a long time ago), and it works as it should... So, how can I be sure that I am running the most recent version each time?","<div class=""md""><p>I just closed and reopened VSCode (should have done that a long time ago), and it works as it should... So, how can I be sure that I am running the most recent version each time?</p>
</div>",1683667512.0,,False,jjiup9k,True,t3_13d5wxk,t1_jjisgmz,/r/Cplusplus/comments/13d5wxk/different_output_between_ides/jjiup9k/,1,False,10,False,13d5wxk,Cplusplus,t5_2qh6x
474,Bity12345,That’s legit the only reason I switched from VS to Clion. Too many times where my code got deleted or wouldn’t work and I couldn’t find out why. All just because I didn’t save.,"<div class=""md""><p>That’s legit the only reason I switched from VS to Clion. Too many times where my code got deleted or wouldn’t work and I couldn’t find out why. All just because I didn’t save.</p>
</div>",1684133236.0,,False,jk7lheq,False,t3_13d5wxk,t1_jjkspe7,/r/Cplusplus/comments/13d5wxk/different_output_between_ides/jk7lheq/,0,False,1,False,13d5wxk,Cplusplus,t5_2qh6x
475,hawkxp71,"You should ask your professor, why he cut and pasted the output code...","<div class=""md""><p>You should ask your professor, why he cut and pasted the output code...</p>
</div>",1683697382.0,,False,jjkjnhv,False,t3_13d5wxk,t1_jjiv2z1,/r/Cplusplus/comments/13d5wxk/different_output_between_ides/jjkjnhv/,0,False,2,False,13d5wxk,Cplusplus,t5_2qh6x
476,lukajda33,"I am not super familiar with all the extenstions for VSCode, but I think it has to be something with the tasks and the way they are defined, you must be sure about what they do.

As I said, on top you have a task named ""G++ build "" (continues with what I guess is ""and debug""), this task should compile latest version of the code and run it, but reading the actual command in the console reveals it only launched the debugger, with probably older version of the code.

So I wont help you much with this, but make sure tasks are configured probably and that you run the correct ones.

For those reasons, I edit my code with VSCode, but I got familiar with g++ and other tools myself and I just compile and run the program from console myself.","<div class=""md""><p>I am not super familiar with all the extenstions for VSCode, but I think it has to be something with the tasks and the way they are defined, you must be sure about what they do.</p>

<p>As I said, on top you have a task named &quot;G++ build &quot; (continues with what I guess is &quot;and debug&quot;), this task should compile latest version of the code and run it, but reading the actual command in the console reveals it only launched the debugger, with probably older version of the code.</p>

<p>So I wont help you much with this, but make sure tasks are configured probably and that you run the correct ones.</p>

<p>For those reasons, I edit my code with VSCode, but I got familiar with g++ and other tools myself and I just compile and run the program from console myself.</p>
</div>",1683668105.0,,False,jjiw5nb,False,t3_13d5wxk,t1_jjiup9k,/r/Cplusplus/comments/13d5wxk/different_output_between_ides/jjiw5nb/,1,False,8,False,13d5wxk,Cplusplus,t5_2qh6x
477,ascents1,"Gotcha, appreciate the help!","<div class=""md""><p>Gotcha, appreciate the help!</p>
</div>",1683669031.0,,False,jjiydu9,True,t3_13d5wxk,t1_jjiw5nb,/r/Cplusplus/comments/13d5wxk/different_output_between_ides/jjiydu9/,0,False,5,False,13d5wxk,Cplusplus,t5_2qh6x
478,feherfarkas,Mostly computer programming jobs.,"<div class=""md""><p>Mostly computer programming jobs.</p>
</div>",1680410348.0,,False,jemigrz,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jemigrz/,2,False,74,False,1299xk4,Cplusplus,t5_2qh6x
479,jay000999,Avionics systems and other embedded devices use lots of C++. It's also used a lot for machine learning applications (along with python).,"<div class=""md""><p>Avionics systems and other embedded devices use lots of C++. It&#39;s also used a lot for machine learning applications (along with python).</p>
</div>",1680410901.0,,False,jemjban,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jemjban/,0,False,12,False,1299xk4,Cplusplus,t5_2qh6x
480,PlayboySkeleton,"All of them.

From embedded programming in defense/aerospace to systems programing to video games. And now with emscripten you can even do web dev.

Sky is the limit.","<div class=""md""><p>All of them.</p>

<p>From embedded programming in defense/aerospace to systems programing to video games. And now with emscripten you can even do web dev.</p>

<p>Sky is the limit.</p>
</div>",1680438298.0,,False,jenii60,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jenii60/,0,False,12,False,1299xk4,Cplusplus,t5_2qh6x
481,rr-0729,One job not mentioned is lots of quantitative finance developer jobs use C++,"<div class=""md""><p>One job not mentioned is lots of quantitative finance developer jobs use C++</p>
</div>",1680422352.0,,False,jemz08b,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jemz08b/,0,False,10,False,1299xk4,Cplusplus,t5_2qh6x
482,panther_e1,Used in gaming too) and with Qt for GUI apps,"<div class=""md""><p>Used in gaming too) and with Qt for GUI apps</p>
</div>",1680418419.0,,False,jemtsl1,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jemtsl1/,1,False,7,False,1299xk4,Cplusplus,t5_2qh6x
483,Laxn_pander,"Everything that is engineering related I’d say. Autonomous driving, robotics, drones, aerospace in general, computer vision. You’ll need some background in the related field as well though.","<div class=""md""><p>Everything that is engineering related I’d say. Autonomous driving, robotics, drones, aerospace in general, computer vision. You’ll need some background in the related field as well though.</p>
</div>",1680419394.0,,False,jemv4du,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jemv4du/,0,False,7,False,1299xk4,Cplusplus,t5_2qh6x
484,zs6buj,Also speed critical currency/bonds/equity trading.,"<div class=""md""><p>Also speed critical currency/bonds/equity trading.</p>
</div>",1680425911.0,,False,jen36tb,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jen36tb/,0,False,5,False,1299xk4,Cplusplus,t5_2qh6x
485,onar,"Music, audio, video, 3d creation software, are mainly written in C++","<div class=""md""><p>Music, audio, video, 3d creation software, are mainly written in C++</p>
</div>",1680449766.0,,False,jeo5cfr,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jeo5cfr/,0,False,3,False,1299xk4,Cplusplus,t5_2qh6x
486,__nullptr_t,"Google has a lot of C++ devs, so do Facebook and MS.","<div class=""md""><p>Google has a lot of C++ devs, so do Facebook and MS.</p>
</div>",1680486442.0,,False,jeqh9fm,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jeqh9fm/,0,False,3,False,1299xk4,Cplusplus,t5_2qh6x
487,nomabond,I came here to see if this was the same person who asked this on the C# sub. Not disappointed and very disappointed at the same time.,"<div class=""md""><p>I came here to see if this was the same person who asked this on the C# sub. Not disappointed and very disappointed at the same time.</p>
</div>",1680473286.0,,False,jepow8d,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jepow8d/,0,False,2,False,1299xk4,Cplusplus,t5_2qh6x
488,GaiusJuliusInternets,"Adding to the many great options mentioned here: simulators. In general, wherever performance is an important feature, C++ will be used.","<div class=""md""><p>Adding to the many great options mentioned here: simulators. In general, wherever performance is an important feature, C++ will be used.</p>
</div>",1680497527.0,,False,jer28po,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jer28po/,0,False,2,False,1299xk4,Cplusplus,t5_2qh6x
489,,[removed],"<div class=""md""><p>[removed]</p>
</div>",1680456817.0,,False,jeom3dz,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jeom3dz/,2,False,-16,False,1299xk4,Cplusplus,t5_2qh6x
490,SlipstreamSteve,Apparently SpaceX,"<div class=""md""><p>Apparently SpaceX</p>
</div>",1682190766.0,,False,jhaxspv,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jhaxspv/,0,False,1,False,1299xk4,Cplusplus,t5_2qh6x
491,CranjusMcBasketball6,"Hey there! Learning C++ can definitely open up a variety of job opportunities for you. Since it's a powerful and versatile programming language, you'll find that it's used in a wide range of industries. For example, you can work in software development, where you'd be building applications, designing software systems, or even fixing bugs. There are also opportunities in game development, as C++ is often the go-to language for creating high-performance games and game engines.

If you're interested in finance, you could find work in high-frequency trading or financial analysis, where C++ is valued for its speed and efficiency. Additionally, you might want to explore roles in embedded systems development, which often involve programming microcontrollers or other hardware devices using C++. Lastly, C++ is commonly used in system-level programming, so you could work on operating systems or other low-level software.

In a nutshell, learning C++ can open up a world of opportunities in various industries, from software development and gaming to finance and embedded systems. It's definitely worth considering if you want to expand your skill set and enhance your career prospects.","<div class=""md""><p>Hey there! Learning C++ can definitely open up a variety of job opportunities for you. Since it&#39;s a powerful and versatile programming language, you&#39;ll find that it&#39;s used in a wide range of industries. For example, you can work in software development, where you&#39;d be building applications, designing software systems, or even fixing bugs. There are also opportunities in game development, as C++ is often the go-to language for creating high-performance games and game engines.</p>

<p>If you&#39;re interested in finance, you could find work in high-frequency trading or financial analysis, where C++ is valued for its speed and efficiency. Additionally, you might want to explore roles in embedded systems development, which often involve programming microcontrollers or other hardware devices using C++. Lastly, C++ is commonly used in system-level programming, so you could work on operating systems or other low-level software.</p>

<p>In a nutshell, learning C++ can open up a world of opportunities in various industries, from software development and gaming to finance and embedded systems. It&#39;s definitely worth considering if you want to expand your skill set and enhance your career prospects.</p>
</div>",1682922401.0,,False,jiehlhm,False,t3_1299xk4,t3_1299xk4,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jiehlhm/,0,False,1,False,1299xk4,Cplusplus,t5_2qh6x
492,set_of_no_sets,"I’m shook. C++ should be in the bedroom, not on computers.","<div class=""md""><p>I’m shook. C++ should be in the bedroom, not on computers.</p>
</div>",1680417971.0,,False,jemt6jl,False,t3_1299xk4,t1_jemigrz,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jemt6jl/,1,False,30,False,1299xk4,Cplusplus,t5_2qh6x
493,aknarts,"You can probably also work at a fastfood chain flipping burgers, do not see why they would not hire you especially with C++, good enough grades. /s","<div class=""md""><p>You can probably also work at a fastfood chain flipping burgers, do not see why they would not hire you especially with C++, good enough grades. /s</p>
</div>",1680421932.0,,False,jemyh9i,False,t3_1299xk4,t1_jemigrz,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jemyh9i/,0,False,8,False,1299xk4,Cplusplus,t5_2qh6x
494,Diligent-Director303,Qt?,"<div class=""md""><p>Qt?</p>
</div>",1680418436.0,,False,jemtth0,True,t3_1299xk4,t1_jemtsl1,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jemtth0/,2,False,2,False,1299xk4,Cplusplus,t5_2qh6x
495,SupermanLeRetour,"What a smug, unhelpful answer. You don't know OP's age, or skills, or where they're at in life.","<div class=""md""><p>What a smug, unhelpful answer. You don&#39;t know OP&#39;s age, or skills, or where they&#39;re at in life.</p>
</div>",1680458657.0,,False,jeoqilo,False,t3_1299xk4,t1_jeom3dz,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jeoqilo/,0,False,16,False,1299xk4,Cplusplus,t5_2qh6x
496,ForgetTheRuralJuror,I'd sooner hire a novice than an asshole,"<div class=""md""><p>I&#39;d sooner hire a novice than an asshole</p>
</div>",1680478785.0,,False,jeq0orh,False,t3_1299xk4,t1_jeom3dz,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jeq0orh/,0,False,7,False,1299xk4,Cplusplus,t5_2qh6x
497,IamImposter,"Take my `char`, `static_cast` it to `long` and let me `std::cin` you, babe. 

Declare me a `friend` and let me access your privates. 

Let's make like a `struct` and make everything visible. 

He he this is fun.","<div class=""md""><p>Take my <code>char</code>, <code>static_cast</code> it to <code>long</code> and let me <code>std::cin</code> you, babe. </p>

<p>Declare me a <code>friend</code> and let me access your privates. </p>

<p>Let&#39;s make like a <code>struct</code> and make everything visible. </p>

<p>He he this is fun.</p>
</div>",1680421672.0,,False,jemy5bq,False,t3_1299xk4,t1_jemt6jl,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jemy5bq/,0,False,24,False,1299xk4,Cplusplus,t5_2qh6x
498,SpeakThunder,It’s a UI framework.,"<div class=""md""><p>It’s a UI framework.</p>
</div>",1680424213.0,,False,jen197v,False,t3_1299xk4,t1_jemtth0,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jen197v/,0,False,7,False,1299xk4,Cplusplus,t5_2qh6x
499,dg1948,Pronounced cute.,"<div class=""md""><p>Pronounced cute.</p>
</div>",1680444708.0,,False,jenu5bn,False,t3_1299xk4,t1_jemtth0,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jenu5bn/,1,False,7,False,1299xk4,Cplusplus,t5_2qh6x
500,ForgetTheRuralJuror,Really? Why has nobody corrected me 😂,"<div class=""md""><p>Really? Why has nobody corrected me 😂</p>
</div>",1680478998.0,,False,jeq152a,False,t3_1299xk4,t1_jenu5bn,/r/Cplusplus/comments/1299xk4/what_kind_of_jobs_can_one_get_with_c/jeq152a/,0,False,3,False,1299xk4,Cplusplus,t5_2qh6x
501,PercyServiceRooster,Just a small typo. I think you meant JSON reader and not Jason reader.,"<div class=""md""><p>Just a small typo. I think you meant JSON reader and not Jason reader.</p>
</div>",1649860889.0,,False,i4kk3s7,False,t3_u2qvad,t3_u2qvad,/r/Cplusplus/comments/u2qvad/c_creator_bjarne_stroustrup_interview_with_spoils/i4kk3s7/,1,False,6,False,u2qvad,Cplusplus,t5_2qh6x
502,all_is_love6667,"Thanks for the interview.

I wish there was a question about rust.

I'm curious how the pattern matching will look like.","<div class=""md""><p>Thanks for the interview.</p>

<p>I wish there was a question about rust.</p>

<p>I&#39;m curious how the pattern matching will look like.</p>
</div>",1649926464.0,,False,i4of4au,False,t3_u2qvad,t3_u2qvad,/r/Cplusplus/comments/u2qvad/c_creator_bjarne_stroustrup_interview_with_spoils/i4of4au/,1,False,2,False,u2qvad,Cplusplus,t5_2qh6x
503,elizaveta123321,thanks! fixed :),"<div class=""md""><p>thanks! fixed :)</p>
</div>",1649883566.0,,False,i4m6ak0,True,t3_u2qvad,t1_i4kk3s7,/r/Cplusplus/comments/u2qvad/c_creator_bjarne_stroustrup_interview_with_spoils/i4m6ak0/,0,False,1,False,u2qvad,Cplusplus,t5_2qh6x
504,elizaveta123321,Thanks! We'll try to ask this next time :),"<div class=""md""><p>Thanks! We&#39;ll try to ask this next time :)</p>
</div>",1650289467.0,,False,i57helg,True,t3_u2qvad,t1_i4of4au,/r/Cplusplus/comments/u2qvad/c_creator_bjarne_stroustrup_interview_with_spoils/i57helg/,0,False,1,False,u2qvad,Cplusplus,t5_2qh6x
505,mrkent27,We us C++ to build desktop applications that ship with our products. We make pre-clinical image guided radiation systems that are used in cancer research. Our software controls the hardware directly but also facilitates treatment planning and x-ray dose calculation.,"<div class=""md""><p>We us C++ to build desktop applications that ship with our products. We make pre-clinical image guided radiation systems that are used in cancer research. Our software controls the hardware directly but also facilitates treatment planning and x-ray dose calculation.</p>
</div>",1586609123.0,,False,fn3001l,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3001l/,1,False,24,False,fz4bji,Cplusplus,t5_2qh6x
506,polymorphiced,"AAA video games for desktop and consoles, using a proprietary engine in the past and Unreal Engine 4 now.","<div class=""md""><p>AAA video games for desktop and consoles, using a proprietary engine in the past and Unreal Engine 4 now.</p>
</div>",1586611774.0,,False,fn33cju,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn33cju/,0,False,12,False,fz4bji,Cplusplus,t5_2qh6x
507,ande3577,"Embedded micro controller programming here. Photoelectric sensors used in factory automation applications. Our C++ based projects are almost exclusively ARM Cortex M based processors.  Usually running on bare-metal (no OS or RTOS).

While higher level language options do exist (go and python both have embedded flavors), I'm skeptical that they are useful for applications that push the hardware's performance to it's absolute limit like we typically do.  That being said, evaluating rust on an embedded target is on my to-do list as it shows the most promise of any of the current generation of language for deeply embedded use.","<div class=""md""><p>Embedded micro controller programming here. Photoelectric sensors used in factory automation applications. Our C++ based projects are almost exclusively ARM Cortex M based processors.  Usually running on bare-metal (no OS or RTOS).</p>

<p>While higher level language options do exist (go and python both have embedded flavors), I&#39;m skeptical that they are useful for applications that push the hardware&#39;s performance to it&#39;s absolute limit like we typically do.  That being said, evaluating rust on an embedded target is on my to-do list as it shows the most promise of any of the current generation of language for deeply embedded use.</p>
</div>",1586610826.0,,False,fn323re,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn323re/,1,False,10,False,fz4bji,Cplusplus,t5_2qh6x
508,TheSkiGeek,"Previously: game dev

Now: software stack for self-driving cars

Also interviewed this go around at places doing:

* military simulation/training software

* high performance data processing backend

* algorithmic and/or high frequency stock trading","<div class=""md""><p>Previously: game dev</p>

<p>Now: software stack for self-driving cars</p>

<p>Also interviewed this go around at places doing:</p>

<ul>
<li><p>military simulation/training software</p></li>
<li><p>high performance data processing backend</p></li>
<li><p>algorithmic and/or high frequency stock trading</p></li>
</ul>
</div>",1586621950.0,,False,fn3jf9a,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3jf9a/,0,False,9,False,fz4bji,Cplusplus,t5_2qh6x
509,,"In my opinion, C++ is the go-to programming language for game development. There are just so many features and libraries available for 2D/3D graphics and so many ways to optimize your code to run as fast as possible, especially since C++ is a descendant of C, a low-level language. Performance is very important in games, and I just love C++ for that.","<div class=""md""><p>In my opinion, C++ is the go-to programming language for game development. There are just so many features and libraries available for 2D/3D graphics and so many ways to optimize your code to run as fast as possible, especially since C++ is a descendant of C, a low-level language. Performance is very important in games, and I just love C++ for that.</p>
</div>",1586615717.0,,False,fn391hf,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn391hf/,0,False,15,False,fz4bji,Cplusplus,t5_2qh6x
510,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1586611758.0,,False,fn33bsb,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn33bsb/,2,False,8,False,fz4bji,Cplusplus,t5_2qh6x
511,zackel_flac,Medical imaging. That 3D model of your heart/brain/breast/whatever was reconstructed from X-ray scans and C++,"<div class=""md""><p>Medical imaging. That 3D model of your heart/brain/breast/whatever was reconstructed from X-ray scans and C++</p>
</div>",1586623222.0,,False,fn3lnqq,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3lnqq/,0,False,3,False,fz4bji,Cplusplus,t5_2qh6x
512,grumpieroldman,Autonomous vehicle stack.,"<div class=""md""><p>Autonomous vehicle stack.</p>
</div>",1586650711.0,,False,fn4wu3e,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn4wu3e/,0,False,2,False,fz4bji,Cplusplus,t5_2qh6x
513,Dan-mat,Mesher for structural analysis,"<div class=""md""><p>Mesher for structural analysis</p>
</div>",1586613619.0,,False,fn35vr7,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn35vr7/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
514,johhov,"Stock, fund, insurance and invoicing systems for banks and other financial institutions.","<div class=""md""><p>Stock, fund, insurance and invoicing systems for banks and other financial institutions.</p>
</div>",1586615953.0,,False,fn39ewx,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn39ewx/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
515,bastih01,I'm working on a database engine and related tooling.,"<div class=""md""><p>I&#39;m working on a database engine and related tooling.</p>
</div>",1586617441.0,,False,fn3bt20,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3bt20/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
516,N45HV1LL3,Real-time industrial control (on both Linux and QNX Neutrino operating systems) of automated separation/sorting machines for the recycling industry.,"<div class=""md""><p>Real-time industrial control (on both Linux and QNX Neutrino operating systems) of automated separation/sorting machines for the recycling industry.</p>
</div>",1586622222.0,,False,fn3jwb2,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3jwb2/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
517,mredding,"I've used C++ to make video games, slot machines, hardware drivers, high speed trading software, WYSIWYGs, lots of tools, lots of plugins for tools, command line programs and pipeline stages, client server apps, packet capture and analysis, databases, block chain apps, and libraries. I interviewed with a company that makes military drones that make point clouds, then they have a cluster computer on the back end to process all that data.","<div class=""md""><p>I&#39;ve used C++ to make video games, slot machines, hardware drivers, high speed trading software, WYSIWYGs, lots of tools, lots of plugins for tools, command line programs and pipeline stages, client server apps, packet capture and analysis, databases, block chain apps, and libraries. I interviewed with a company that makes military drones that make point clouds, then they have a cluster computer on the back end to process all that data.</p>
</div>",1586622318.0,,False,fn3k2c8,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3k2c8/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
518,__nullptr_t,AI infrastructure stuff at Google.,"<div class=""md""><p>AI infrastructure stuff at Google.</p>
</div>",1586622373.0,,False,fn3k5sa,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3k5sa/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
519,njalmeister81,"Remote Controlled and Autonomous Construction Equipment. Using QTCreator, c++14, PocoProject+++. See www.steer.no.","<div class=""md""><p>Remote Controlled and Autonomous Construction Equipment. Using QTCreator, c++14, PocoProject+++. See <a href=""http://www.steer.no"">www.steer.no</a>.</p>
</div>",1586624671.0,,False,fn3o8ib,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3o8ib/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
520,MarcPawl,Telcom applications,"<div class=""md""><p>Telcom applications</p>
</div>",1586638082.0,,False,fn4bp07,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn4bp07/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
521,smashedsaturn,Industrial automation and data processing.,"<div class=""md""><p>Industrial automation and data processing.</p>
</div>",1586656687.0,,False,fn55wnd,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn55wnd/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
522,cowboycoder,Windows anti-malware software,"<div class=""md""><p>Windows anti-malware software</p>
</div>",1586662229.0,,False,fn5drmh,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn5drmh/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
523,ignitionweb,I work on a in memory OLAP database written in C++.,"<div class=""md""><p>I work on a in memory OLAP database written in C++.</p>
</div>",1586680298.0,,False,fn5yc8g,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn5yc8g/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
524,tommy-jay,"C++ has a far wider set of tooling than any language I have met. Mostly because it is built on C - decades of development went into a tool set so large, the problem is more one of referencing them (i.e. C#, Java et al only have very recent history, although a very well documented one). The tools exist, and more, you just have to find them. 

To answer your question, I had (have) two main jobs in C++:

\- drivers for pacemakers (because latency control)

\- compiler for a domain specific language (because text transformations are simpler to reason about, and because we  cross compile to things like JS and WASM)","<div class=""md""><p>C++ has a far wider set of tooling than any language I have met. Mostly because it is built on C - decades of development went into a tool set so large, the problem is more one of referencing them (i.e. C#, Java et al only have very recent history, although a very well documented one). The tools exist, and more, you just have to find them. </p>

<p>To answer your question, I had (have) two main jobs in C++:</p>

<p>- drivers for pacemakers (because latency control)</p>

<p>- compiler for a domain specific language (because text transformations are simpler to reason about, and because we  cross compile to things like JS and WASM)</p>
</div>",1586683618.0,,False,fn61dmn,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn61dmn/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
525,Informal_Butterfly,Computational Geometry code for fluid simulations ( in oil and gas industry ),"<div class=""md""><p>Computational Geometry code for fluid simulations ( in oil and gas industry )</p>
</div>",1586630804.0,,False,fn3z5y3,False,t3_fz4bji,t3_fz4bji,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3z5y3/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
526,KryKrycz,I'm new to c++. What do you guys use to make desktop application? Qt for gui or some renderer to render pictures ?,"<div class=""md""><p>I&#39;m new to c++. What do you guys use to make desktop application? Qt for gui or some renderer to render pictures ?</p>
</div>",1586618930.0,,False,fn3e8ku,False,t3_fz4bji,t1_fn3001l,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3e8ku/,1,False,3,False,fz4bji,Cplusplus,t5_2qh6x
527,DabMaster5888,"Do you use raspberry pi's? Otherwise, what do you use to program a micro controller?","<div class=""md""><p>Do you use raspberry pi&#39;s? Otherwise, what do you use to program a micro controller?</p>
</div>",1597207922.0,,False,g16n4ek,False,t3_fz4bji,t1_fn323re,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/g16n4ek/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
528,middgen,"Same. I spent years working in Java/Actionscript/C# in enterprise, then switched to games and C++ six years ago. Much prefer games, and C++!","<div class=""md""><p>Same. I spent years working in Java/Actionscript/C# in enterprise, then switched to games and C++ six years ago. Much prefer games, and C++!</p>
</div>",1586612087.0,,False,fn33rje,False,t3_fz4bji,t1_fn33bsb,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn33rje/,0,False,5,False,fz4bji,Cplusplus,t5_2qh6x
529,TheDrag0n0fTheWest,I just started learning C++ today (found a PDF file that nicely covers the basics and explains the terminology) and I was wondering where you learned to program and how long it took you to master the language enough to make games.,"<div class=""md""><p>I just started learning C++ today (found a PDF file that nicely covers the basics and explains the terminology) and I was wondering where you learned to program and how long it took you to master the language enough to make games.</p>
</div>",1588007523.0,,False,for7kk4,False,t3_fz4bji,t1_fn33bsb,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/for7kk4/,0,False,1,False,fz4bji,Cplusplus,t5_2qh6x
530,mrkent27,We use Qt5 for the front end of the GUI. We also use OpenGL (wrapped in Qt). Some of our apps use GPU acceleration as well for computation.,"<div class=""md""><p>We use Qt5 for the front end of the GUI. We also use OpenGL (wrapped in Qt). Some of our apps use GPU acceleration as well for computation.</p>
</div>",1586619639.0,,False,fn3ffk9,False,t3_fz4bji,t1_fn3e8ku,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3ffk9/,1,False,8,False,fz4bji,Cplusplus,t5_2qh6x
531,KryKrycz,Thank you for reply,"<div class=""md""><p>Thank you for reply</p>
</div>",1586623609.0,,False,fn3mcrn,False,t3_fz4bji,t1_fn3ffk9,/r/Cplusplus/comments/fz4bji/if_using_c_professionally_what_do_you_use_it_for/fn3mcrn/,0,False,5,False,fz4bji,Cplusplus,t5_2qh6x
532,smokeyrb9,Probably because everyone is too scared of getting clowned by some power tripping neckbeard on stackoverflow,"<div class=""md""><p>Probably because everyone is too scared of getting clowned by some power tripping neckbeard on stackoverflow</p>
</div>",1662776658.0,,False,int3ok6,False,t3_x9pxch,t3_x9pxch,/r/Cplusplus/comments/x9pxch/people_here_are_surprisingly_nice/int3ok6/,0,False,3,False,x9pxch,Cplusplus,t5_2qh6x
533,AwabKhan,Yeah posted a Question first time on stack overflow wouldn't understand why I can't post a question to question asking site learned that you can't just ask the question and have to actually put effort into asking the question.,"<div class=""md""><p>Yeah posted a Question first time on stack overflow wouldn&#39;t understand why I can&#39;t post a question to question asking site learned that you can&#39;t just ask the question and have to actually put effort into asking the question.</p>
</div>",1662717630.0,,False,inphbgm,False,t3_x9pxch,t3_x9pxch,/r/Cplusplus/comments/x9pxch/people_here_are_surprisingly_nice/inphbgm/,1,False,-2,False,x9pxch,Cplusplus,t5_2qh6x
534,android_queen,I kinda hope that we find a good alternative for the negativity of stack overflow sometime in the next few years. It seems unnecessary and demoralizing.,"<div class=""md""><p>I kinda hope that we find a good alternative for the negativity of stack overflow sometime in the next few years. It seems unnecessary and demoralizing.</p>
</div>",1662759548.0,,False,ins39eo,False,t3_x9pxch,t3_x9pxch,/r/Cplusplus/comments/x9pxch/people_here_are_surprisingly_nice/ins39eo/,0,False,1,False,x9pxch,Cplusplus,t5_2qh6x
535,no-sig-available,"StackOverflow is heavily gamified, in that you earn privileges from upvotes. So they want good questions that can have good (and highly upvoted) answers.

So if you ask about the result of `a = a++ + ++a;`, which has already been asked twice a week for 10 years, they get pissed. Who can write a good new answer to that?!

Here you can just answer ""That doesn't work"", and be done with it.","<div class=""md""><p>StackOverflow is heavily gamified, in that you earn privileges from upvotes. So they want good questions that can have good (and highly upvoted) answers.</p>

<p>So if you ask about the result of <code>a = a++ + ++a;</code>, which has already been asked twice a week for 10 years, they get pissed. Who can write a good new answer to that?!</p>

<p>Here you can just answer &quot;That doesn&#39;t work&quot;, and be done with it.</p>
</div>",1662804030.0,,False,inu6vwp,False,t3_x9pxch,t3_x9pxch,/r/Cplusplus/comments/x9pxch/people_here_are_surprisingly_nice/inu6vwp/,0,False,1,False,x9pxch,Cplusplus,t5_2qh6x
536,Mugglefucker69,"Hahahaha yeah, stack overflow will crucify you for the smallest error, but it'll also make you a better version of your programmer self","<div class=""md""><p>Hahahaha yeah, stack overflow will crucify you for the smallest error, but it&#39;ll also make you a better version of your programmer self</p>
</div>",1663292211.0,,False,iolz6ud,False,t3_x9pxch,t3_x9pxch,/r/Cplusplus/comments/x9pxch/people_here_are_surprisingly_nice/iolz6ud/,0,False,1,False,x9pxch,Cplusplus,t5_2qh6x
537,Electech4,That was hard to read man,"<div class=""md""><p>That was hard to read man</p>
</div>",1662736583.0,,False,inqic4v,False,t3_x9pxch,t1_inphbgm,/r/Cplusplus/comments/x9pxch/people_here_are_surprisingly_nice/inqic4v/,1,False,12,False,x9pxch,Cplusplus,t5_2qh6x
538,AwabKhan,You couldn't read so you downvote my post great.,"<div class=""md""><p>You couldn&#39;t read so you downvote my post great.</p>
</div>",1662737744.0,,False,inql8xc,False,t3_x9pxch,t1_inqic4v,/r/Cplusplus/comments/x9pxch/people_here_are_surprisingly_nice/inql8xc/,2,False,1,False,x9pxch,Cplusplus,t5_2qh6x
539,IamImposter,"Don't worry. I got you. 

May be add few full stops in your previous comment and it will be more readable.

Edit: damn it. Someone else downvoted you and you are back to -1","<div class=""md""><p>Don&#39;t worry. I got you. </p>

<p>May be add few full stops in your previous comment and it will be more readable.</p>

<p>Edit: damn it. Someone else downvoted you and you are back to -1</p>
</div>",1662742040.0,,False,inqw4my,False,t3_x9pxch,t1_inql8xc,/r/Cplusplus/comments/x9pxch/people_here_are_surprisingly_nice/inqw4my/,1,False,2,False,x9pxch,Cplusplus,t5_2qh6x
540,Electech4,I didn't downvote anything. Im just saying my brain struggled.,"<div class=""md""><p>I didn&#39;t downvote anything. Im just saying my brain struggled.</p>
</div>",1662750079.0,,False,inrgb9h,False,t3_x9pxch,t1_inql8xc,/r/Cplusplus/comments/x9pxch/people_here_are_surprisingly_nice/inrgb9h/,0,False,1,False,x9pxch,Cplusplus,t5_2qh6x
541,AwabKhan,Don't know why the downvotes. I usually don't use mobile reddit so I cant really format what I Write but on pc its easy.,"<div class=""md""><p>Don&#39;t know why the downvotes. I usually don&#39;t use mobile reddit so I cant really format what I Write but on pc its easy.</p>
</div>",1662746023.0,,False,inr68ov,False,t3_x9pxch,t1_inqw4my,/r/Cplusplus/comments/x9pxch/people_here_are_surprisingly_nice/inr68ov/,1,False,3,False,x9pxch,Cplusplus,t5_2qh6x
542,Fashionable-Andy,"I was able to bump it back to -1, but that’s all I got","<div class=""md""><p>I was able to bump it back to -1, but that’s all I got</p>
</div>",1662781717.0,,False,intdaqc,False,t3_x9pxch,t1_inr68ov,/r/Cplusplus/comments/x9pxch/people_here_are_surprisingly_nice/intdaqc/,0,False,2,False,x9pxch,Cplusplus,t5_2qh6x
543,XeroPoints,"Namespace pollution.    

It gets you in to the habit of avoiding bug where you create a function/class that ends up having the same name as something that exists in the STD namespace.    

If at all you can do using namespace std inside your function to reduce typing it.    

Probably more info as well on google.","<div class=""md""><p>Namespace pollution.    </p>

<p>It gets you in to the habit of avoiding bug where you create a function/class that ends up having the same name as something that exists in the STD namespace.    </p>

<p>If at all you can do using namespace std inside your function to reduce typing it.    </p>

<p>Probably more info as well on google.</p>
</div>",1553393938.0,,False,ej8ng5w,False,t3_b4r4i4,t3_b4r4i4,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ej8ng5w/,0,False,40,False,b4r4i4,Cplusplus,t5_2qh6x
544,AnAge_OldProb,"At the scale your working for an individual project that’s no more than a couple thousand lines. Knock yourself out if you can write a correct solution that you and your graders understand, do it in the most comfortable way possible. 

For more long term and larger code bases using can bring lots of things that you didn’t intend. std in particular is massive covering thousands of commonly used classes and functions. It’s also very common the replace those general purpose tools with ones that are tailor made for your code base. Not qualifying namespaces gets confusing quickly. However it’s definitely ok to use using declarations you should just keep the scope tight so they don’t spread. Most importantly, you shouldn’t put any using declarations in header files because they’re viral and anything that includes the header will also pick them up, and cause unintended consequences. For instance imagine you have a sort function that sorts by greater than and another namespace has a sort that uses less than, your coworker sneaks a using into the header and suddenly your sorts are backwards. ","<div class=""md""><p>At the scale your working for an individual project that’s no more than a couple thousand lines. Knock yourself out if you can write a correct solution that you and your graders understand, do it in the most comfortable way possible. </p>

<p>For more long term and larger code bases using can bring lots of things that you didn’t intend. std in particular is massive covering thousands of commonly used classes and functions. It’s also very common the replace those general purpose tools with ones that are tailor made for your code base. Not qualifying namespaces gets confusing quickly. However it’s definitely ok to use using declarations you should just keep the scope tight so they don’t spread. Most importantly, you shouldn’t put any using declarations in header files because they’re viral and anything that includes the header will also pick them up, and cause unintended consequences. For instance imagine you have a sort function that sorts by greater than and another namespace has a sort that uses less than, your coworker sneaks a using into the header and suddenly your sorts are backwards. </p>
</div>",1553394139.0,,False,ej8nob6,False,t3_b4r4i4,t3_b4r4i4,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ej8nob6/,1,False,26,False,b4r4i4,Cplusplus,t5_2qh6x
545,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1553405209.0,,False,ej8ym26,False,t3_b4r4i4,t3_b4r4i4,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ej8ym26/,1,False,15,False,b4r4i4,Cplusplus,t5_2qh6x
546,hawkinsw2005,Here is Google's rationale for prohibiting it: https://drake.mit.edu/styleguide/cppguide.html#Namespaces,"<div class=""md""><p>Here is Google&#39;s rationale for prohibiting it: <a href=""https://drake.mit.edu/styleguide/cppguide.html#Namespaces"">https://drake.mit.edu/styleguide/cppguide.html#Namespaces</a></p>
</div>",1553403977.0,,False,ej8xltu,False,t3_b4r4i4,t3_b4r4i4,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ej8xltu/,0,False,5,False,b4r4i4,Cplusplus,t5_2qh6x
547,JezusTheCarpenter,"Apart from things mentioned, in general with experience, when reading other people code, it is so much clearer to see where the symbols come from when they have explicit paths and including shit loads of headers. 

Also in real code, three letter namespace is a luxury, sometime is nothing in comparison to some custom stuff sometimes.

Take some boost libraries as a example:

boost::asio::ip::udp::endpoint endpoint;

boost::asio::ip::udp::socket socket","<div class=""md""><p>Apart from things mentioned, in general with experience, when reading other people code, it is so much clearer to see where the symbols come from when they have explicit paths and including shit loads of headers. </p>

<p>Also in real code, three letter namespace is a luxury, sometime is nothing in comparison to some custom stuff sometimes.</p>

<p>Take some boost libraries as a example:</p>

<p>boost::asio::ip::udp::endpoint endpoint;</p>

<p>boost::asio::ip::udp::socket socket</p>
</div>",1553430026.0,,False,ej9ed08,False,t3_b4r4i4,t3_b4r4i4,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ej9ed08/,0,False,3,False,b4r4i4,Cplusplus,t5_2qh6x
548,SlightlyCyborg,I use an IDE that autocompletes using symbols in the current namespace. Usually I don't want all of the std symbols in my autocomplete.,"<div class=""md""><p>I use an IDE that autocompletes using symbols in the current namespace. Usually I don&#39;t want all of the std symbols in my autocomplete.</p>
</div>",1553539447.0,,False,ejcw3ab,False,t3_b4r4i4,t3_b4r4i4,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ejcw3ab/,0,False,3,False,b4r4i4,Cplusplus,t5_2qh6x
549,alfps,"`using namespace std;` used to be useful for small exploration programs.

However, the last few versions of the standard greatly increases the chance of a name collision, e.g. `byte` or `distance` or `size`.

C++17 finally allows you to write e.g.

    using std::cout, std::cerr, std::endl;

But that's still ungood, still very much at odds with the Don't Repeat Yourself principle, compared to what you can do with a macro, e.g.

    USE_STD( cout, cerr, endl );

Shameless plug: my still under construction not yet at first release and generally in a haphazard state C++17 header only [library *cppx-core*](https://github.com/alf-p-steinbach/cppx-core) provides that macro as `CPPX_USE_STD` and by default also via the non-shouting but slightly non-standard name [`$use_std`](https://github.com/alf-p-steinbach/cppx-core/blob/master/source/cppx-core/language/syntax/macro-use.hpp).
","<div class=""md""><p><code>using namespace std;</code> used to be useful for small exploration programs.</p>

<p>However, the last few versions of the standard greatly increases the chance of a name collision, e.g. <code>byte</code> or <code>distance</code> or <code>size</code>.</p>

<p>C++17 finally allows you to write e.g.</p>

<pre><code>using std::cout, std::cerr, std::endl;
</code></pre>

<p>But that&#39;s still ungood, still very much at odds with the Don&#39;t Repeat Yourself principle, compared to what you can do with a macro, e.g.</p>

<pre><code>USE_STD( cout, cerr, endl );
</code></pre>

<p>Shameless plug: my still under construction not yet at first release and generally in a haphazard state C++17 header only <a href=""https://github.com/alf-p-steinbach/cppx-core"">library <em>cppx-core</em></a> provides that macro as <code>CPPX_USE_STD</code> and by default also via the non-shouting but slightly non-standard name <a href=""https://github.com/alf-p-steinbach/cppx-core/blob/master/source/cppx-core/language/syntax/macro-use.hpp""><code>$use_std</code></a>.</p>
</div>",1553474009.0,,1553474341.0,ejazznx,False,t3_b4r4i4,t3_b4r4i4,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ejazznx/,1,False,2,False,b4r4i4,Cplusplus,t5_2qh6x
550,realestLink,https://youtu.be/4NYC-VU-svE,"<div class=""md""><p><a href=""https://youtu.be/4NYC-VU-svE"">https://youtu.be/4NYC-VU-svE</a></p>
</div>",1553397525.0,,False,ej8rfuo,False,t3_b4r4i4,t3_b4r4i4,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ej8rfuo/,1,False,1,False,b4r4i4,Cplusplus,t5_2qh6x
551,DanielMcLaury,"Some of my coworkers ran into a problem where something mysteriously wouldn't compile after what should have been a trivial change.

Apparently their problem was that including `<algorithm>` while `using namespace std` meant that `count` now referred to `std::count` rather than what they'd intended.","<div class=""md""><p>Some of my coworkers ran into a problem where something mysteriously wouldn&#39;t compile after what should have been a trivial change.</p>

<p>Apparently their problem was that including <code>&lt;algorithm&gt;</code> while <code>using namespace std</code> meant that <code>count</code> now referred to <code>std::count</code> rather than what they&#39;d intended.</p>
</div>",1554707222.0,,False,ekdfrw8,False,t3_b4r4i4,t3_b4r4i4,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ekdfrw8/,0,False,1,False,b4r4i4,Cplusplus,t5_2qh6x
552,akshuallyProgrammer,"Saves you the hassel of using std::. 

Ex: 
std::cout << ""Hello world/n""; 

The way I learned it was ""you don't want multiple STD's, you want as little as possible."" 
","<div class=""md""><p>Saves you the hassel of using std::. </p>

<p>Ex: 
std::cout &lt;&lt; &quot;Hello world/n&quot;; </p>

<p>The way I learned it was &quot;you don&#39;t want multiple STD&#39;s, you want as little as possible.&quot; </p>
</div>",1553456015.0,,False,ejab6tc,False,t3_b4r4i4,t3_b4r4i4,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ejab6tc/,0,False,0,False,b4r4i4,Cplusplus,t5_2qh6x
553,2fatdads,"Professionally, it's generally bad practice to use a using namespace statement. This should never be done in a header, ever, even for std. My work just started allowing using namespace statements only within the local scope of a function. It generally defeats the purpose of the namespace, and can introduce all kinds of issues down the line for large codebases","<div class=""md""><p>Professionally, it&#39;s generally bad practice to use a using namespace statement. This should never be done in a header, ever, even for std. My work just started allowing using namespace statements only within the local scope of a function. It generally defeats the purpose of the namespace, and can introduce all kinds of issues down the line for large codebases</p>
</div>",1676227284.0,,False,j89r4jj,False,t3_b4r4i4,t3_b4r4i4,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/j89r4jj/,0,False,1,False,b4r4i4,Cplusplus,t5_2qh6x
554,SilentXwing,Ahh that makes a lot of sense. Thank you for informing me in a way I understood! ,"<div class=""md""><p>Ahh that makes a lot of sense. Thank you for informing me in a way I understood! </p>
</div>",1553394372.0,,False,ej8nxne,True,t3_b4r4i4,t1_ej8nob6,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ej8nxne/,0,False,5,False,b4r4i4,Cplusplus,t5_2qh6x
555,isarl,"This is like the Python practice of doing  
    from module import function1, function2, Class1

instead of  
    from module import *

 – helps keep your namespace tidy and show you exactly where things are coming from.","<div class=""md""><p>This is like the Python practice of doing<br/>
    from module import function1, function2, Class1</p>

<p>instead of<br/>
    from module import *</p>

<p>– helps keep your namespace tidy and show you exactly where things are coming from.</p>
</div>",1553431439.0,,False,ej9fmfx,False,t3_b4r4i4,t1_ej8ym26,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ej9fmfx/,1,False,11,False,b4r4i4,Cplusplus,t5_2qh6x
556,EstablishmentBig7956,"I just tried that in termux on my phone yesterday and it didn't work. I must have an old version or clang needs to get busy. 

I'm not that savy with clang and a just for fun programer but still","<div class=""md""><p>I just tried that in termux on my phone yesterday and it didn&#39;t work. I must have an old version or clang needs to get busy. </p>

<p>I&#39;m not that savy with clang and a just for fun programer but still</p>
</div>",1660049206.0,,False,ijkn41q,False,t3_b4r4i4,t1_ejazznx,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ijkn41q/,1,False,1,False,b4r4i4,Cplusplus,t5_2qh6x
557,GuybrushThreepwo0d,But. Why spend 2 minutes making coffee? ,"<div class=""md""><p>But. Why spend 2 minutes making coffee? </p>
</div>",1553417758.0,,False,ej96iak,False,t3_b4r4i4,t1_ej8rfuo,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ej96iak/,1,False,1,False,b4r4i4,Cplusplus,t5_2qh6x
558,,"Really though it's like `import module` instead of `from module import function1, function2, Class1`, as the former only consumes the variable 'module' as a namespace for all of that module's contents, while the latter consumes 'function1', 'function2', and 'Class1' in the current (often global) namespace.","<div class=""md""><p>Really though it&#39;s like <code>import module</code> instead of <code>from module import function1, function2, Class1</code>, as the former only consumes the variable &#39;module&#39; as a namespace for all of that module&#39;s contents, while the latter consumes &#39;function1&#39;, &#39;function2&#39;, and &#39;Class1&#39; in the current (often global) namespace.</p>
</div>",1553461938.0,,False,ejajhun,False,t3_b4r4i4,t1_ej9fmfx,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ejajhun/,1,False,1,False,b4r4i4,Cplusplus,t5_2qh6x
559,alfps,"> I just tried that in termux on my phone yesterday and it didn't work.

If you mean my macro, then I'm sorry, I'm unable to maintain that library for now; I have not the time. However the code should be able to guide you to implement your own.","<div class=""md""><blockquote>
<p>I just tried that in termux on my phone yesterday and it didn&#39;t work.</p>
</blockquote>

<p>If you mean my macro, then I&#39;m sorry, I&#39;m unable to maintain that library for now; I have not the time. However the code should be able to guide you to implement your own.</p>
</div>",1660053456.0,,False,ijkwhy2,False,t3_b4r4i4,t1_ijkn41q,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ijkwhy2/,1,False,1,False,b4r4i4,Cplusplus,t5_2qh6x
560,realestLink,Coffee is the most important step in programming,"<div class=""md""><p>Coffee is the most important step in programming</p>
</div>",1553455966.0,,False,ejab4jf,False,t3_b4r4i4,t1_ej96iak,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ejab4jf/,1,False,4,False,b4r4i4,Cplusplus,t5_2qh6x
561,isarl,"Not sure how closely you read the comment I was replying to because they did not do anything in C++ like Python's `import module` – C++ doesn't really have an `import module` equivalent because as soon as you `#include` something then all of its namespaces get added to the current one for fully-qualified use. So the closest to `import module` is actually a preprocessor directive `#include ""module.hpp""` with a carefully scoped header. The `using` statement is either like the frowned-upon `from module import *` (if you are `using` an entire namespace) or like the limited imports I posted in my comment above (if you are `using` explicit names from a namespace, as in the comment to which I was originally replying) which selectively adds explicit names to the current namespace.","<div class=""md""><p>Not sure how closely you read the comment I was replying to because they did not do anything in C++ like Python&#39;s <code>import module</code> – C++ doesn&#39;t really have an <code>import module</code> equivalent because as soon as you <code>#include</code> something then all of its namespaces get added to the current one for fully-qualified use. So the closest to <code>import module</code> is actually a preprocessor directive <code>#include &quot;module.hpp&quot;</code> with a carefully scoped header. The <code>using</code> statement is either like the frowned-upon <code>from module import *</code> (if you are <code>using</code> an entire namespace) or like the limited imports I posted in my comment above (if you are <code>using</code> explicit names from a namespace, as in the comment to which I was originally replying) which selectively adds explicit names to the current namespace.</p>
</div>",1553462774.0,,False,ejaknul,False,t3_b4r4i4,t1_ejajhun,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ejaknul/,0,False,2,False,b4r4i4,Cplusplus,t5_2qh6x
562,EstablishmentBig7956,"No the
```
Using std::cout, std::cin;
```
 the complier complained about it so I did separate lines
```
using std::cout;
using std::cin;
```
Clang doesn't have
```
<bits/stdc++.h>
```
Either and I wanted to check that out.","<div class=""md""><p>No the
<code>
Using std::cout, std::cin;
</code>
 the complier complained about it so I did separate lines
<code>
using std::cout;
using std::cin;
</code>
Clang doesn&#39;t have
<code>
&lt;bits/stdc++.h&gt;
</code>
Either and I wanted to check that out.</p>
</div>",1660054069.0,,1660054250.0,ijkxyon,False,t3_b4r4i4,t1_ijkwhy2,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ijkxyon/,1,False,1,False,b4r4i4,Cplusplus,t5_2qh6x
563,SilentXwing,It's the first step before starting programming. You gotta have that coffee. ,"<div class=""md""><p>It&#39;s the first step before starting programming. You gotta have that coffee. </p>
</div>",1553456413.0,,False,ejabpw4,True,t3_b4r4i4,t1_ejab4jf,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ejabpw4/,0,False,2,False,b4r4i4,Cplusplus,t5_2qh6x
564,alfps,"Oh, that's a C++17 feature. Use option `-std=c++17`.","<div class=""md""><p>Oh, that&#39;s a C++17 feature. Use option <code>-std=c++17</code>.</p>
</div>",1660060082.0,,False,ijldbeo,False,t3_b4r4i4,t1_ijkxyon,/r/Cplusplus/comments/b4r4i4/why_is_it_that_some_programmers_omit_the_use_of/ijldbeo/,0,False,2,False,b4r4i4,Cplusplus,t5_2qh6x
565,ChaosCon,"Cool stuff :) An n-body simulation is always one of my first go-tos for learning a new language. A couple of points:

1. A std::vector will almost certainly give you better performance than a std::list for your collection of bodies. We give linked lists a lot more attention than they deserve in programming classes -- they're actually a pretty specialized container.
2. It looks like the twins in your video start spiraling away from each other; did you check the energy conservation of your system? Numerical heating will often happen if you're not careful with your algorithm (Euler integration is...pretty bad). There are [other integrators](https://en.wikipedia.org/wiki/Verlet_integration) that work far better for this kind of simulation since they're what's called _symplectic_ (which basically means they intrinsically conserve energy).
3. You certainly haven't implemented anything incorrectly, but as an interesting point of physics/math a truly ""2d"" gravitational system would use `ln(distance)` for a gravitational potential instead of `1/distance`.","<div class=""md""><p>Cool stuff :) An n-body simulation is always one of my first go-tos for learning a new language. A couple of points:</p>

<ol>
<li>A std::vector will almost certainly give you better performance than a std::list for your collection of bodies. We give linked lists a lot more attention than they deserve in programming classes -- they&#39;re actually a pretty specialized container.</li>
<li>It looks like the twins in your video start spiraling away from each other; did you check the energy conservation of your system? Numerical heating will often happen if you&#39;re not careful with your algorithm (Euler integration is...pretty bad). There are <a href=""https://en.wikipedia.org/wiki/Verlet_integration"">other integrators</a> that work far better for this kind of simulation since they&#39;re what&#39;s called <em>symplectic</em> (which basically means they intrinsically conserve energy).</li>
<li>You certainly haven&#39;t implemented anything incorrectly, but as an interesting point of physics/math a truly &quot;2d&quot; gravitational system would use <code>ln(distance)</code> for a gravitational potential instead of <code>1/distance</code>.</li>
</ol>
</div>",1622129227.0,,1622132356.0,gzna5fa,False,t3_nm7gkz,t3_nm7gkz,/r/Cplusplus/comments/nm7gkz/simulation_of_newtons_law_of_gravitation/gzna5fa/,1,False,8,False,nm7gkz,Cplusplus,t5_2qh6x
566,Ra_Shere_Khan,this is amazing how long did it take?,"<div class=""md""><p>this is amazing how long did it take?</p>
</div>",1622653889.0,,False,h0c2rpm,False,t3_nm7gkz,t3_nm7gkz,/r/Cplusplus/comments/nm7gkz/simulation_of_newtons_law_of_gravitation/h0c2rpm/,1,False,2,False,nm7gkz,Cplusplus,t5_2qh6x
567,NoicestNoice,"Thank you for your response and feedback! :)

I have some questions, if you do not mind me asking.

1. I had `std::vector` in mind at first but then realized that I had difficulties when handling collisions because I had to remove a Body object from the middle of the vector and fix the gap. I decided to use `std::list` because it seems easier to remove objects from it. Is there a better way to approach this?
2. I did not really look into the conservation of energy. Thank you for pointing this out!
3. I do not quite understand what you mean here. Do you mean that because the integrating the protentional because it is `1/distance` will yield a `ln(distance)` relation?","<div class=""md""><p>Thank you for your response and feedback! :)</p>

<p>I have some questions, if you do not mind me asking.</p>

<ol>
<li>I had <code>std::vector</code> in mind at first but then realized that I had difficulties when handling collisions because I had to remove a Body object from the middle of the vector and fix the gap. I decided to use <code>std::list</code> because it seems easier to remove objects from it. Is there a better way to approach this?</li>
<li>I did not really look into the conservation of energy. Thank you for pointing this out!</li>
<li>I do not quite understand what you mean here. Do you mean that because the integrating the protentional because it is <code>1/distance</code> will yield a <code>ln(distance)</code> relation?</li>
</ol>
</div>",1622133738.0,,False,gznkrhp,True,t3_nm7gkz,t1_gzna5fa,/r/Cplusplus/comments/nm7gkz/simulation_of_newtons_law_of_gravitation/gznkrhp/,1,False,2,False,nm7gkz,Cplusplus,t5_2qh6x
568,NoicestNoice,"Thanks! I don't remember exactly but I would say quite a lot, maybe 10 hours.","<div class=""md""><p>Thanks! I don&#39;t remember exactly but I would say quite a lot, maybe 10 hours.</p>
</div>",1622654852.0,,False,h0c571b,True,t3_nm7gkz,t1_h0c2rpm,/r/Cplusplus/comments/nm7gkz/simulation_of_newtons_law_of_gravitation/h0c571b/,0,False,1,False,nm7gkz,Cplusplus,t5_2qh6x
569,ChaosCon,"Sure!

> I had std::vector in mind at first but then realized that I had difficulties when handling collisions because I had to remove a Body object from the middle of the vector and fix the gap. I decided to use std::list because it seems easier to remove objects from it. Is there a better way to approach this?

So, the reason a list is slow is because of memory fragmentation. Your loops are essentially processing all of your bodies the same way, so the more together they are in memory the faster things will go because you're better able to use the system's caches (cache misses are crazy expensive). A vector will have a size (number of things it has now) and capacity (number of things it _can have in the future before reallocating_), so adding/removing elements isn't awful if you've got the capacity for it. The worst case scenario is that you delete the first element of the vector in which case all of the other elements have to move downwards. If that's likely to happen there are a couple of things you can do: you could use a deque that's a little more flexible about insertions/deletions, or you could mark bodies as inactive and clean a bunch of them up in one go every n timesteps. What you choose depends a bit on the constraints of your problem.

> I do not quite understand what you mean here. Do you mean that because the integrating the protentional because it is 1/distance will yield a ln(distance) relation?

This is a little beyond undergrad physics, but the fact that the gravitational potential goes as 1/r in three dimensions is something of an artifact of the mathematical structure of the problem. It's not super easy to show, but that 1/r is what's called the ""Green's function of the Laplacian."" which basically tells you ""when I have a point mass, the potential looks like this. Everything can bet written as a sum of point masses, so the total potential is this"". The thing about two dimensions is that the Laplacian thing changes -- it's got three partial derivatives in three dimensions, but it's only got two in two dimensions which _dramatically_ changes the mathematical structure of things and you get a _very_ different Green's function (that logarithm). Ultimately this means that a 2d simulation is _not_ just points constrained to move on a plane, but that _there's no variation in the z direction_ -- points in two dimensions behave like ""infinite uniform lines"" in three dimensions (and infinite uniform planes in four, and infinite uniform volumes in five).","<div class=""md""><p>Sure!</p>

<blockquote>
<p>I had std::vector in mind at first but then realized that I had difficulties when handling collisions because I had to remove a Body object from the middle of the vector and fix the gap. I decided to use std::list because it seems easier to remove objects from it. Is there a better way to approach this?</p>
</blockquote>

<p>So, the reason a list is slow is because of memory fragmentation. Your loops are essentially processing all of your bodies the same way, so the more together they are in memory the faster things will go because you&#39;re better able to use the system&#39;s caches (cache misses are crazy expensive). A vector will have a size (number of things it has now) and capacity (number of things it <em>can have in the future before reallocating</em>), so adding/removing elements isn&#39;t awful if you&#39;ve got the capacity for it. The worst case scenario is that you delete the first element of the vector in which case all of the other elements have to move downwards. If that&#39;s likely to happen there are a couple of things you can do: you could use a deque that&#39;s a little more flexible about insertions/deletions, or you could mark bodies as inactive and clean a bunch of them up in one go every n timesteps. What you choose depends a bit on the constraints of your problem.</p>

<blockquote>
<p>I do not quite understand what you mean here. Do you mean that because the integrating the protentional because it is 1/distance will yield a ln(distance) relation?</p>
</blockquote>

<p>This is a little beyond undergrad physics, but the fact that the gravitational potential goes as 1/r in three dimensions is something of an artifact of the mathematical structure of the problem. It&#39;s not super easy to show, but that 1/r is what&#39;s called the &quot;Green&#39;s function of the Laplacian.&quot; which basically tells you &quot;when I have a point mass, the potential looks like this. Everything can bet written as a sum of point masses, so the total potential is this&quot;. The thing about two dimensions is that the Laplacian thing changes -- it&#39;s got three partial derivatives in three dimensions, but it&#39;s only got two in two dimensions which <em>dramatically</em> changes the mathematical structure of things and you get a <em>very</em> different Green&#39;s function (that logarithm). Ultimately this means that a 2d simulation is <em>not</em> just points constrained to move on a plane, but that <em>there&#39;s no variation in the z direction</em> -- points in two dimensions behave like &quot;infinite uniform lines&quot; in three dimensions (and infinite uniform planes in four, and infinite uniform volumes in five).</p>
</div>",1622136295.0,,1622136728.0,gznqtul,False,t3_nm7gkz,t1_gznkrhp,/r/Cplusplus/comments/nm7gkz/simulation_of_newtons_law_of_gravitation/gznqtul/,1,False,5,False,nm7gkz,Cplusplus,t5_2qh6x
570,NoicestNoice,"Wow! Thanks a lot for the deep clarifications, I really appreciate it!","<div class=""md""><p>Wow! Thanks a lot for the deep clarifications, I really appreciate it!</p>
</div>",1622141193.0,,False,gzo2jm2,True,t3_nm7gkz,t1_gznqtul,/r/Cplusplus/comments/nm7gkz/simulation_of_newtons_law_of_gravitation/gzo2jm2/,0,False,1,False,nm7gkz,Cplusplus,t5_2qh6x
571,pajamapants11,"In practice, the attributes/fields of a class are sensitive and important information to that class. In most cases we don't want a user changing a field. For example, if I have a Bank Account class, with fields like myName, myAccountNumber, myAddress, etc, we don't want some (theoretical) dumb user to go account.myAccountNumber = 123456789; or something like that.","<div class=""md""><p>In practice, the attributes/fields of a class are sensitive and important information to that class. In most cases we don&#39;t want a user changing a field. For example, if I have a Bank Account class, with fields like myName, myAccountNumber, myAddress, etc, we don&#39;t want some (theoretical) dumb user to go account.myAccountNumber = 123456789; or something like that.</p>
</div>",1603649102.0,,False,ga2vk14,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga2vk14/,1,False,21,False,jhxoaz,Cplusplus,t5_2qh6x
572,Sasmas1545,"Here's an example I've run into in the wild. 

If you have a matrix class, you might want to calculate the determinant. This might be a little expensive, so you don't want to do it more than you have to. So you can include a determinant attribute in your class, along with a flag to track whether the determinant has been calculated. When you call a function to get the determinant, if it hasn't been calculated yet, it will calculate it. If it's already been calculated, it will just grab it.  

So why does anything have to be private here? Well obviously the flag has to be private, as you don't want that getting changed. But the determinant also has to be private, as you only want that to be changed by the determinant function. Not only that, but the entire matrix has to be private, because if its values are changed, that would change its determinant without actually changing the determinant attribute or flag. 

This same situation could apply to something like the length of a vector. Or really anywhere that you have something relatively expensive to calculate from a class that you want to store as an attribute of the class. Leaving things public undermines the legitimacy of the attribute.","<div class=""md""><p>Here&#39;s an example I&#39;ve run into in the wild. </p>

<p>If you have a matrix class, you might want to calculate the determinant. This might be a little expensive, so you don&#39;t want to do it more than you have to. So you can include a determinant attribute in your class, along with a flag to track whether the determinant has been calculated. When you call a function to get the determinant, if it hasn&#39;t been calculated yet, it will calculate it. If it&#39;s already been calculated, it will just grab it.  </p>

<p>So why does anything have to be private here? Well obviously the flag has to be private, as you don&#39;t want that getting changed. But the determinant also has to be private, as you only want that to be changed by the determinant function. Not only that, but the entire matrix has to be private, because if its values are changed, that would change its determinant without actually changing the determinant attribute or flag. </p>

<p>This same situation could apply to something like the length of a vector. Or really anywhere that you have something relatively expensive to calculate from a class that you want to store as an attribute of the class. Leaving things public undermines the legitimacy of the attribute.</p>
</div>",1603655835.0,,False,ga3ftm5,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga3ftm5/,0,False,6,False,jhxoaz,Cplusplus,t5_2qh6x
573,whydoyouonlylie,"Classes in C++ are intended to be self-contained so that the developer knows exactly in what way attribues may be altered and account for it in designing the class. If you make those attributes public then all bets are off and those attributes could be updated in any way at any time.

If you want to use the attributes in main you should do so using explicit getter and setter functions so the developer is aware that the attributes can potentially be changed by something externally.","<div class=""md""><p>Classes in C++ are intended to be self-contained so that the developer knows exactly in what way attribues may be altered and account for it in designing the class. If you make those attributes public then all bets are off and those attributes could be updated in any way at any time.</p>

<p>If you want to use the attributes in main you should do so using explicit getter and setter functions so the developer is aware that the attributes can potentially be changed by something externally.</p>
</div>",1603649678.0,,False,ga2x65g,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga2x65g/,0,False,11,False,jhxoaz,Cplusplus,t5_2qh6x
574,PudgyPotatoes,Have a look at encapsulation in c++ - that should give you the answer you’re looking for. :),"<div class=""md""><p>Have a look at encapsulation in c++ - that should give you the answer you’re looking for. :)</p>
</div>",1603649000.0,,False,ga2vb45,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga2vb45/,0,False,5,False,jhxoaz,Cplusplus,t5_2qh6x
575,mredding,"One common idiom in C++ is that structs model data, classes model behavior. The data in an instance of either represents state, as in a state machine. For a class representing a work unit, that's even more true. What you want is your state machine to manage its own state, you don't need something else changing it's state, or putting it in an invalid state. That is the essence of the problem of breaking encapsulation.

So getters and setters are typically anti patterns except for some builder patterns; you're otherwise trying to make abstract data, which is a thing, but typically not what you want, and makes for transient dependencies, which are often a bad thing. If you need to share internal state, it's better to hold a reference to common data than to make internal data exposed.","<div class=""md""><p>One common idiom in C++ is that structs model data, classes model behavior. The data in an instance of either represents state, as in a state machine. For a class representing a work unit, that&#39;s even more true. What you want is your state machine to manage its own state, you don&#39;t need something else changing it&#39;s state, or putting it in an invalid state. That is the essence of the problem of breaking encapsulation.</p>

<p>So getters and setters are typically anti patterns except for some builder patterns; you&#39;re otherwise trying to make abstract data, which is a thing, but typically not what you want, and makes for transient dependencies, which are often a bad thing. If you need to share internal state, it&#39;s better to hold a reference to common data than to make internal data exposed.</p>
</div>",1603654145.0,,False,ga3bbqc,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga3bbqc/,1,False,5,False,jhxoaz,Cplusplus,t5_2qh6x
576,twistedrapier,"Think of it this way.  Say you needed to change the internals of a class because you've come up with a much better way of doing the thing it's responsible for.  Now, what would be easier to change, a class where all the attributes are private and external parties need to use well defined methods of your class to access/modify them, or a class where everyone who can see your class can change those attributes willy nilly?

This type of encapsulation, while it initially seems to make things much more difficult, is a god send when it comes to maintenance, if for no other reason than you just need to fix/reason about the code/API of your class, and not how everyone else has exploited the internals for their own.","<div class=""md""><p>Think of it this way.  Say you needed to change the internals of a class because you&#39;ve come up with a much better way of doing the thing it&#39;s responsible for.  Now, what would be easier to change, a class where all the attributes are private and external parties need to use well defined methods of your class to access/modify them, or a class where everyone who can see your class can change those attributes willy nilly?</p>

<p>This type of encapsulation, while it initially seems to make things much more difficult, is a god send when it comes to maintenance, if for no other reason than you just need to fix/reason about the code/API of your class, and not how everyone else has exploited the internals for their own.</p>
</div>",1603650799.0,,False,ga30nvk,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga30nvk/,0,False,3,False,jhxoaz,Cplusplus,t5_2qh6x
577,warpod,"suppose you have a class `Window` with private member  `width` and public method `setWidth`. 

Normally you would call `window.setWidth(newWidth);` because `setWidth` does something extra besides assigning new width (such as invalidating window area, so it repaints on screen). But with public member `width` you would just assign `window.width = newWidth;` forgetting to do those extra steps.","<div class=""md""><p>suppose you have a class <code>Window</code> with private member  <code>width</code> and public method <code>setWidth</code>. </p>

<p>Normally you would call <code>window.setWidth(newWidth);</code> because <code>setWidth</code> does something extra besides assigning new width (such as invalidating window area, so it repaints on screen). But with public member <code>width</code> you would just assign <code>window.width = newWidth;</code> forgetting to do those extra steps.</p>
</div>",1603651350.0,,False,ga32fqz,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga32fqz/,0,False,3,False,jhxoaz,Cplusplus,t5_2qh6x
578,Pooneapple,For example think of a game. You have a window with a width and height. You will likely store those variables. If you want to change the window size you need to tell the OS to update the window. If you have a setter function you can add that update feature directly. Now if someone else uses your code and they want to change the windows height all they have to do is call the one function. It provides security and less of a headache for those who come after you.,"<div class=""md""><p>For example think of a game. You have a window with a width and height. You will likely store those variables. If you want to change the window size you need to tell the OS to update the window. If you have a setter function you can add that update feature directly. Now if someone else uses your code and they want to change the windows height all they have to do is call the one function. It provides security and less of a headache for those who come after you.</p>
</div>",1603655676.0,,False,ga3fhm7,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga3fhm7/,0,False,2,False,jhxoaz,Cplusplus,t5_2qh6x
579,jstock23,"Think about encapsulation, the idea where you only interact with a class via public functions which are designed to not produce invalid states.

Public functions can be called, and those functions can themselves manipulate “back end” data members in special ways. Like if you have a Person class with a Name string, you might want to test if a name is valid before altering the data, instead of just allowing anyone to change the name.

This way you can have a class which has data “in the background” that you can access and change via public functions that won’t mess up the class by accident. Private data members of a class can still be manipulated, but you would force people using your class to only be able to manipulate it in the way you want, so that you can design the class to only be used in special ways.","<div class=""md""><p>Think about encapsulation, the idea where you only interact with a class via public functions which are designed to not produce invalid states.</p>

<p>Public functions can be called, and those functions can themselves manipulate “back end” data members in special ways. Like if you have a Person class with a Name string, you might want to test if a name is valid before altering the data, instead of just allowing anyone to change the name.</p>

<p>This way you can have a class which has data “in the background” that you can access and change via public functions that won’t mess up the class by accident. Private data members of a class can still be manipulated, but you would force people using your class to only be able to manipulate it in the way you want, so that you can design the class to only be used in special ways.</p>
</div>",1603662532.0,,False,ga3tbap,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga3tbap/,0,False,2,False,jhxoaz,Cplusplus,t5_2qh6x
580,snarkhunter,"Freedom is bad, actually. You want to give me the simplest interface for understanding and using your class. Maybe that does involve getting and setting specific properties, in which case we define getters and setters, but generally speaking we want that interface to be defined at a more abstract level. Construction, destruction, member functions that encapsulate the behavior of the object your modeling in this class.  


Because that's what classes are about - abstraction, not just grouping data and functions together. Take for example an ORM. They may support a dozen different RDBMSes under the hood, but you're going to interact with those at a much higher level where in many cases moving from one underlying DB to a different system - say MS SQL to PostgreSQL - most of that's taken care of and you're just left tweaking any data types that were specific to MS SQL, you don't have to worry at all about the specifics of how MS SQL does implements its client side library or what that interface looks like, you just happily go on defining models that get turned into table, CRUDing your data, etc. If the ORM layer exposes all those innards to you, all that intricacy leaks out. Once your application code starts getting more and more tightly bound to the internal mechanisms of those library classes, it becomes harder and harder to change. Updating the library may become harder to do as changes to those internal structures and methods may break your application code now. If you have a clearly defined, minimal (but no smaller), and relatively static public interface, you avoid a whole bunch of design pitfalls down the way.","<div class=""md""><p>Freedom is bad, actually. You want to give me the simplest interface for understanding and using your class. Maybe that does involve getting and setting specific properties, in which case we define getters and setters, but generally speaking we want that interface to be defined at a more abstract level. Construction, destruction, member functions that encapsulate the behavior of the object your modeling in this class.  </p>

<p>Because that&#39;s what classes are about - abstraction, not just grouping data and functions together. Take for example an ORM. They may support a dozen different RDBMSes under the hood, but you&#39;re going to interact with those at a much higher level where in many cases moving from one underlying DB to a different system - say MS SQL to PostgreSQL - most of that&#39;s taken care of and you&#39;re just left tweaking any data types that were specific to MS SQL, you don&#39;t have to worry at all about the specifics of how MS SQL does implements its client side library or what that interface looks like, you just happily go on defining models that get turned into table, CRUDing your data, etc. If the ORM layer exposes all those innards to you, all that intricacy leaks out. Once your application code starts getting more and more tightly bound to the internal mechanisms of those library classes, it becomes harder and harder to change. Updating the library may become harder to do as changes to those internal structures and methods may break your application code now. If you have a clearly defined, minimal (but no smaller), and relatively static public interface, you avoid a whole bunch of design pitfalls down the way.</p>
</div>",1603663186.0,,False,ga3ukds,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga3ukds/,0,False,2,False,jhxoaz,Cplusplus,t5_2qh6x
581,Perfect-Flaw,"A lot of clever people have given important information on this topic so I won't add to it, one thing I did note from your original post is that you seem to think structs are private.

Structs are public by default, classes on the other hand are private by default.

Structs are meant to represent data, whereas classes encapsulate functionality.

Hope this helps","<div class=""md""><p>A lot of clever people have given important information on this topic so I won&#39;t add to it, one thing I did note from your original post is that you seem to think structs are private.</p>

<p>Structs are public by default, classes on the other hand are private by default.</p>

<p>Structs are meant to represent data, whereas classes encapsulate functionality.</p>

<p>Hope this helps</p>
</div>",1603663289.0,,False,ga3urg0,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga3urg0/,1,False,2,False,jhxoaz,Cplusplus,t5_2qh6x
582,kbob,"The bigger the code base, the more valuable access restrictions are.  If a single person is writing the whole thing in a week or two (typical homework assignment), they don't seem necessary.

But imagine that you're designing a class to be used by people you'll never talk to, and you don't know what they'll be trying to do.  And they won't know how you intended your class to be used (unless you write superhumanly good docs).  If you design it well, the public interface will allow the class to be used in exactly the ways you envision.

It will serve as documentation for the class's clients.  How can it be instantiated?  (see the constructors)  How can it be queried? (see the const methods)  What operations can it do?  (see the non-const methods)  What shouldn't clients use? (private members)

It will help you write correct code.  If you correctly initialize and update a private member within the class definition, you know it will have the correct value without having to check the whole app for other places it's set (by people with unknown intentions whom you'll never meet).  So you only have to consider a small amount of code, not an unbounded amount, to understand that member.

EDIT: Also, debugging.  Some unknown person with unknown goals (or you next year) think there's a bug in your code.  They have to read it and understand it.  If you've done a good job of encapsulating the private state, their job gets much easier.","<div class=""md""><p>The bigger the code base, the more valuable access restrictions are.  If a single person is writing the whole thing in a week or two (typical homework assignment), they don&#39;t seem necessary.</p>

<p>But imagine that you&#39;re designing a class to be used by people you&#39;ll never talk to, and you don&#39;t know what they&#39;ll be trying to do.  And they won&#39;t know how you intended your class to be used (unless you write superhumanly good docs).  If you design it well, the public interface will allow the class to be used in exactly the ways you envision.</p>

<p>It will serve as documentation for the class&#39;s clients.  How can it be instantiated?  (see the constructors)  How can it be queried? (see the const methods)  What operations can it do?  (see the non-const methods)  What shouldn&#39;t clients use? (private members)</p>

<p>It will help you write correct code.  If you correctly initialize and update a private member within the class definition, you know it will have the correct value without having to check the whole app for other places it&#39;s set (by people with unknown intentions whom you&#39;ll never meet).  So you only have to consider a small amount of code, not an unbounded amount, to understand that member.</p>

<p>EDIT: Also, debugging.  Some unknown person with unknown goals (or you next year) think there&#39;s a bug in your code.  They have to read it and understand it.  If you&#39;ve done a good job of encapsulating the private state, their job gets much easier.</p>
</div>",1603674429.0,,1603674627.0,ga4fml7,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga4fml7/,0,False,2,False,jhxoaz,Cplusplus,t5_2qh6x
583,AirAKose,"Access modifiers (`public`, `private`, `protected`) are for the programmers only. They make collaboration and use of other people's code less error-prone, as well as making code maintenance easier if you're the one writing the code to be used.

When you're working with other programmers (future you is basically another programmer too), you want to minimize the potential for errors and misunderstandings. You might have a variable for internal state that isn't reliable, or should only be set after doing certain things, and another dev (or future you) comes up behind you and tries to rely on it / change it without doing the other things. Now your program is in an unknown state.

To prevent this, we make these variables inaccessible and hide them behind functions that ensure the proper steps are performed.

This issue *does* come up in professional environments. There was a project I was on where we used a language with weaker access modifiers that could be circumvented. And so people **did** circumvent them, and problems occurred... Seemingly randomly because we couldn't ever be sure that something was only used where we expected it to be. It was a major time sink Constantly and increasingly frustrating. Even with internal rules that forbid it, external groups and third-party libraries weren't beholden to them.

----

As for maintenance, if someone becomes reliant on internal state it's more difficult to change it later. If you're the only one using the code, maybe you're willing to eat that time investment, but if you're writing code for others it's harder to justify. Many devs may opt to not update a library if the interface breaks too much and becomes too much of a hassle to keep up-to-date with.

So to prevent this, we encapsulate as much as possible to insulate future changes. Even something like `IsVisible` should probably be an accessor function around a hidden variable, because it may be that you want to later introduce different visibility states (like `Visible`, `HiddenCollapsed`, `HiddenAffectLayout`, `VisibleNoInteract`).

There's a popular game engine that has issues with this because they didn't encapsulate, so they've had to slowly convert things to accessors and many games still rely on the old state variables...

A little bit more code now can prevent major headaches later.","<div class=""md""><p>Access modifiers (<code>public</code>, <code>private</code>, <code>protected</code>) are for the programmers only. They make collaboration and use of other people&#39;s code less error-prone, as well as making code maintenance easier if you&#39;re the one writing the code to be used.</p>

<p>When you&#39;re working with other programmers (future you is basically another programmer too), you want to minimize the potential for errors and misunderstandings. You might have a variable for internal state that isn&#39;t reliable, or should only be set after doing certain things, and another dev (or future you) comes up behind you and tries to rely on it / change it without doing the other things. Now your program is in an unknown state.</p>

<p>To prevent this, we make these variables inaccessible and hide them behind functions that ensure the proper steps are performed.</p>

<p>This issue <em>does</em> come up in professional environments. There was a project I was on where we used a language with weaker access modifiers that could be circumvented. And so people <strong>did</strong> circumvent them, and problems occurred... Seemingly randomly because we couldn&#39;t ever be sure that something was only used where we expected it to be. It was a major time sink Constantly and increasingly frustrating. Even with internal rules that forbid it, external groups and third-party libraries weren&#39;t beholden to them.</p>

<hr/>

<p>As for maintenance, if someone becomes reliant on internal state it&#39;s more difficult to change it later. If you&#39;re the only one using the code, maybe you&#39;re willing to eat that time investment, but if you&#39;re writing code for others it&#39;s harder to justify. Many devs may opt to not update a library if the interface breaks too much and becomes too much of a hassle to keep up-to-date with.</p>

<p>So to prevent this, we encapsulate as much as possible to insulate future changes. Even something like <code>IsVisible</code> should probably be an accessor function around a hidden variable, because it may be that you want to later introduce different visibility states (like <code>Visible</code>, <code>HiddenCollapsed</code>, <code>HiddenAffectLayout</code>, <code>VisibleNoInteract</code>).</p>

<p>There&#39;s a popular game engine that has issues with this because they didn&#39;t encapsulate, so they&#39;ve had to slowly convert things to accessors and many games still rely on the old state variables...</p>

<p>A little bit more code now can prevent major headaches later.</p>
</div>",1603693047.0,,False,ga56yqi,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga56yqi/,1,False,2,False,jhxoaz,Cplusplus,t5_2qh6x
584,conquerer22,"Private, protected, and public attributes of a class are used basically for security purposes for a class. With public, yes you could access everything within a class, but there may be some cases where you don’t want variables within a class to be accessed freely. Maybe you’re creating a class for a credit card for a financial program for example. You could make the PIN number, security code, and exp. date public, but then anything could access that information. Obviously you don’t want that to happen, so you would make it private so that only functions within that class can access that information. You could also make it protected, which is similar to private but with the added benefit that child classes can access that information as well. So if you made a base class for a credit card and child classes of different types of credit cards, they can still access the base classes information without compromising the security of it.","<div class=""md""><p>Private, protected, and public attributes of a class are used basically for security purposes for a class. With public, yes you could access everything within a class, but there may be some cases where you don’t want variables within a class to be accessed freely. Maybe you’re creating a class for a credit card for a financial program for example. You could make the PIN number, security code, and exp. date public, but then anything could access that information. Obviously you don’t want that to happen, so you would make it private so that only functions within that class can access that information. You could also make it protected, which is similar to private but with the added benefit that child classes can access that information as well. So if you made a base class for a credit card and child classes of different types of credit cards, they can still access the base classes information without compromising the security of it.</p>
</div>",1603649708.0,,False,ga2x9k1,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga2x9k1/,1,False,2,False,jhxoaz,Cplusplus,t5_2qh6x
585,kingofthejaffacakes,"I agree in a way - but not making all privates public, I think they should be protected. I'm an advocate of making almost everything that would be private be protected. I don't really like the idea of a class limiting its child class when the parent can't know what the child class will be doing.

About the only time I can imagine is when you're writing a library that you don't want to allow derivation from.","<div class=""md""><p>I agree in a way - but not making all privates public, I think they should be protected. I&#39;m an advocate of making almost everything that would be private be protected. I don&#39;t really like the idea of a class limiting its child class when the parent can&#39;t know what the child class will be doing.</p>

<p>About the only time I can imagine is when you&#39;re writing a library that you don&#39;t want to allow derivation from.</p>
</div>",1603651435.0,,1603652023.0,ga32ppc,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga32ppc/,2,False,2,False,jhxoaz,Cplusplus,t5_2qh6x
586,CoolantMan7,I have no idea either,"<div class=""md""><p>I have no idea either</p>
</div>",1603648659.0,,False,ga2ui9r,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga2ui9r/,1,False,-1,False,jhxoaz,Cplusplus,t5_2qh6x
587,punitxsmart,"Idea with classes is that you want to keep everything private unless you really really need it to be public.

Good thing with private members (variables, functions) is that the class implementation (details about how these private variables are defined and used inside the class) can be hidden.

If you can keep your implementation details private, you can change them without affecting any code outside the class. You can easily re-arrange your class design, add features, fix bugs, improve performance without having to worry about breaking other code. As long as your public functions work as expected, you are good.

However, none if these things are necessarily required to create working code. You can write code in purely C style without ever having to use classes. But, this feature of C++ allows developer to write better code and help create and maintain large complex systems.","<div class=""md""><p>Idea with classes is that you want to keep everything private unless you really really need it to be public.</p>

<p>Good thing with private members (variables, functions) is that the class implementation (details about how these private variables are defined and used inside the class) can be hidden.</p>

<p>If you can keep your implementation details private, you can change them without affecting any code outside the class. You can easily re-arrange your class design, add features, fix bugs, improve performance without having to worry about breaking other code. As long as your public functions work as expected, you are good.</p>

<p>However, none if these things are necessarily required to create working code. You can write code in purely C style without ever having to use classes. But, this feature of C++ allows developer to write better code and help create and maintain large complex systems.</p>
</div>",1603663074.0,,1603663295.0,ga3ucu6,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga3ucu6/,0,False,1,False,jhxoaz,Cplusplus,t5_2qh6x
588,PinballWizrd,"In addition to the explanations of public vs. private, another thing about c++ to note:  Classes and structs are essentially the same thing.  

The only difference between the two is that classes are private and structs are public *by default*, but *both can contain public and private methods and variables*.  

Convention is typically to use structs for plain old data and classes for functions and data, however","<div class=""md""><p>In addition to the explanations of public vs. private, another thing about c++ to note:  Classes and structs are essentially the same thing.  </p>

<p>The only difference between the two is that classes are private and structs are public <em>by default</em>, but <em>both can contain public and private methods and variables</em>.  </p>

<p>Convention is typically to use structs for plain old data and classes for functions and data, however</p>
</div>",1603666256.0,,False,ga411xo,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga411xo/,0,False,1,False,jhxoaz,Cplusplus,t5_2qh6x
589,HappyFruitTree,"Imagine std::string having its members public. Instead of writing str.size() you could just write str.size, and if you wanted to resize the string you could just write str.size = 10; ... Or could you? It might work to shrink the size of the string (leaving some of the allocated memory unused) but it wouldn't work to make the string larger.

In a real implementation you might not even have a size member variable. Many implementations contain a pointer to the start and end of the char buffer, from which the size can be computed, to prioritize making str.begin() and str.end() fast. Modern implementations also use clever tricks to avoid dynamic allocations for small strings which would essentially be impossible to have if the members were public.

So having private members gives more freedom to the implementation. It hides the implementation details from the user.","<div class=""md""><p>Imagine std::string having its members public. Instead of writing str.size() you could just write str.size, and if you wanted to resize the string you could just write str.size = 10; ... Or could you? It might work to shrink the size of the string (leaving some of the allocated memory unused) but it wouldn&#39;t work to make the string larger.</p>

<p>In a real implementation you might not even have a size member variable. Many implementations contain a pointer to the start and end of the char buffer, from which the size can be computed, to prioritize making str.begin() and str.end() fast. Modern implementations also use clever tricks to avoid dynamic allocations for small strings which would essentially be impossible to have if the members were public.</p>

<p>So having private members gives more freedom to the implementation. It hides the implementation details from the user.</p>
</div>",1603712185.0,,1603712583.0,ga5ohzf,False,t3_jhxoaz,t3_jhxoaz,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga5ohzf/,0,False,1,False,jhxoaz,Cplusplus,t5_2qh6x
590,ignorantpisswalker,"Users don't do these kind of things. Programmers, consumer of your API will.

To the real question:
In future versions of your API you might want to emit an internal signal to notify that data has been changed. You might want to chage the internal storage from int into double , while keeping API. 

You can also provide a stable ABI this way even if you re-order the members of your class (see PIMPL).","<div class=""md""><p>Users don&#39;t do these kind of things. Programmers, consumer of your API will.</p>

<p>To the real question:
In future versions of your API you might want to emit an internal signal to notify that data has been changed. You might want to chage the internal storage from int into double , while keeping API. </p>

<p>You can also provide a stable ABI this way even if you re-order the members of your class (see PIMPL).</p>
</div>",1603719590.0,,False,ga5yqs2,False,t3_jhxoaz,t1_ga2vk14,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga5yqs2/,0,False,2,False,jhxoaz,Cplusplus,t5_2qh6x
591,,I learned something reading this. Thank you!,"<div class=""md""><p>I learned something reading this. Thank you!</p>
</div>",1603654544.0,,False,ga3cimr,False,t3_jhxoaz,t1_ga3bbqc,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga3cimr/,0,False,2,False,jhxoaz,Cplusplus,t5_2qh6x
592,turkishjedi21,"I appreciate it lol, that was a typo however","<div class=""md""><p>I appreciate it lol, that was a typo however</p>
</div>",1603663806.0,,False,ga3vrsb,True,t3_jhxoaz,t1_ga3urg0,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga3vrsb/,0,False,1,False,jhxoaz,Cplusplus,t5_2qh6x
593,AirAKose,"All that said, if you're only doing something small and just want to do it quick and dirty, feel free to make everything `public`

But at the same time, it's a good idea to get into the habit of encapsulating things and creating solid interfaces. The more you do it, even for quick and dirty programs, the more is becomes second nature","<div class=""md""><p>All that said, if you&#39;re only doing something small and just want to do it quick and dirty, feel free to make everything <code>public</code></p>

<p>But at the same time, it&#39;s a good idea to get into the habit of encapsulating things and creating solid interfaces. The more you do it, even for quick and dirty programs, the more is becomes second nature</p>
</div>",1603693318.0,,False,ga578d0,False,t3_jhxoaz,t1_ga56yqi,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga578d0/,0,False,1,False,jhxoaz,Cplusplus,t5_2qh6x
594,Drugbird,"I'm not sure if this post is meant as a conceptual answer, but I'd like to mention that public, protected and private sections of classes offer absolutely no security for your program.

It's very easy to access private and protected member variables of classes by anyone that wants to do this.","<div class=""md""><p>I&#39;m not sure if this post is meant as a conceptual answer, but I&#39;d like to mention that public, protected and private sections of classes offer absolutely no security for your program.</p>

<p>It&#39;s very easy to access private and protected member variables of classes by anyone that wants to do this.</p>
</div>",1603668199.0,,False,ga44o42,False,t3_jhxoaz,t1_ga2x9k1,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga44o42/,1,False,3,False,jhxoaz,Cplusplus,t5_2qh6x
595,nickburris,But private helps when you're debugging (or simply trying to understand more about the class) you can know that the private variables will only change within that class. Then you can use protected to indicate that these variables specifically are expected to be used and modified by derivatives.,"<div class=""md""><p>But private helps when you&#39;re debugging (or simply trying to understand more about the class) you can know that the private variables will only change within that class. Then you can use protected to indicate that these variables specifically are expected to be used and modified by derivatives.</p>
</div>",1603660957.0,,False,ga3q6x1,False,t3_jhxoaz,t1_ga32ppc,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga3q6x1/,0,False,2,False,jhxoaz,Cplusplus,t5_2qh6x
596,HappyFruitTree,But if you make them protected they all of a sudden become part of the interface so you can no longer change things without worrying about breaking child classes.,"<div class=""md""><p>But if you make them protected they all of a sudden become part of the interface so you can no longer change things without worrying about breaking child classes.</p>
</div>",1603712893.0,,False,ga5pavh,False,t3_jhxoaz,t1_ga32ppc,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga5pavh/,1,False,1,False,jhxoaz,Cplusplus,t5_2qh6x
597,turkishjedi21,Lol,"<div class=""md""><p>Lol</p>
</div>",1603648738.0,,False,ga2uoub,True,t3_jhxoaz,t1_ga2ui9r,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga2uoub/,0,False,0,False,jhxoaz,Cplusplus,t5_2qh6x
598,conquerer22,It was more of a conceptual way to explain it,"<div class=""md""><p>It was more of a conceptual way to explain it</p>
</div>",1603668236.0,,False,ga44qla,False,t3_jhxoaz,t1_ga44o42,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga44qla/,0,False,0,False,jhxoaz,Cplusplus,t5_2qh6x
599,kingofthejaffacakes,"But they're my child classes too.

As I said: I understand if it's a library you're writing, intended for independent derivation. That's, in my experience, not the common case.

I guess though my argument works in reverse too... If I control the source for both child and parent, it's easy to turn private to protected as needed, so why not document that the intent is that those private variables are not for messing with.  Okay -- you talked me into modifying my policy.","<div class=""md""><p>But they&#39;re my child classes too.</p>

<p>As I said: I understand if it&#39;s a library you&#39;re writing, intended for independent derivation. That&#39;s, in my experience, not the common case.</p>

<p>I guess though my argument works in reverse too... If I control the source for both child and parent, it&#39;s easy to turn private to protected as needed, so why not document that the intent is that those private variables are not for messing with.  Okay -- you talked me into modifying my policy.</p>
</div>",1603724378.0,,1603736194.0,ga67alx,False,t3_jhxoaz,t1_ga5pavh,/r/Cplusplus/comments/jhxoaz/why_would_you_ever_want_attributes_of_a_class_to/ga67alx/,0,False,1,False,jhxoaz,Cplusplus,t5_2qh6x
600,Sopranopillow,Interesting!,"<div class=""md""><p>Interesting!</p>
</div>",1501011199.0,,False,dkpkdci,False,t3_6pgkj8,t3_6pgkj8,/r/Cplusplus/comments/6pgkj8/interview_with_bjarne_stroustrup_creator_of_c/dkpkdci/,0,False,3,False,6pgkj8,Cplusplus,t5_2qh6x
601,jstock23,Thanks!,"<div class=""md""><p>Thanks!</p>
</div>",1501049625.0,,False,dkqeyco,False,t3_6pgkj8,t3_6pgkj8,/r/Cplusplus/comments/6pgkj8/interview_with_bjarne_stroustrup_creator_of_c/dkqeyco/,0,False,2,False,6pgkj8,Cplusplus,t5_2qh6x
602,Valrandir,Very nice thanks for the link :),"<div class=""md""><p>Very nice thanks for the link :)</p>
</div>",1502125876.0,,False,dlagziy,False,t3_6pgkj8,t3_6pgkj8,/r/Cplusplus/comments/6pgkj8/interview_with_bjarne_stroustrup_creator_of_c/dlagziy/,0,False,2,False,6pgkj8,Cplusplus,t5_2qh6x
603,Dedushka_shubin,"I found this book very useful:

[https://en.wikibooks.org/wiki/More\_C%2B%2B\_Idioms](https://en.wikibooks.org/wiki/More_C%2B%2B_Idioms)","<div class=""md""><p>I found this book very useful:</p>

<p><a href=""https://en.wikibooks.org/wiki/More_C%2B%2B_Idioms"">https://en.wikibooks.org/wiki/More_C%2B%2B_Idioms</a></p>
</div>",1639220992.0,,False,ho3xado,False,t3_rdxh6q,t3_rdxh6q,/r/Cplusplus/comments/rdxh6q/c_books/ho3xado/,1,False,6,False,rdxh6q,Cplusplus,t5_2qh6x
604,dimif24,"C++ Primer 5th edition , effective modern C++","<div class=""md""><p>C++ Primer 5th edition , effective modern C++</p>
</div>",1639232040.0,,False,ho4f5ac,False,t3_rdxh6q,t3_rdxh6q,/r/Cplusplus/comments/rdxh6q/c_books/ho4f5ac/,1,False,4,False,rdxh6q,Cplusplus,t5_2qh6x
605,bert8128,I have read two good books recently. A tour of c++ by stroustroup and c++17 by josuttis.,"<div class=""md""><p>I have read two good books recently. A tour of c++ by stroustroup and c++17 by josuttis.</p>
</div>",1639246360.0,,False,ho5bghf,False,t3_rdxh6q,t3_rdxh6q,/r/Cplusplus/comments/rdxh6q/c_books/ho5bghf/,0,False,3,False,rdxh6q,Cplusplus,t5_2qh6x
606,sQGNXXnkceeEfhm,"Effective Modern C++, and anything else Scott Meyers has written.","<div class=""md""><p>Effective Modern C++, and anything else Scott Meyers has written.</p>
</div>",1639250127.0,,False,ho5kfv3,False,t3_rdxh6q,t3_rdxh6q,/r/Cplusplus/comments/rdxh6q/c_books/ho5kfv3/,0,False,2,False,rdxh6q,Cplusplus,t5_2qh6x
607,vhite,"I would also recommend A Tour of C++, as it is the perfect book for this case. It goes trough all the main features of modern C++17, and some features that were then planned for C++20, and all the main dos and donts involvled while constantly referencing [C++ Core Guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines) where you can always read more if you need to.

I think the strongest and the most underrated part of this book is how brief it is. It doesn't try to explain everything from scratch like you're just learning the language, and it doesn't shy away from using parts of the language it hasn't introduced yet to avoid confusing you. It assumes that you have already worked with C++ to some extent and respects your time.

Is it a complete collection of everything you need to know? No, but no book is going to be. It will however give you a solid core structure from which you can breanch into more specialized books and other sources.","<div class=""md""><p>I would also recommend A Tour of C++, as it is the perfect book for this case. It goes trough all the main features of modern C++17, and some features that were then planned for C++20, and all the main dos and donts involvled while constantly referencing <a href=""https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines"">C++ Core Guidelines</a> where you can always read more if you need to.</p>

<p>I think the strongest and the most underrated part of this book is how brief it is. It doesn&#39;t try to explain everything from scratch like you&#39;re just learning the language, and it doesn&#39;t shy away from using parts of the language it hasn&#39;t introduced yet to avoid confusing you. It assumes that you have already worked with C++ to some extent and respects your time.</p>

<p>Is it a complete collection of everything you need to know? No, but no book is going to be. It will however give you a solid core structure from which you can breanch into more specialized books and other sources.</p>
</div>",1639250362.0,,False,ho5kzmt,False,t3_rdxh6q,t3_rdxh6q,/r/Cplusplus/comments/rdxh6q/c_books/ho5kzmt/,0,False,2,False,rdxh6q,Cplusplus,t5_2qh6x
608,nebuchadnezzar277,I think Peter Gottschling's 2nd edition of Discovering Modern C++ is your best bet but it's only available as an ebook right now.,"<div class=""md""><p>I think Peter Gottschling&#39;s 2nd edition of Discovering Modern C++ is your best bet but it&#39;s only available as an ebook right now.</p>
</div>",1639223857.0,,False,ho419zo,False,t3_rdxh6q,t3_rdxh6q,/r/Cplusplus/comments/rdxh6q/c_books/ho419zo/,0,False,1,False,rdxh6q,Cplusplus,t5_2qh6x
609,flyingron,Nick Jostutis has a nice book:  [https://www.cppstd17.com/](https://www.cppstd17.com/),"<div class=""md""><p>Nick Jostutis has a nice book:  <a href=""https://www.cppstd17.com/"">https://www.cppstd17.com/</a></p>
</div>",1639257289.0,,False,ho60om7,False,t3_rdxh6q,t3_rdxh6q,/r/Cplusplus/comments/rdxh6q/c_books/ho60om7/,0,False,1,False,rdxh6q,Cplusplus,t5_2qh6x
610,Middlewarian,"I like ""Large-Scale C++ Volume 1"" by John Lakos.   ""Embracing Modern C++ Safely"" isn't out yet, but I think it looks interesting.  There are conference talks available about both of those books.  ""Software Architecture with C++"" looks interesting.   Rainer Grimm has a book on C++ 2020 that's available now.","<div class=""md""><p>I like &quot;Large-Scale C++ Volume 1&quot; by John Lakos.   &quot;Embracing Modern C++ Safely&quot; isn&#39;t out yet, but I think it looks interesting.  There are conference talks available about both of those books.  &quot;Software Architecture with C++&quot; looks interesting.   Rainer Grimm has a book on C++ 2020 that&#39;s available now.</p>
</div>",1639280764.0,,False,ho7eebx,False,t3_rdxh6q,t3_rdxh6q,/r/Cplusplus/comments/rdxh6q/c_books/ho7eebx/,0,False,1,False,rdxh6q,Cplusplus,t5_2qh6x
611,flyingron,"Nick Jostutis:  [https://www.cppstd17.com/](https://www.cppstd17.com/)

&#x200B;

It will get you up to date on the changes in the language too.","<div class=""md""><p>Nick Jostutis:  <a href=""https://www.cppstd17.com/"">https://www.cppstd17.com/</a></p>

<p>&#x200B;</p>

<p>It will get you up to date on the changes in the language too.</p>
</div>",1639596779.0,,False,hoolfcz,False,t3_rdxh6q,t3_rdxh6q,/r/Cplusplus/comments/rdxh6q/c_books/hoolfcz/,0,False,1,False,rdxh6q,Cplusplus,t5_2qh6x
612,0raymondjiang0,Thank you for sharing.,"<div class=""md""><p>Thank you for sharing.</p>
</div>",1639224145.0,,False,ho41oqu,False,t3_rdxh6q,t1_ho3xado,/r/Cplusplus/comments/rdxh6q/c_books/ho41oqu/,0,False,2,False,rdxh6q,Cplusplus,t5_2qh6x
613,,this book is only c++ 11 (C++ Primer 5th Edition ) but its great for core language knowledge. It's  my favorite book on c++ so far.  I wish they made an updated 2022 version I would buy it in a heartbeat.,"<div class=""md""><p>this book is only c++ 11 (C++ Primer 5th Edition ) but its great for core language knowledge. It&#39;s  my favorite book on c++ so far.  I wish they made an updated 2022 version I would buy it in a heartbeat.</p>
</div>",1639266945.0,,1639267395.0,ho6m4g4,False,t3_rdxh6q,t1_ho4f5ac,/r/Cplusplus/comments/rdxh6q/c_books/ho6m4g4/,0,False,5,False,rdxh6q,Cplusplus,t5_2qh6x
614,FieldLine,"Not exactly open source, but physicists at universities are desperate for people who know how to code. If you send an email (or, better yet, show up in person) to the physics department at whatever local university and tell them you want to code their software simulations, I have no doubt they will have work for you.

Be warned: it's not glamorous, it doesn't pay much, it won't help you get better at writing software (since most physicists in academia don't know much about good software practices), and the project you're on will likely be low impact, as most modern research is.

You can easily get your name on a publication though, which is good if you're looking to break into the academic circle-jerk.","<div class=""md""><p>Not exactly open source, but physicists at universities are desperate for people who know how to code. If you send an email (or, better yet, show up in person) to the physics department at whatever local university and tell them you want to code their software simulations, I have no doubt they will have work for you.</p>

<p>Be warned: it&#39;s not glamorous, it doesn&#39;t pay much, it won&#39;t help you get better at writing software (since most physicists in academia don&#39;t know much about good software practices), and the project you&#39;re on will likely be low impact, as most modern research is.</p>

<p>You can easily get your name on a publication though, which is good if you&#39;re looking to break into the academic circle-jerk.</p>
</div>",1559830607.0,,False,eq6k5te,False,t3_bxa5gx,t3_bxa5gx,/r/Cplusplus/comments/bxa5gx/physics_astronomy_projects_to_contribute_to/eq6k5te/,0,False,4,False,bxa5gx,Cplusplus,t5_2qh6x
615,Baxapaf,"Look into [BOINC](https://boinc.berkeley.edu/), if you haven't already.","<div class=""md""><p>Look into <a href=""https://boinc.berkeley.edu/"">BOINC</a>, if you haven&#39;t already.</p>
</div>",1559852027.0,,False,eq7rn69,False,t3_bxa5gx,t3_bxa5gx,/r/Cplusplus/comments/bxa5gx/physics_astronomy_projects_to_contribute_to/eq7rn69/,0,False,3,False,bxa5gx,Cplusplus,t5_2qh6x
616,carcamov,"Please feel free to see: [https://github.com/miguelcarcamov/gpuvmem](https://github.com/miguelcarcamov/gpuvmem)

We are developing a framework for image reconstruction in radio astronomy.","<div class=""md""><p>Please feel free to see: <a href=""https://github.com/miguelcarcamov/gpuvmem"">https://github.com/miguelcarcamov/gpuvmem</a></p>

<p>We are developing a framework for image reconstruction in radio astronomy.</p>
</div>",1562324550.0,,False,esx2tnn,False,t3_bxa5gx,t3_bxa5gx,/r/Cplusplus/comments/bxa5gx/physics_astronomy_projects_to_contribute_to/esx2tnn/,0,False,1,False,bxa5gx,Cplusplus,t5_2qh6x
617,StringUseful3395,Here for the books,"<div class=""md""><p>Here for the books</p>
</div>",1661318130.0,,False,ilk31uz,False,t3_wwa67s,t3_wwa67s,/r/Cplusplus/comments/wwa67s/c_projects_book/ilk31uz/,0,False,10,False,wwa67s,Cplusplus,t5_2qh6x
618,Legitamante,"Its not a book but you could try the ""Build your own x"" repository on github. It has a ton of cool and unique projects in many languages.","<div class=""md""><p>Its not a book but you could try the &quot;Build your own x&quot; repository on github. It has a ton of cool and unique projects in many languages.</p>
</div>",1661350322.0,,False,illhddz,False,t3_wwa67s,t3_wwa67s,/r/Cplusplus/comments/wwa67s/c_projects_book/illhddz/,0,False,6,False,wwa67s,Cplusplus,t5_2qh6x
619,SocksOnHands,"Why not implement there Python projects in C++? I looked over the table of contents, and it didn't look like there was anything that would be significantly more difficult to do in C++ than in Python.","<div class=""md""><p>Why not implement there Python projects in C++? I looked over the table of contents, and it didn&#39;t look like there was anything that would be significantly more difficult to do in C++ than in Python.</p>
</div>",1661345209.0,,False,ill5ofp,False,t3_wwa67s,t3_wwa67s,/r/Cplusplus/comments/wwa67s/c_projects_book/ill5ofp/,1,False,4,False,wwa67s,Cplusplus,t5_2qh6x
620,Pink_Slyvie,"I'm going to ask the same generic question I always ask.   


Why C++ ?","<div class=""md""><p>I&#39;m going to ask the same generic question I always ask.   </p>

<p>Why C++ ?</p>
</div>",1661362825.0,,False,ilmdum6,False,t3_wwa67s,t3_wwa67s,/r/Cplusplus/comments/wwa67s/c_projects_book/ilmdum6/,2,False,0,False,wwa67s,Cplusplus,t5_2qh6x
621,Mikeylikesit123,"I think that is a great idea and think I will try that. I guess I am a bit wary of implementing stuff that accomplishes those  projects in c++ but does so in unsafe or inefficient ways. Some mild guard rails or guidance specifically with this language in mind would be cool.  But hey, I guess everybody has to learn what was unsafe, disorganized or inefficient at some point right?","<div class=""md""><p>I think that is a great idea and think I will try that. I guess I am a bit wary of implementing stuff that accomplishes those  projects in c++ but does so in unsafe or inefficient ways. Some mild guard rails or guidance specifically with this language in mind would be cool.  But hey, I guess everybody has to learn what was unsafe, disorganized or inefficient at some point right?</p>
</div>",1661364768.0,,False,ilmj0p4,True,t3_wwa67s,t1_ill5ofp,/r/Cplusplus/comments/wwa67s/c_projects_book/ilmj0p4/,1,False,1,False,wwa67s,Cplusplus,t5_2qh6x
622,Mikeylikesit123,"My work uses it and I want to improve. We have a large complex project that can be hard to learn from. I’m not a complete beginner with c++ but feel I’ll learn better in the context of smaller scope projects. I would like the experience of “Oh this would be a really good opportunity to use a delegate event system because I remember running into a similar need when I made project x.” Or specific, practical use cases of certain tools in the STL. I’ve learned about some of them, but always in isolated, shallow, independent contexts within a c++ intro text","<div class=""md""><p>My work uses it and I want to improve. We have a large complex project that can be hard to learn from. I’m not a complete beginner with c++ but feel I’ll learn better in the context of smaller scope projects. I would like the experience of “Oh this would be a really good opportunity to use a delegate event system because I remember running into a similar need when I made project x.” Or specific, practical use cases of certain tools in the STL. I’ve learned about some of them, but always in isolated, shallow, independent contexts within a c++ intro text</p>
</div>",1661364154.0,,False,ilmhf8m,True,t3_wwa67s,t1_ilmdum6,/r/Cplusplus/comments/wwa67s/c_projects_book/ilmhf8m/,1,False,5,False,wwa67s,Cplusplus,t5_2qh6x
623,Middlewarian,"C++ is an important language in scientific areas, taking bites out of Fortran over the years.  A lot of people are working on improving C++... I'm developing an on-line code generator.  To the best of my knowledge Rusty doesn't have anything in this area.","<div class=""md""><p>C++ is an important language in scientific areas, taking bites out of Fortran over the years.  A lot of people are working on improving C++... I&#39;m developing an on-line code generator.  To the best of my knowledge Rusty doesn&#39;t have anything in this area.</p>
</div>",1661470529.0,,False,ilsvrlw,False,t3_wwa67s,t1_ilmdum6,/r/Cplusplus/comments/wwa67s/c_projects_book/ilsvrlw/,0,False,2,False,wwa67s,Cplusplus,t5_2qh6x
624,SocksOnHands,"If you are just starting out, don't worry too much about efficiency or doing something in an unsafe way. These are not commercial products used by millions of people -- they're practice projects. I guarantee you will do things the wrong way because every programming had when they were starting to figure things out (and often continue doing many things the wrong way after becoming a ""professional"").","<div class=""md""><p>If you are just starting out, don&#39;t worry too much about efficiency or doing something in an unsafe way. These are not commercial products used by millions of people -- they&#39;re practice projects. I guarantee you will do things the wrong way because every programming had when they were starting to figure things out (and often continue doing many things the wrong way after becoming a &quot;professional&quot;).</p>
</div>",1661366598.0,,False,ilmnucg,False,t3_wwa67s,t1_ilmj0p4,/r/Cplusplus/comments/wwa67s/c_projects_book/ilmnucg/,0,False,2,False,wwa67s,Cplusplus,t5_2qh6x
625,Pink_Slyvie,"Totally fair answer!  A lot of people jump into c++ for bad reasons, which is why I ask.","<div class=""md""><p>Totally fair answer!  A lot of people jump into c++ for bad reasons, which is why I ask.</p>
</div>",1661364245.0,,False,ilmhnws,False,t3_wwa67s,t1_ilmhf8m,/r/Cplusplus/comments/wwa67s/c_projects_book/ilmhnws/,2,False,1,False,wwa67s,Cplusplus,t5_2qh6x
626,Mikeylikesit123,I also just think it’s so interesting. I love love some python but am enjoying learning what is going on at a lower level with c++!,"<div class=""md""><p>I also just think it’s so interesting. I love love some python but am enjoying learning what is going on at a lower level with c++!</p>
</div>",1661364386.0,,False,ilmi0zh,True,t3_wwa67s,t1_ilmhnws,/r/Cplusplus/comments/wwa67s/c_projects_book/ilmi0zh/,0,False,2,False,wwa67s,Cplusplus,t5_2qh6x
627,Pink_Slyvie,I personally just go to rust now if I need anything that  python isn't sufficient for.,"<div class=""md""><p>I personally just go to rust now if I need anything that  python isn&#39;t sufficient for.</p>
</div>",1661364420.0,,False,ilmi48r,False,t3_wwa67s,t1_ilmhnws,/r/Cplusplus/comments/wwa67s/c_projects_book/ilmi48r/,0,False,1,False,wwa67s,Cplusplus,t5_2qh6x
628,TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/computerscience] [50+ problems & solutions to DataStructures in C++ with Diagrams Explained in an easy way](https://www.reddit.com/r/computerscience/comments/7ws48e/50_problems_solutions_to_datastructures_in_c_with/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*","<div class=""md""><p>I&#39;m a bot, <em>bleep</em>, <em>bloop</em>. Someone has linked to this thread from another place on reddit:</p>

<ul>
<li>[<a href=""/r/computerscience"">/r/computerscience</a>] <a href=""https://www.reddit.com/r/computerscience/comments/7ws48e/50_problems_solutions_to_datastructures_in_c_with/"">50+ problems &amp; solutions to DataStructures in C++ with Diagrams Explained in an easy way</a></li>
</ul>

<p>&nbsp;<em><sup>If you follow any of the above links, please respect the rules of reddit and don&#39;t vote in the other threads.</sup> <sup>(<a href=""/r/TotesMessenger"">Info</a></sup> <sup>/</sup> <sup><a href=""/message/compose?to=/r/TotesMessenger"">Contact</a>)</sup></em></p>
</div>",1518344954.0,,False,du2qyl9,False,t3_7wrxg1,t3_7wrxg1,/r/Cplusplus/comments/7wrxg1/50_problems_solutions_to_datastructures_in_c_with/du2qyl9/,0,False,1,False,7wrxg1,Cplusplus,t5_2qh6x
629,deadcoder0904,"I have cross-posted it in a lot of subreddits like 4-5 but an important explanation is given in /r/programming & as this is a subreddit where you guys do C++ so [here is an important thread, the top one which explains why not to do what I've done or most people do](https://www.reddit.com/r/programming/comments/7ws1ej/50_problems_solutions_to_datastructures_in_c_with/)","<div class=""md""><p>I have cross-posted it in a lot of subreddits like 4-5 but an important explanation is given in <a href=""/r/programming"">/r/programming</a> &amp; as this is a subreddit where you guys do C++ so <a href=""https://www.reddit.com/r/programming/comments/7ws1ej/50_problems_solutions_to_datastructures_in_c_with/"">here is an important thread, the top one which explains why not to do what I&#39;ve done or most people do</a></p>
</div>",1518355881.0,,False,du2v6zx,True,t3_7wrxg1,t3_7wrxg1,/r/Cplusplus/comments/7wrxg1/50_problems_solutions_to_datastructures_in_c_with/du2v6zx/,0,False,1,False,7wrxg1,Cplusplus,t5_2qh6x
630,thisisbasil,"I'd say it's more like ""lots of questions about linked lists"" and not a generic data structures thing.","<div class=""md""><p>I&#39;d say it&#39;s more like &quot;lots of questions about linked lists&quot; and not a generic data structures thing.</p>
</div>",1518676865.0,,False,du9y3yj,False,t3_7wrxg1,t3_7wrxg1,/r/Cplusplus/comments/7wrxg1/50_problems_solutions_to_datastructures_in_c_with/du9y3yj/,1,False,1,False,7wrxg1,Cplusplus,t5_2qh6x
631,deadcoder0904,"Aah yes. I actually was gonna do all things started from Linked Lists then went onto Arrays. Next was Stack, Queue, BST & all but lost motivation. I had to read ANKI cards daily of the previously done problems so it took up my time. Sorry for it being clickbaity though. I thought it should match the site name.","<div class=""md""><p>Aah yes. I actually was gonna do all things started from Linked Lists then went onto Arrays. Next was Stack, Queue, BST &amp; all but lost motivation. I had to read ANKI cards daily of the previously done problems so it took up my time. Sorry for it being clickbaity though. I thought it should match the site name.</p>
</div>",1518688345.0,,False,dua2ssu,True,t3_7wrxg1,t1_du9y3yj,/r/Cplusplus/comments/7wrxg1/50_problems_solutions_to_datastructures_in_c_with/dua2ssu/,0,False,1,False,7wrxg1,Cplusplus,t5_2qh6x
632,lukajda33,"[std::getline](https://en.cppreference.com/w/cpp/string/basic_string/getline) should be found in <string> library, try to add

`#include<string>`, which you should add anyway as you are using std::string. The reason why you can use std::string without including <string> is that there is some dependancy chain and the std::string is probably included in <iostream>, but you should not realy on that.","<div class=""md""><p><a href=""https://en.cppreference.com/w/cpp/string/basic_string/getline"">std::getline</a> should be found in &lt;string&gt; library, try to add</p>

<p><code>#include&lt;string&gt;</code>, which you should add anyway as you are using std::string. The reason why you can use std::string without including &lt;string&gt; is that there is some dependancy chain and the std::string is probably included in &lt;iostream&gt;, but you should not realy on that.</p>
</div>",1641226691.0,,False,hr35l5y,False,t3_rv2px3,t3_rv2px3,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr35l5y/,1,False,35,False,rv2px3,Cplusplus,t5_2qh6x
633,twistedrapier,"It's not because of your IDE.  The `getline` method he is using is `std::getline` (see [here](https://www.cplusplus.com/reference/string/string/getline/) for details), not `std::istream::getline`.  The reason he is able to skip the prepending `std::` for the `getline` (along with the `string` and `cout` uses) is because he would have a `using namespace std;` above his `main` block or in the header file.

Oh, and since you are new to this, a little advice to save a lot of headaches with namespace clashes in the future, try to avoid broad `using namespace` statements in real programs.  Full declarations of your namespacing may be a tad tedious, but the person who comes back to maintain your code will thank you for it when they don't have to guess at the function being called.","<div class=""md""><p>It&#39;s not because of your IDE.  The <code>getline</code> method he is using is <code>std::getline</code> (see <a href=""https://www.cplusplus.com/reference/string/string/getline/"">here</a> for details), not <code>std::istream::getline</code>.  The reason he is able to skip the prepending <code>std::</code> for the <code>getline</code> (along with the <code>string</code> and <code>cout</code> uses) is because he would have a <code>using namespace std;</code> above his <code>main</code> block or in the header file.</p>

<p>Oh, and since you are new to this, a little advice to save a lot of headaches with namespace clashes in the future, try to avoid broad <code>using namespace</code> statements in real programs.  Full declarations of your namespacing may be a tad tedious, but the person who comes back to maintain your code will thank you for it when they don&#39;t have to guess at the function being called.</p>
</div>",1641227527.0,,False,hr37q0q,False,t3_rv2px3,t3_rv2px3,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr37q0q/,3,False,31,False,rv2px3,Cplusplus,t5_2qh6x
634,Iron-Rat,Put “using namespace std;” at the top of your file below your included libraries,"<div class=""md""><p>Put “using namespace std;” at the top of your file below your included libraries</p>
</div>",1641245166.0,,False,hr4iykh,False,t3_rv2px3,t3_rv2px3,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr4iykh/,1,False,7,False,rv2px3,Cplusplus,t5_2qh6x
635,Nielscorn,"In a tutorial he should NOT be doing this.
He is probably, at the top of the code/file, doing “using namespace std”.

It’s a bad habit and can lead to errors or unintended conflicts between namespaces.
Do not do it like this, constantly use std::cout for example.
Especially in a tutorial he should not be using it like this","<div class=""md""><p>In a tutorial he should NOT be doing this.
He is probably, at the top of the code/file, doing “using namespace std”.</p>

<p>It’s a bad habit and can lead to errors or unintended conflicts between namespaces.
Do not do it like this, constantly use std::cout for example.
Especially in a tutorial he should not be using it like this</p>
</div>",1641238128.0,,False,hr40dgh,False,t3_rv2px3,t3_rv2px3,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr40dgh/,1,False,7,False,rv2px3,Cplusplus,t5_2qh6x
636,unleashedcode,"twisteddeapier above is correct. Just writing to emphasise what he mentioned above, that although using namespace's is not incorrect.... it does make code harder to read for others and yourself further down the road.  Best practice is to use full declarations.","<div class=""md""><p>twisteddeapier above is correct. Just writing to emphasise what he mentioned above, that although using namespace&#39;s is not incorrect.... it does make code harder to read for others and yourself further down the road.  Best practice is to use full declarations.</p>
</div>",1641229299.0,,False,hr3cd2s,False,t3_rv2px3,t3_rv2px3,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr3cd2s/,0,False,2,False,rv2px3,Cplusplus,t5_2qh6x
637,atrealleadslinger101,Fstream,"<div class=""md""><p>Fstream</p>
</div>",1641241399.0,,False,hr494pn,False,t3_rv2px3,t3_rv2px3,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr494pn/,0,False,1,False,rv2px3,Cplusplus,t5_2qh6x
638,atrealleadslinger101,"Using name space std and or just include, using std:: getline","<div class=""md""><p>Using name space std and or just include, using std:: getline</p>
</div>",1641241356.0,,False,hr490gf,False,t3_rv2px3,t3_rv2px3,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr490gf/,0,False,0,False,rv2px3,Cplusplus,t5_2qh6x
639,bogfoot94,"Use the ""std::"" prefix.","<div class=""md""><p>Use the &quot;std::&quot; prefix.</p>
</div>",1641230711.0,,False,hr3g4i1,False,t3_rv2px3,t3_rv2px3,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr3g4i1/,0,False,-1,False,rv2px3,Cplusplus,t5_2qh6x
640,CorysInTheHouse69,Your IDE has zero affect on your code,"<div class=""md""><p>Your IDE has zero affect on your code</p>
</div>",1641232498.0,,False,hr3kyuc,False,t3_rv2px3,t3_rv2px3,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr3kyuc/,0,False,-2,False,rv2px3,Cplusplus,t5_2qh6x
641,Dogterte,"Kinda off topic, who is that guy again? Or his channel?","<div class=""md""><p>Kinda off topic, who is that guy again? Or his channel?</p>
</div>",1641235435.0,,False,hr3t0fs,False,t3_rv2px3,t3_rv2px3,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr3t0fs/,1,False,1,False,rv2px3,Cplusplus,t5_2qh6x
642,__secretservice__,"Okk, thank you soo much!!","<div class=""md""><p>Okk, thank you soo much!!</p>
</div>",1641322789.0,,False,hr8xftx,True,t3_rv2px3,t1_hr35l5y,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr8xftx/,0,False,1,False,rv2px3,Cplusplus,t5_2qh6x
643,425_Too_Early,Yeah I totally agree with that! ` using namespace ` Should be avoided!,"<div class=""md""><p>Yeah I totally agree with that! <code>using namespace</code> Should be avoided!</p>
</div>",1641245282.0,,1641245551.0,hr4j9ds,False,t3_rv2px3,t1_hr37q0q,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr4j9ds/,0,False,9,False,rv2px3,Cplusplus,t5_2qh6x
644,ujustdontgetdubstep,"Good comment. 

Although I really disagree with the ""avoid using namespace"" advice, but I can see how it could be confusing to people in some cases (embedded developers with a lot of third party namespaces maybe?) . Modern IDEs should all together mitigate this confusion and the using directive will make your code more readable.","<div class=""md""><p>Good comment. </p>

<p>Although I really disagree with the &quot;avoid using namespace&quot; advice, but I can see how it could be confusing to people in some cases (embedded developers with a lot of third party namespaces maybe?) . Modern IDEs should all together mitigate this confusion and the using directive will make your code more readable.</p>
</div>",1641276036.0,,False,hr6ip1f,False,t3_rv2px3,t1_hr37q0q,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr6ip1f/,0,False,1,False,rv2px3,Cplusplus,t5_2qh6x
645,Cold_Night_Fever,Can't the IDE inform us which namespace's function is being called?,"<div class=""md""><p>Can&#39;t the IDE inform us which namespace&#39;s function is being called?</p>
</div>",1641258529.0,,False,hr5g151,False,t3_rv2px3,t1_hr37q0q,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr5g151/,0,False,1,False,rv2px3,Cplusplus,t5_2qh6x
646,,"or rather, that's what he did, but it is worth emphasizing that is usually considered bad practice.","<div class=""md""><p>or rather, that&#39;s what he did, but it is worth emphasizing that is usually considered bad practice.</p>
</div>",1641259611.0,,False,hr5imag,False,t3_rv2px3,t1_hr4iykh,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr5imag/,0,False,4,False,rv2px3,Cplusplus,t5_2qh6x
647,DiaperBatteries,"I’m not sure I agree that beginners shouldn’t be using `using namespace std`.

C++ has been my favorite language for 8 years but I remember initially disliking it because I was a slow typer at the time and hated all the  `std::`s everywhere. After all, who wants to get intimate with something riddled with STDs?

Beginners who don’t understand namespaces  do not (hopefully) work on projects where conflicts will occur. When just getting started with C++ and getting a feel for it, I think it’s harmless to simplify things. 

OP’s question is a unique case where two bad practices combine to cause issues. But that doesn’t mean they urgently need to immediate correct both issues. A simple, response of “`getline` is defined in <string>, so include that” would suffice.

I can’t imagine how it’s habit forming. As you keep learning more about the language, with proper resources and guidance you’ll naturally discover and correct your bad practices. Without proper resources and guidance, you’ll give up on the language or stagnate.

**TL;DR: C++ does not need more barriers to entry. In my mind, the more people who get interested in it the better.**","<div class=""md""><p>I’m not sure I agree that beginners shouldn’t be using <code>using namespace std</code>.</p>

<p>C++ has been my favorite language for 8 years but I remember initially disliking it because I was a slow typer at the time and hated all the  <code>std::</code>s everywhere. After all, who wants to get intimate with something riddled with STDs?</p>

<p>Beginners who don’t understand namespaces  do not (hopefully) work on projects where conflicts will occur. When just getting started with C++ and getting a feel for it, I think it’s harmless to simplify things. </p>

<p>OP’s question is a unique case where two bad practices combine to cause issues. But that doesn’t mean they urgently need to immediate correct both issues. A simple, response of “<code>getline</code> is defined in &lt;string&gt;, so include that” would suffice.</p>

<p>I can’t imagine how it’s habit forming. As you keep learning more about the language, with proper resources and guidance you’ll naturally discover and correct your bad practices. Without proper resources and guidance, you’ll give up on the language or stagnate.</p>

<p><strong>TL;DR: C++ does not need more barriers to entry. In my mind, the more people who get interested in it the better.</strong></p>
</div>",1641281157.0,,False,hr6qj9j,False,t3_rv2px3,t1_hr40dgh,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr6qj9j/,1,False,4,False,rv2px3,Cplusplus,t5_2qh6x
648,__secretservice__,"Idk about the guy, but the video is on the channel ""freeCodeCamp.org"" on youtube","<div class=""md""><p>Idk about the guy, but the video is on the channel &quot;freeCodeCamp.org&quot; on youtube</p>
</div>",1641322704.0,,False,hr8x7rm,True,t3_rv2px3,t1_hr3t0fs,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr8x7rm/,0,False,1,False,rv2px3,Cplusplus,t5_2qh6x
649,Nielscorn,"I suppose, I understand where you're coming from.
I suppose the middle ground here would be:
The tutorial should have explicitly stated why he is not using std:: everywhere as he is doing using namespace std; in the beginning.

Explaining to the beginner, watching the tutorial, that there are multiple ways of doing things.

Could you agree with this?","<div class=""md""><p>I suppose, I understand where you&#39;re coming from.
I suppose the middle ground here would be:
The tutorial should have explicitly stated why he is not using std:: everywhere as he is doing using namespace std; in the beginning.</p>

<p>Explaining to the beginner, watching the tutorial, that there are multiple ways of doing things.</p>

<p>Could you agree with this?</p>
</div>",1641281281.0,,False,hr6qpl0,False,t3_rv2px3,t1_hr6qj9j,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr6qpl0/,1,False,4,False,rv2px3,Cplusplus,t5_2qh6x
650,DiaperBatteries,"I absolutely agree with that!

I haven’t watched the video in the OP, but if anyone writes `using namespace std;` in a tutorial, they absolutely should state that it’s a shortcut that shouldn’t be blindly used in larger projects, even if they don’t go into detail for the sake of simplicity.","<div class=""md""><p>I absolutely agree with that!</p>

<p>I haven’t watched the video in the OP, but if anyone writes <code>using namespace std;</code> in a tutorial, they absolutely should state that it’s a shortcut that shouldn’t be blindly used in larger projects, even if they don’t go into detail for the sake of simplicity.</p>
</div>",1641281607.0,,False,hr6r5tx,False,t3_rv2px3,t1_hr6qpl0,/r/Cplusplus/comments/rv2px3/i_was_following_this_tutorial_on_youtube_to_learn/hr6r5tx/,0,False,2,False,rv2px3,Cplusplus,t5_2qh6x
651,low_ram_2,"Maybe some trickery can be used in competetive Programming, although since input cannot be passed so is kinda impossible, but maybe some way can be thought out.

Since online judges only account for running time, not compile time.","<div class=""md""><p>Maybe some trickery can be used in competetive Programming, although since input cannot be passed so is kinda impossible, but maybe some way can be thought out.</p>

<p>Since online judges only account for running time, not compile time.</p>
</div>",1625822331.0,,False,h4kn5qb,False,t3_ogng12,t3_ogng12,/r/Cplusplus/comments/ogng12/my_brother_and_i_created_a_monster/h4kn5qb/,0,False,5,False,ogng12,Cplusplus,t5_2qh6x
652,ventus1b,"There is no `while (…) do { … }` loop, just a `while () {}`. 

Also, why is `new/delete` apparently still taught but no mention of `vector` or `unique_ptr/shared_ptr`?","<div class=""md""><p>There is no <code>while (…) do { … }</code> loop, just a <code>while () {}</code>. </p>

<p>Also, why is <code>new/delete</code> apparently still taught but no mention of <code>vector</code> or <code>unique_ptr/shared_ptr</code>?</p>
</div>",1687415956.0,,False,jp29pjs,False,t3_14fnr7b,t3_14fnr7b,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp29pjs/,1,False,9,False,14fnr7b,Cplusplus,t5_2qh6x
653,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1687462070.0,,False,jp4pb9s,False,t3_14fnr7b,t3_14fnr7b,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp4pb9s/,0,False,4,False,14fnr7b,Cplusplus,t5_2qh6x
654,ujustdontgetdubstep,"beginner mind map:

- how do I link libraries

- why do I have a memory leak


expert mind map:

- how do I link libraries on that other platform

- why do I have a memory leak","<div class=""md""><p>beginner mind map:</p>

<ul>
<li><p>how do I link libraries</p></li>
<li><p>why do I have a memory leak</p></li>
</ul>

<p>expert mind map:</p>

<ul>
<li><p>how do I link libraries on that other platform</p></li>
<li><p>why do I have a memory leak</p></li>
</ul>
</div>",1687477377.0,,False,jp5pxdt,False,t3_14fnr7b,t3_14fnr7b,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp5pxdt/,0,False,5,False,14fnr7b,Cplusplus,t5_2qh6x
655,shoegvze,Once I learn this what am I ready to do next?,"<div class=""md""><p>Once I learn this what am I ready to do next?</p>
</div>",1687414049.0,,False,jp275n4,False,t3_14fnr7b,t3_14fnr7b,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp275n4/,2,False,2,False,14fnr7b,Cplusplus,t5_2qh6x
656,dingF,"Hey OP, may I check what app you use to build this knowledge graph? It’s awesome!","<div class=""md""><p>Hey OP, may I check what app you use to build this knowledge graph? It’s awesome!</p>
</div>",1688468650.0,,False,jqmauzp,False,t3_14fnr7b,t3_14fnr7b,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jqmauzp/,1,False,2,False,14fnr7b,Cplusplus,t5_2qh6x
657,EffectiveMost9663,"Edit: this was not originally designed to be shared so when I wrote double x:prices it’s something I understand but possibly not others 
Double is the variable type and prices is the name (I think I was remembering about a flash card I wrote with a list of shopping items’ prices)","<div class=""md""><p>Edit: this was not originally designed to be shared so when I wrote double x:prices it’s something I understand but possibly not others 
Double is the variable type and prices is the name (I think I was remembering about a flash card I wrote with a list of shopping items’ prices)</p>
</div>",1687395900.0,,False,jp1b04m,True,t3_14fnr7b,t3_14fnr7b,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp1b04m/,1,False,1,False,14fnr7b,Cplusplus,t5_2qh6x
658,21Shells,"Oh boy I cant wait to learn all of this stuff 😨
im gonna keep making mistakes then look up the solution on Stack Overflow. Certainly a lot to learn coming from Python, but I find the process of just figuring out how something works after 5 hours enjoyable enough that this might even be more fun…?","<div class=""md""><p>Oh boy I cant wait to learn all of this stuff 😨
im gonna keep making mistakes then look up the solution on Stack Overflow. Certainly a lot to learn coming from Python, but I find the process of just figuring out how something works after 5 hours enjoyable enough that this might even be more fun…?</p>
</div>",1689441726.0,,False,js367bh,False,t3_14fnr7b,t3_14fnr7b,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/js367bh/,0,False,1,False,14fnr7b,Cplusplus,t5_2qh6x
659,EffectiveMost9663,"You're right, think I mixed the do{} while with while(){}, possibly because I wrote them on the same line

I haven’t learnt vectors or unique_ptr/shared_ptr yet

I have looked a little at pointers but don't really understand them yet
Also don't understand memory very well but thought I'd add it so if I look later it will remind me to go over that topic
(I'm very early on in my journey : ) but thought I'd share this anyway)","<div class=""md""><p>You&#39;re right, think I mixed the do{} while with while(){}, possibly because I wrote them on the same line</p>

<p>I haven’t learnt vectors or unique_ptr/shared_ptr yet</p>

<p>I have looked a little at pointers but don&#39;t really understand them yet
Also don&#39;t understand memory very well but thought I&#39;d add it so if I look later it will remind me to go over that topic
(I&#39;m very early on in my journey : ) but thought I&#39;d share this anyway)</p>
</div>",1687425979.0,,1687546896.0,jp2lqt8,True,t3_14fnr7b,t1_jp29pjs,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp2lqt8/,0,False,0,False,14fnr7b,Cplusplus,t5_2qh6x
660,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1687462405.0,,False,jp4q600,False,t3_14fnr7b,t1_jp275n4,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp4q600/,2,False,5,False,14fnr7b,Cplusplus,t5_2qh6x
661,EffectiveMost9663,"I'm not sure, I'm very new myself

Thought I'd write down what I've learnt to remind myself and shared it because why not

Possibly I'd recommend using SoloLearn (which is mainly what I've used), code academy or using YouTube

I found this website like last night which I think has some C++ (and other languages) tutorials too: [https://www.freecodecamp.org/news/search?query=C++](https://www.freecodecamp.org/news/search?query=C++)","<div class=""md""><p>I&#39;m not sure, I&#39;m very new myself</p>

<p>Thought I&#39;d write down what I&#39;ve learnt to remind myself and shared it because why not</p>

<p>Possibly I&#39;d recommend using SoloLearn (which is mainly what I&#39;ve used), code academy or using YouTube</p>

<p>I found this website like last night which I think has some C++ (and other languages) tutorials too: <a href=""https://www.freecodecamp.org/news/search?query=C++"">https://www.freecodecamp.org/news/search?query=C++</a></p>
</div>",1687461770.0,,False,jp4ojln,True,t3_14fnr7b,t1_jp275n4,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp4ojln/,2,False,1,False,14fnr7b,Cplusplus,t5_2qh6x
662,EffectiveMost9663,"Thank you!

I used PowerPoint

I imagine there are apps specifically for this kind of thing but I love Microsoft Office for studying

I guess it's partially nostalgia","<div class=""md""><p>Thank you!</p>

<p>I used PowerPoint</p>

<p>I imagine there are apps specifically for this kind of thing but I love Microsoft Office for studying</p>

<p>I guess it&#39;s partially nostalgia</p>
</div>",1688473855.0,,False,jqmiubd,True,t3_14fnr7b,t1_jqmauzp,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jqmiubd/,1,False,2,False,14fnr7b,Cplusplus,t5_2qh6x
663,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1687461893.0,,False,jp4ouze,False,t3_14fnr7b,t1_jp1b04m,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp4ouze/,1,False,2,False,14fnr7b,Cplusplus,t5_2qh6x
664,EffectiveMost9663,Thank you,"<div class=""md""><p>Thank you</p>
</div>",1687463449.0,,False,jp4suld,True,t3_14fnr7b,t1_jp4q600,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp4suld/,1,False,2,False,14fnr7b,Cplusplus,t5_2qh6x
665,shoegvze,Thank you !,"<div class=""md""><p>Thank you !</p>
</div>",1687477659.0,,False,jp5qiu2,False,t3_14fnr7b,t1_jp4q600,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp5qiu2/,0,False,1,False,14fnr7b,Cplusplus,t5_2qh6x
666,,[removed],"<div class=""md""><p>[removed]</p>
</div>",1687462680.0,,False,jp4qvc6,False,t3_14fnr7b,t1_jp4ojln,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp4qvc6/,1,False,1,False,14fnr7b,Cplusplus,t5_2qh6x
667,One_Worldliness_1130,"i think learnt is learned

and tbh in my learning i find code tech tutorials is good 

and books i know basics but not the loops and stuff yet i have learned a little of them 

and also putting it all together is a bit hard and learning all the calling stuff hope you can learn c++ keep it up","<div class=""md""><p>i think learnt is learned</p>

<p>and tbh in my learning i find code tech tutorials is good </p>

<p>and books i know basics but not the loops and stuff yet i have learned a little of them </p>

<p>and also putting it all together is a bit hard and learning all the calling stuff hope you can learn c++ keep it up</p>
</div>",1687637742.0,,False,jpdyl4l,False,t3_14fnr7b,t1_jp4ojln,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jpdyl4l/,0,False,1,False,14fnr7b,Cplusplus,t5_2qh6x
668,dingF,so classical lol,"<div class=""md""><p>so classical lol</p>
</div>",1688480468.0,,False,jqmw1h1,False,t3_14fnr7b,t1_jqmiubd,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jqmw1h1/,1,False,2,False,14fnr7b,Cplusplus,t5_2qh6x
669,EffectiveMost9663,"Yes, it is an array

Not sure what a vector is, not learnt that yet","<div class=""md""><p>Yes, it is an array</p>

<p>Not sure what a vector is, not learnt that yet</p>
</div>",1687463397.0,,False,jp4spog,True,t3_14fnr7b,t1_jp4ouze,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp4spog/,1,False,1,False,14fnr7b,Cplusplus,t5_2qh6x
670,hugbunter47,hey op do you remember what he said ? i'm the same boat,"<div class=""md""><p>hey op do you remember what he said ? i&#39;m the same boat</p>
</div>",1689913496.0,,False,jstqo9g,False,t3_14fnr7b,t1_jp4suld,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jstqo9g/,1,False,1,False,14fnr7b,Cplusplus,t5_2qh6x
671,Cplusplus-ModTeam,"**Your submission has been removed.** This is because it was determined to be a nuisance and violated [Rule 1](https://www.reddit.com/r/Cplusplus/comments/122wnqy/rcplusplus_rule_updates/).

If you would like to discuss this action further or believe this removal was in error, please [message us through ModMail](https://www.reddit.com/message/compose?to=/r/Cplusplus).

~ CPlusPlus Moderation Team","<div class=""md""><p><strong>Your submission has been removed.</strong> This is because it was determined to be a nuisance and violated <a href=""https://www.reddit.com/r/Cplusplus/comments/122wnqy/rcplusplus_rule_updates/"">Rule 1</a>.</p>

<p>If you would like to discuss this action further or believe this removal was in error, please <a href=""https://www.reddit.com/message/compose?to=/r/Cplusplus"">message us through ModMail</a>.</p>

<p>~ CPlusPlus Moderation Team</p>
</div>",1687466752.0,moderator,False,jp51bsa,False,t3_14fnr7b,t1_jp4qvc6,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp51bsa/,0,False,1,False,14fnr7b,Cplusplus,t5_2qh6x
672,EffectiveMost9663,I am literally dinosaur,"<div class=""md""><p>I am literally dinosaur</p>
</div>",1688496386.0,,False,jqny0k4,True,t3_14fnr7b,t1_jqmw1h1,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jqny0k4/,0,False,1,False,14fnr7b,Cplusplus,t5_2qh6x
673,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1687464474.0,,False,jp4vi3j,False,t3_14fnr7b,t1_jp4spog,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp4vi3j/,1,False,3,False,14fnr7b,Cplusplus,t5_2qh6x
674,EffectiveMost9663,"I think it was to use this https://www.learncpp.com
and then something about github","<div class=""md""><p>I think it was to use this <a href=""https://www.learncpp.com"">https://www.learncpp.com</a>
and then something about github</p>
</div>",1689938770.0,,False,jsuppdw,True,t3_14fnr7b,t1_jstqo9g,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jsuppdw/,0,False,1,False,14fnr7b,Cplusplus,t5_2qh6x
675,EffectiveMost9663,"Really? I think I've learnt that a little then : D Didn't know it was called that

I'm mainly using SoloLearn, which is very basic

I plan to use more detailed websites later like code academy and learncpp, after getting an overview

SoloLearn is really fun but it seems to lack a lot of detail

Thank you for explaining!","<div class=""md""><p>Really? I think I&#39;ve learnt that a little then : D Didn&#39;t know it was called that</p>

<p>I&#39;m mainly using SoloLearn, which is very basic</p>

<p>I plan to use more detailed websites later like code academy and learncpp, after getting an overview</p>

<p>SoloLearn is really fun but it seems to lack a lot of detail</p>

<p>Thank you for explaining!</p>
</div>",1687466266.0,,False,jp502vr,True,t3_14fnr7b,t1_jp4vi3j,/r/Cplusplus/comments/14fnr7b/beginner_mindmap/jp502vr/,0,False,2,False,14fnr7b,Cplusplus,t5_2qh6x
676,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1544287738.0,,False,ebd4tqk,False,t3_a4af07,t3_a4af07,/r/Cplusplus/comments/a4af07/first_games_in_c_dungeons_and_flagons_update/ebd4tqk/,1,False,4,False,a4af07,Cplusplus,t5_2qh6x
677,,"This is really cool!

>Let me know if you have any questions!

What tools did you use to make this? :)

&#x200B;","<div class=""md""><p>This is really cool!</p>

<blockquote>
<p>Let me know if you have any questions!</p>
</blockquote>

<p>What tools did you use to make this? :)</p>

<p>&#x200B;</p>
</div>",1544314946.0,,False,ebe4rrg,False,t3_a4af07,t3_a4af07,/r/Cplusplus/comments/a4af07/first_games_in_c_dungeons_and_flagons_update/ebe4rrg/,2,False,2,False,a4af07,Cplusplus,t5_2qh6x
678,s0lly,"FYI my other comment:  this project just uses a simple gfx framework called the Chili framework which let's you push pixels to the screen in an easy way, but otherwise leaves all other programming to you. Great for learning how to program!","<div class=""md""><p>FYI my other comment:  this project just uses a simple gfx framework called the Chili framework which let&#39;s you push pixels to the screen in an easy way, but otherwise leaves all other programming to you. Great for learning how to program!</p>
</div>",1544471029.0,,False,ebijxmx,True,t3_a4af07,t1_ebd4tqk,/r/Cplusplus/comments/a4af07/first_games_in_c_dungeons_and_flagons_update/ebijxmx/,0,False,2,False,a4af07,Cplusplus,t5_2qh6x
679,ringmaster999,In the youtube  video description OP says they are using the Chili Framework. http://wiki.planetchili.net/index.php?title=Main_Page,"<div class=""md""><p>In the youtube  video description OP says they are using the Chili Framework. <a href=""http://wiki.planetchili.net/index.php?title=Main_Page"">http://wiki.planetchili.net/index.php?title=Main_Page</a></p>
</div>",1544320526.0,,False,ebebzw4,False,t3_a4af07,t1_ebe4rrg,/r/Cplusplus/comments/a4af07/first_games_in_c_dungeons_and_flagons_update/ebebzw4/,0,False,1,False,a4af07,Cplusplus,t5_2qh6x
680,s0lly,"Visual Studio 17!!
But really, as the other commenter mentioned, this project just uses a simple gfx framework called the Chili framework which let's you push pixels to the screen in an easy way, but otherwise leaves all other programming to you. Great for learning how to program!","<div class=""md""><p>Visual Studio 17!!
But really, as the other commenter mentioned, this project just uses a simple gfx framework called the Chili framework which let&#39;s you push pixels to the screen in an easy way, but otherwise leaves all other programming to you. Great for learning how to program!</p>
</div>",1544470785.0,,1544470971.0,ebijlhv,True,t3_a4af07,t1_ebe4rrg,/r/Cplusplus/comments/a4af07/first_games_in_c_dungeons_and_flagons_update/ebijlhv/,0,False,1,False,a4af07,Cplusplus,t5_2qh6x
681,panderingPenguin,"It's not really complicated enough to fill a whole book with useful info.  Sure, it's easy to screw up individual instances.  And if you want to do something complicated like write a custom allocator then it gets a little harder.  But for most purposes, the general idea is pretty simple.  Mostly, you just need to understand how to use the std::unique_ptr, std::shared_ptr, and occasionally std::weak_ptr classes, as well as std::make_unique and std::make_shared.  See documentation [here](https://en.cppreference.com/w/cpp/memory).  If you understand and correctly use those classes, that will do what you need the vast majority of the time.","<div class=""md""><p>It&#39;s not really complicated enough to fill a whole book with useful info.  Sure, it&#39;s easy to screw up individual instances.  And if you want to do something complicated like write a custom allocator then it gets a little harder.  But for most purposes, the general idea is pretty simple.  Mostly, you just need to understand how to use the std::unique_ptr, std::shared_ptr, and occasionally std::weak_ptr classes, as well as std::make_unique and std::make_shared.  See documentation <a href=""https://en.cppreference.com/w/cpp/memory"">here</a>.  If you understand and correctly use those classes, that will do what you need the vast majority of the time.</p>
</div>",1578793783.0,,False,fdzqyzz,False,t3_enfrsb,t3_enfrsb,/r/Cplusplus/comments/enfrsb/are_there_any_good_books_for_learning_memory/fdzqyzz/,0,False,7,False,enfrsb,Cplusplus,t5_2qh6x
682,IrgendeinName,"This conflicts with you 'not too technical' constraint because it talks a lot about hardware and very low level stuff, but for the future this might be interesting:

[What Every Programmer Should Know About Memory](https://people.freebsd.org/~lstewart/articles/cpumemory.pdf)","<div class=""md""><p>This conflicts with you &#39;not too technical&#39; constraint because it talks a lot about hardware and very low level stuff, but for the future this might be interesting:</p>

<p><a href=""https://people.freebsd.org/%7Elstewart/articles/cpumemory.pdf"">What Every Programmer Should Know About Memory</a></p>
</div>",1578795126.0,,False,fdzt1se,False,t3_enfrsb,t3_enfrsb,/r/Cplusplus/comments/enfrsb/are_there_any_good_books_for_learning_memory/fdzt1se/,1,False,7,False,enfrsb,Cplusplus,t5_2qh6x
683,NinjaFish63,this might be a bit much but you can use rust as memory management training wheels,"<div class=""md""><p>this might be a bit much but you can use rust as memory management training wheels</p>
</div>",1578799752.0,,False,fdzzx54,False,t3_enfrsb,t3_enfrsb,/r/Cplusplus/comments/enfrsb/are_there_any_good_books_for_learning_memory/fdzzx54/,0,False,1,False,enfrsb,Cplusplus,t5_2qh6x
684,seriousnotshirley,"Here’s the main idea you need to think about: which piece of code is responsible for a chunk of memory. As long as you keep ownership in mind in your design it all gets a lot easier. 

The lifetime of the code responsible for it will limit the lifetime of the allocated memory and tell you who should be responsible for releasing it. This can often be dealt with by shared and unique pointers but for something long lived it might be important to think about so you’re not holding onto resources longer than necessary. 

Probalems come up when you start allocating memory without an idea of which function, object or class is responsible for it and what it’s lifetime should be.","<div class=""md""><p>Here’s the main idea you need to think about: which piece of code is responsible for a chunk of memory. As long as you keep ownership in mind in your design it all gets a lot easier. </p>

<p>The lifetime of the code responsible for it will limit the lifetime of the allocated memory and tell you who should be responsible for releasing it. This can often be dealt with by shared and unique pointers but for something long lived it might be important to think about so you’re not holding onto resources longer than necessary. </p>

<p>Probalems come up when you start allocating memory without an idea of which function, object or class is responsible for it and what it’s lifetime should be.</p>
</div>",1578800018.0,,False,fe00byq,False,t3_enfrsb,t3_enfrsb,/r/Cplusplus/comments/enfrsb/are_there_any_good_books_for_learning_memory/fe00byq/,1,False,1,False,enfrsb,Cplusplus,t5_2qh6x
685,mrexodia,"Use unique_ptr and RAII as much as possible and you’ll be fine. Unless you’re implementing pool allocators or similar you don’t have to think about it, because RAII takes care of it. When using shared_ptr things get more complicated and you should take a look at weak_ptr.","<div class=""md""><p>Use unique_ptr and RAII as much as possible and you’ll be fine. Unless you’re implementing pool allocators or similar you don’t have to think about it, because RAII takes care of it. When using shared_ptr things get more complicated and you should take a look at weak_ptr.</p>
</div>",1578826814.0,,False,fe1iheu,False,t3_enfrsb,t3_enfrsb,/r/Cplusplus/comments/enfrsb/are_there_any_good_books_for_learning_memory/fe1iheu/,0,False,1,False,enfrsb,Cplusplus,t5_2qh6x
686,yvrelna,"I'm probably going to get a lot of flak for this but, I'd suggest to learn to use Rust, and you'll learn how to manage memory correctly in every languages.

The only memory management patterns that Rust allows is the safe patterns. If you learn to predict what the Rust compiler would and would not accept, you'd pretty much learn how to manage memory correctly in other languages that doesn't have a compiler that is not so pedantic.","<div class=""md""><p>I&#39;m probably going to get a lot of flak for this but, I&#39;d suggest to learn to use Rust, and you&#39;ll learn how to manage memory correctly in every languages.</p>

<p>The only memory management patterns that Rust allows is the safe patterns. If you learn to predict what the Rust compiler would and would not accept, you&#39;d pretty much learn how to manage memory correctly in other languages that doesn&#39;t have a compiler that is not so pedantic.</p>
</div>",1579003466.0,,False,fed8c9n,False,t3_enfrsb,t3_enfrsb,/r/Cplusplus/comments/enfrsb/are_there_any_good_books_for_learning_memory/fed8c9n/,0,False,1,False,enfrsb,Cplusplus,t5_2qh6x
687,objeckoriented,"Hmm, I not too familiar with hardware but I’ll look into this.","<div class=""md""><p>Hmm, I not too familiar with hardware but I’ll look into this.</p>
</div>",1578807743.0,,False,fe0agvk,True,t3_enfrsb,t1_fdzt1se,/r/Cplusplus/comments/enfrsb/are_there_any_good_books_for_learning_memory/fe0agvk/,0,False,1,False,enfrsb,Cplusplus,t5_2qh6x
688,objeckoriented,Thanks for the reply are there design patterns for memory management to help with implementation? Majority of my background is in Java so this all new to me.,"<div class=""md""><p>Thanks for the reply are there design patterns for memory management to help with implementation? Majority of my background is in Java so this all new to me.</p>
</div>",1578807476.0,,False,fe0a6k4,True,t3_enfrsb,t1_fe00byq,/r/Cplusplus/comments/enfrsb/are_there_any_good_books_for_learning_memory/fe0a6k4/,1,False,1,False,enfrsb,Cplusplus,t5_2qh6x
689,seriousnotshirley,"Design patterns aren’t so fundamental in C++ since not everything is an object. 

I think Scott Meyers Effexroce Modeen C++ covers the use of smart pointers, which is what you want to use. 

The basic idea is to use a unique pointer in almost all cases and covert to a shared pointer only when necessary. 

In C++ with smart pointers RAII covers a lot of this for you in most cases. If that sounds like word salad to you google smart pointer and google RAII. You’ll catch on quickly.","<div class=""md""><p>Design patterns aren’t so fundamental in C++ since not everything is an object. </p>

<p>I think Scott Meyers Effexroce Modeen C++ covers the use of smart pointers, which is what you want to use. </p>

<p>The basic idea is to use a unique pointer in almost all cases and covert to a shared pointer only when necessary. </p>

<p>In C++ with smart pointers RAII covers a lot of this for you in most cases. If that sounds like word salad to you google smart pointer and google RAII. You’ll catch on quickly.</p>
</div>",1578839512.0,,False,fe2khvo,False,t3_enfrsb,t1_fe0a6k4,/r/Cplusplus/comments/enfrsb/are_there_any_good_books_for_learning_memory/fe2khvo/,0,False,0,False,enfrsb,Cplusplus,t5_2qh6x
690,Ilyps,"Pick a book from the [SO book list here](https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list) that fits your level of experience. Avoid free online courses, tutorials, and videos.","<div class=""md""><p>Pick a book from the <a href=""https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list"">SO book list here</a> that fits your level of experience. Avoid free online courses, tutorials, and videos.</p>
</div>",1551462308.0,,False,ehkgbvy,False,t3_aw786a,t3_aw786a,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehkgbvy/,1,False,21,False,aw786a,Cplusplus,t5_2qh6x
691,masdar1,"Once you learn the basics of syntax (through tutorials, books, etc but I don’t know enough about that) try coming up with a small project and just making it. My first was building a calculator that could read in a string with the equation and compute the result. As you get comfortable, work your way up and start building bigger and better projects. 

Also, never underestimate the power of a google search. If you don’t know something, google probably does. ","<div class=""md""><p>Once you learn the basics of syntax (through tutorials, books, etc but I don’t know enough about that) try coming up with a small project and just making it. My first was building a calculator that could read in a string with the equation and compute the result. As you get comfortable, work your way up and start building bigger and better projects. </p>

<p>Also, never underestimate the power of a google search. If you don’t know something, google probably does. </p>
</div>",1551470805.0,,False,ehkt323,False,t3_aw786a,t3_aw786a,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehkt323/,1,False,5,False,aw786a,Cplusplus,t5_2qh6x
692,PinballWizrd,"I've used solo learn when I was first trying to teach myself - I don't think it is a very useful tool tbh.

It is good at listing out topics in a logical order for l earning, but I think your best bet is to take that list and start writing small applications using those new concepts.","<div class=""md""><p>I&#39;ve used solo learn when I was first trying to teach myself - I don&#39;t think it is a very useful tool tbh.</p>

<p>It is good at listing out topics in a logical order for l earning, but I think your best bet is to take that list and start writing small applications using those new concepts.</p>
</div>",1551465064.0,,False,ehkkgg0,False,t3_aw786a,t3_aw786a,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehkkgg0/,1,False,7,False,aw786a,Cplusplus,t5_2qh6x
693,SuperHuman64,"It's not free, but i've looked over a bunch of courses and there's one by Frank Mitroupolous on  udemy that was great. He has a good way of teaching, i found it very easy to learn. He also teaches good practices from the get-go so there's no un-learning bad habits later.

One of the few on udemy that stands out, imo.","<div class=""md""><p>It&#39;s not free, but i&#39;ve looked over a bunch of courses and there&#39;s one by Frank Mitroupolous on  udemy that was great. He has a good way of teaching, i found it very easy to learn. He also teaches good practices from the get-go so there&#39;s no un-learning bad habits later.</p>

<p>One of the few on udemy that stands out, imo.</p>
</div>",1551478624.0,,False,ehl4i1i,False,t3_aw786a,t3_aw786a,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehl4i1i/,1,False,2,False,aw786a,Cplusplus,t5_2qh6x
694,gnidraeb,[Super FAQ](https://isocpp.org/faq) (now at isocpp.org) is a great resource. ,"<div class=""md""><p><a href=""https://isocpp.org/faq"">Super FAQ</a> (now at isocpp.org) is a great resource. </p>
</div>",1551489540.0,,False,ehli9o7,False,t3_aw786a,t3_aw786a,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehli9o7/,0,False,2,False,aw786a,Cplusplus,t5_2qh6x
695,rtkbfmvbvb,"If you’re interested in making games, you could try using Unreal Engine. There are a lot of tutorials out there that use C++ and if you’re willing to, you can spend like $20 on a site like Udemy and get an entire semesters worth of work to do.","<div class=""md""><p>If you’re interested in making games, you could try using Unreal Engine. There are a lot of tutorials out there that use C++ and if you’re willing to, you can spend like $20 on a site like Udemy and get an entire semesters worth of work to do.</p>
</div>",1551496572.0,,False,ehlqeai,False,t3_aw786a,t3_aw786a,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehlqeai/,0,False,1,False,aw786a,Cplusplus,t5_2qh6x
696,random_name53,"Best quality material you can find for introduction to C++ is Apsolute Noob Spoonfed on yt by antiRTFM: https://www.youtube.com/playlist?list=PL1D10C030FDCE7CE0

Don't know why people prefer Udemy all the time over yt.. ( if you know what to search for yt is best )","<div class=""md""><p>Best quality material you can find for introduction to C++ is Apsolute Noob Spoonfed on yt by antiRTFM: <a href=""https://www.youtube.com/playlist?list=PL1D10C030FDCE7CE0"">https://www.youtube.com/playlist?list=PL1D10C030FDCE7CE0</a></p>

<p>Don&#39;t know why people prefer Udemy all the time over yt.. ( if you know what to search for yt is best )</p>
</div>",1551534065.0,,False,ehmkd3r,False,t3_aw786a,t3_aw786a,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehmkd3r/,0,False,1,False,aw786a,Cplusplus,t5_2qh6x
697,morgangrice,I found this video very helpful to start with.    [https://www.youtube.com/watch?v=vLnPwxZdW4Y&t=340s](https://www.youtube.com/watch?v=vLnPwxZdW4Y&t=340s),"<div class=""md""><p>I found this video very helpful to start with.    <a href=""https://www.youtube.com/watch?v=vLnPwxZdW4Y&amp;t=340s"">https://www.youtube.com/watch?v=vLnPwxZdW4Y&amp;t=340s</a></p>
</div>",1551493548.0,,False,ehlmz56,False,t3_aw786a,t3_aw786a,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehlmz56/,0,False,0,False,aw786a,Cplusplus,t5_2qh6x
698,YamiOG,I would recommend using Visual Studio 2017 with SDL2(harder) or using Raylib(easier).,"<div class=""md""><p>I would recommend using Visual Studio 2017 with SDL2(harder) or using Raylib(easier).</p>
</div>",1551545001.0,,False,ehmxmsp,False,t3_aw786a,t3_aw786a,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehmxmsp/,0,False,0,False,aw786a,Cplusplus,t5_2qh6x
699,DoorsXP,"I would like to suggest you to also learn c before leaning c++ because c++ is not c but c is c++.

This is where I started from:- 

C tutorial:-
https://www.youtube.com/playlist?list=PL6gx4Cwl9DGAKIXv8Yr6nhGJ9Vlcjyymq

C++ tutorial:-
https://www.youtube.com/playlist?list=PLAE85DE8440AA6B83 

","<div class=""md""><p>I would like to suggest you to also learn c before leaning c++ because c++ is not c but c is c++.</p>

<p>This is where I started from:- </p>

<p>C tutorial:-
<a href=""https://www.youtube.com/playlist?list=PL6gx4Cwl9DGAKIXv8Yr6nhGJ9Vlcjyymq"">https://www.youtube.com/playlist?list=PL6gx4Cwl9DGAKIXv8Yr6nhGJ9Vlcjyymq</a></p>

<p>C++ tutorial:-
<a href=""https://www.youtube.com/playlist?list=PLAE85DE8440AA6B83"">https://www.youtube.com/playlist?list=PLAE85DE8440AA6B83</a> </p>
</div>",1551549428.0,,False,ehn3obc,False,t3_aw786a,t3_aw786a,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehn3obc/,0,False,0,False,aw786a,Cplusplus,t5_2qh6x
700,,"Learn C first. C++ is quite an elephant when it comes to programming languages. Read books about it, and find people who can teach you.

Edit: Learn it *first*, not learn it *instead*. C is a small subset of C++. Why are you downvoting this? This is solid advice.","<div class=""md""><p>Learn C first. C++ is quite an elephant when it comes to programming languages. Read books about it, and find people who can teach you.</p>

<p>Edit: Learn it <em>first</em>, not learn it <em>instead</em>. C is a small subset of C++. Why are you downvoting this? This is solid advice.</p>
</div>",1551460771.0,,1551486625.0,ehkew02,False,t3_aw786a,t3_aw786a,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehkew02/,4,False,-16,False,aw786a,Cplusplus,t5_2qh6x
701,King_Donut_,"Ok, thank you","<div class=""md""><p>Ok, thank you</p>
</div>",1551471599.0,,False,ehku98v,True,t3_aw786a,t1_ehkgbvy,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehku98v/,0,False,3,False,aw786a,Cplusplus,t5_2qh6x
702,King_Donut_,"Thank you, I definitely will try this. Im going to assume that I have a lot to learn though","<div class=""md""><p>Thank you, I definitely will try this. Im going to assume that I have a lot to learn though</p>
</div>",1551471528.0,,False,ehku5fb,True,t3_aw786a,t1_ehkt323,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehku5fb/,0,False,5,False,aw786a,Cplusplus,t5_2qh6x
703,King_Donut_,"Alright, thank you","<div class=""md""><p>Alright, thank you</p>
</div>",1551471580.0,,False,ehku87r,True,t3_aw786a,t1_ehkkgg0,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehku87r/,0,False,3,False,aw786a,Cplusplus,t5_2qh6x
704,King_Donut_,Ive heard udemy was reall sketchy though,"<div class=""md""><p>Ive heard udemy was reall sketchy though</p>
</div>",1551479976.0,,False,ehl6bpi,True,t3_aw786a,t1_ehl4i1i,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehl6bpi/,2,False,2,False,aw786a,Cplusplus,t5_2qh6x
705,Ilyps,"> Edit: Learn it first, not learn it instead. C is a small subset of C++. Why are you downvoting this? This is solid advice.

You're being downvoted because it's a common and really old misconception to learn C before C++. Somehow people think it's justified to claim that because C predates C++ and many C89 programs are also valid C++ ([but C89 never was a subset of C++](https://isocpp.org/wiki/faq/c#is-c-a-subset), and C99 is more of a sibling to C++ than an ancestor). [However, that does not mean that they are *good* C++ programs.](http://www.dietmar-kuehl.de/mirror/c++-faq/how-to-learn-cpp.html#faq-28.2)

The reason why you shouldn't recommend C first when learning C++ is because [C isn't the best initial subset to learn when learning C++](http://www.stroustrup.com/bs_faq.html#prerequisite). Some people have the idea that learning C somehow gives you an idea of how C++ works behind the scenes, which is obviously flawed because C++ encompasses a lot of C, and just because you shouldn't learn C first, doesn't mean that you shouldn't learn to work with raw memory at some point. Somehow, people seem to miss this. And the core philosophy of C++, RAII, should really be taught from the beginning. The recommended books do this, and learning C first will not expose you to this concept until way too late.

The reason you are downvoted is because most people here know this. Additionally, they know they have the support of people like Stroustrup, [Glassborow](https://accu.org/index.php?module=bookreviews&func=search&rid=1744), etc. So it's because of the same reason I gave you yesterday: your advice is really poor. No worries, it's a common misconception from the 1990's. But you really shouldn't be telling people to first learn C.

Hope this helps.","<div class=""md""><blockquote>
<p>Edit: Learn it first, not learn it instead. C is a small subset of C++. Why are you downvoting this? This is solid advice.</p>
</blockquote>

<p>You&#39;re being downvoted because it&#39;s a common and really old misconception to learn C before C++. Somehow people think it&#39;s justified to claim that because C predates C++ and many C89 programs are also valid C++ (<a href=""https://isocpp.org/wiki/faq/c#is-c-a-subset"">but C89 never was a subset of C++</a>, and C99 is more of a sibling to C++ than an ancestor). <a href=""http://www.dietmar-kuehl.de/mirror/c++-faq/how-to-learn-cpp.html#faq-28.2"">However, that does not mean that they are <em>good</em> C++ programs.</a></p>

<p>The reason why you shouldn&#39;t recommend C first when learning C++ is because <a href=""http://www.stroustrup.com/bs_faq.html#prerequisite"">C isn&#39;t the best initial subset to learn when learning C++</a>. Some people have the idea that learning C somehow gives you an idea of how C++ works behind the scenes, which is obviously flawed because C++ encompasses a lot of C, and just because you shouldn&#39;t learn C first, doesn&#39;t mean that you shouldn&#39;t learn to work with raw memory at some point. Somehow, people seem to miss this. And the core philosophy of C++, RAII, should really be taught from the beginning. The recommended books do this, and learning C first will not expose you to this concept until way too late.</p>

<p>The reason you are downvoted is because most people here know this. Additionally, they know they have the support of people like Stroustrup, <a href=""https://accu.org/index.php?module=bookreviews&amp;func=search&amp;rid=1744"">Glassborow</a>, etc. So it&#39;s because of the same reason I gave you yesterday: your advice is really poor. No worries, it&#39;s a common misconception from the 1990&#39;s. But you really shouldn&#39;t be telling people to first learn C.</p>

<p>Hope this helps.</p>
</div>",1551500947.0,,1551514746.0,ehlv2w3,False,t3_aw786a,t1_ehkew02,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehlv2w3/,1,False,7,False,aw786a,Cplusplus,t5_2qh6x
706,Ilyps,"Please don't tell people that, it's really poor advice.","<div class=""md""><p>Please don&#39;t tell people that, it&#39;s really poor advice.</p>
</div>",1551462239.0,,False,ehkg8s4,False,t3_aw786a,t1_ehkew02,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehkg8s4/,1,False,15,False,aw786a,Cplusplus,t5_2qh6x
707,,Starting with C? What's next? Learning Assembler as the first language so you could start realizing what the actual object code looks like? Travesty!,"<div class=""md""><p>Starting with C? What&#39;s next? Learning Assembler as the first language so you could start realizing what the actual object code looks like? Travesty!</p>
</div>",1551485555.0,,False,ehldi6u,False,t3_aw786a,t1_ehkew02,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehldi6u/,1,False,2,False,aw786a,Cplusplus,t5_2qh6x
708,forgottenqueue,"I don’t know why this is so downvoted.  We do audio development and I definitely want anyone we use to have a grasp of C, raw pointers and all. That way they understand what the duck is actually going on with c++ under the hood ... 

Seems like a great starting point to me !

","<div class=""md""><p>I don’t know why this is so downvoted.  We do audio development and I definitely want anyone we use to have a grasp of C, raw pointers and all. That way they understand what the duck is actually going on with c++ under the hood ... </p>

<p>Seems like a great starting point to me !</p>
</div>",1551464356.0,,False,ehkjcn9,False,t3_aw786a,t1_ehkew02,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehkjcn9/,1,False,-1,False,aw786a,Cplusplus,t5_2qh6x
709,SuperHuman64,"It depends really, there are many courses that are crap, made by random people, and there are some that are made by actual experts.

Like i'm taking a c++/unreal engine course right now taught by an developer from Epic Games, and it's been great so far.

","<div class=""md""><p>It depends really, there are many courses that are crap, made by random people, and there are some that are made by actual experts.</p>

<p>Like i&#39;m taking a c++/unreal engine course right now taught by an developer from Epic Games, and it&#39;s been great so far.</p>
</div>",1551526697.0,,False,ehme8m4,False,t3_aw786a,t1_ehl6bpi,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehme8m4/,0,False,1,False,aw786a,Cplusplus,t5_2qh6x
710,BudSkigee,"I have used udemy for a while now and have no complaints, I used it to kinda learn python and it worked great until I lost interest. Now I’m back at it and I’m diving into C++ because I’ve heard that it is a “essential” language to learn... the courses  are cheap and professional for the most part, just look for the right one! I’m currently going through “Unreal Engine C++ Developer: Learn C++ and make video games”","<div class=""md""><p>I have used udemy for a while now and have no complaints, I used it to kinda learn python and it worked great until I lost interest. Now I’m back at it and I’m diving into C++ because I’ve heard that it is a “essential” language to learn... the courses  are cheap and professional for the most part, just look for the right one! I’m currently going through “Unreal Engine C++ Developer: Learn C++ and make video games”</p>
</div>",1551707870.0,,False,ehrl9fm,False,t3_aw786a,t1_ehl6bpi,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehrl9fm/,1,False,1,False,aw786a,Cplusplus,t5_2qh6x
711,,"Well, I'm afraid that I still disagree with you, but at least I get your point now. Thanks :-)","<div class=""md""><p>Well, I&#39;m afraid that I still disagree with you, but at least I get your point now. Thanks :-)</p>
</div>",1551523597.0,,False,ehmc43a,False,t3_aw786a,t1_ehlv2w3,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehmc43a/,0,False,1,False,aw786a,Cplusplus,t5_2qh6x
712,,"Why is it poor advice? Since C is a subset of C++, it should be easy to grasp C++ after the foundations of C are clear.

Reading books is important, you can't just learn C(++) from tutorials. There's a reason why we have documentation of every piece of software out there.

And it's also important to have teachers who can correct you if you make mistakes.","<div class=""md""><p>Why is it poor advice? Since C is a subset of C++, it should be easy to grasp C++ after the foundations of C are clear.</p>

<p>Reading books is important, you can&#39;t just learn C(++) from tutorials. There&#39;s a reason why we have documentation of every piece of software out there.</p>

<p>And it&#39;s also important to have teachers who can correct you if you make mistakes.</p>
</div>",1551462931.0,,False,ehkh7hv,False,t3_aw786a,t1_ehkg8s4,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehkh7hv/,2,False,-8,False,aw786a,Cplusplus,t5_2qh6x
713,,"No! C++ is based on C, not assembler. In order to use its features effectively it's important to know how they work. Just learning C++ the way it is without explaining the internals will create a ton of ""script-kids"" who don't know how to code efficiently.","<div class=""md""><p>No! C++ is based on C, not assembler. In order to use its features effectively it&#39;s important to know how they work. Just learning C++ the way it is without explaining the internals will create a ton of &quot;script-kids&quot; who don&#39;t know how to code efficiently.</p>
</div>",1551485778.0,,False,ehlds14,False,t3_aw786a,t1_ehldi6u,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehlds14/,1,False,-1,False,aw786a,Cplusplus,t5_2qh6x
714,,"Thanks, I also don't understand the downvotes. Maybe it's about the fact that working with raw memory is discouraged in C++ (another thing I don't understand). Who knows. :-)","<div class=""md""><p>Thanks, I also don&#39;t understand the downvotes. Maybe it&#39;s about the fact that working with raw memory is discouraged in C++ (another thing I don&#39;t understand). Who knows. :-)</p>
</div>",1551466193.0,,False,ehkm80b,False,t3_aw786a,t1_ehkjcn9,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehkm80b/,1,False,1,False,aw786a,Cplusplus,t5_2qh6x
715,King_Donut_,Ill check it out,"<div class=""md""><p>Ill check it out</p>
</div>",1551717320.0,,False,ehrx5cw,True,t3_aw786a,t1_ehrl9fm,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehrx5cw/,0,False,1,False,aw786a,Cplusplus,t5_2qh6x
716,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1551463187.0,,1624652355.0,ehkhl8w,False,t3_aw786a,t1_ehkh7hv,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehkhl8w/,1,False,5,False,aw786a,Cplusplus,t5_2qh6x
717,csmrh,"I think you’re right about reading books. Avoid online tutorials.

I don’t think learning C as a way to learn C++ is a great idea. I think learning C++ isn’t prohibitively hard and by the time you know it well you realize you also know C. That’s how I was taught in a CS degree anyway and I thought it worked well.

Obviously there’s no right or wrong way to learn as long as you’re learning, though.","<div class=""md""><p>I think you’re right about reading books. Avoid online tutorials.</p>

<p>I don’t think learning C as a way to learn C++ is a great idea. I think learning C++ isn’t prohibitively hard and by the time you know it well you realize you also know C. That’s how I was taught in a CS degree anyway and I thought it worked well.</p>

<p>Obviously there’s no right or wrong way to learn as long as you’re learning, though.</p>
</div>",1551463347.0,,False,ehkhtw7,False,t3_aw786a,t1_ehkh7hv,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehkhtw7/,0,False,2,False,aw786a,Cplusplus,t5_2qh6x
718,,"It was supposed to be a joke. 

> Just learning C++ the way it is without explaining the internals will create a ton of ""script-kids"" who don't know how to code efficiently.

Yup. That's what I'm talking about as well. There are far too many college grads with CS degrees already who treat C++ as some kind of ""faster PHP"" or whatever. A lot of programmers in the field today think that their compiled programs just magically ""run"" - not being compiled into an actual object code which is being executed by real live hardware with its limitations and quirks. ","<div class=""md""><p>It was supposed to be a joke. </p>

<blockquote>
<p>Just learning C++ the way it is without explaining the internals will create a ton of &quot;script-kids&quot; who don&#39;t know how to code efficiently.</p>
</blockquote>

<p>Yup. That&#39;s what I&#39;m talking about as well. There are far too many college grads with CS degrees already who treat C++ as some kind of &quot;faster PHP&quot; or whatever. A lot of programmers in the field today think that their compiled programs just magically &quot;run&quot; - not being compiled into an actual object code which is being executed by real live hardware with its limitations and quirks. </p>
</div>",1551486117.0,,False,ehle738,False,t3_aw786a,t1_ehlds14,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehle738/,1,False,1,False,aw786a,Cplusplus,t5_2qh6x
719,forgottenqueue,Yeah. All the audio software we do nice smart pointer stuff in the UI then go wild with intrinsics and raw pointers when we hit the code that needs to go fast ...,"<div class=""md""><p>Yeah. All the audio software we do nice smart pointer stuff in the UI then go wild with intrinsics and raw pointers when we hit the code that needs to go fast ...</p>
</div>",1551468057.0,,False,ehkp14i,False,t3_aw786a,t1_ehkm80b,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehkp14i/,0,False,-1,False,aw786a,Cplusplus,t5_2qh6x
720,,It's even worse practice to write C++ code without knowing how it actually works behind the scenes.,"<div class=""md""><p>It&#39;s even worse practice to write C++ code without knowing how it actually works behind the scenes.</p>
</div>",1551465999.0,,False,ehklx0m,False,t3_aw786a,t1_ehkhl8w,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehklx0m/,0,False,-6,False,aw786a,Cplusplus,t5_2qh6x
721,,">It was supposed to be a joke. 

Oh my. Text is really a bad medium for this XD

>A lot of programmers in the field today think that their compiled programs just magically ""run"" - not being compiled into an actual object code which is being executed by real live hardware with its limitations and quirks. 

That's exactly the problem I'm seeing, too. And the resulting programs are then in turn pretty inefficient, which is pretty bad. It gives you Windows...","<div class=""md""><blockquote>
<p>It was supposed to be a joke. </p>
</blockquote>

<p>Oh my. Text is really a bad medium for this XD</p>

<blockquote>
<p>A lot of programmers in the field today think that their compiled programs just magically &quot;run&quot; - not being compiled into an actual object code which is being executed by real live hardware with its limitations and quirks. </p>
</blockquote>

<p>That&#39;s exactly the problem I&#39;m seeing, too. And the resulting programs are then in turn pretty inefficient, which is pretty bad. It gives you Windows...</p>
</div>",1551486576.0,,False,ehler4k,False,t3_aw786a,t1_ehle738,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehler4k/,1,False,0,False,aw786a,Cplusplus,t5_2qh6x
722,,"""Who cares? The hardware is getting faster every day, we don't need to be focusing on the code efficiency that much anymore""

I've heard this first back in the ... 1997, I guess.","<div class=""md""><p>&quot;Who cares? The hardware is getting faster every day, we don&#39;t need to be focusing on the code efficiency that much anymore&quot;</p>

<p>I&#39;ve heard this first back in the ... 1997, I guess.</p>
</div>",1551487436.0,,False,ehlfs0f,False,t3_aw786a,t1_ehler4k,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehlfs0f/,1,False,0,False,aw786a,Cplusplus,t5_2qh6x
723,,"Tossing around nested loops with memory allocations inside that have to run at high speeds will definitely work out just fine, since ... hardware is getting faster every day XD","<div class=""md""><p>Tossing around nested loops with memory allocations inside that have to run at high speeds will definitely work out just fine, since ... hardware is getting faster every day XD</p>
</div>",1551487537.0,,False,ehlfwc1,False,t3_aw786a,t1_ehlfs0f,/r/Cplusplus/comments/aw786a/im_trying_to_learn_c_but_dont_know_where_to_start/ehlfwc1/,0,False,0,False,aw786a,Cplusplus,t5_2qh6x
724,flipcoder,"Props from another engine dev, nice work","<div class=""md""><p>Props from another engine dev, nice work</p>
</div>",1523241173.0,,False,dx1ssgq,False,t3_8apgra,t3_8apgra,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx1ssgq/,1,False,7,False,8apgra,Cplusplus,t5_2qh6x
725,sammyIsLife,Any insight as to how it works?,"<div class=""md""><p>Any insight as to how it works?</p>
</div>",1523191922.0,,False,dx0idd5,False,t3_8apgra,t3_8apgra,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0idd5/,1,False,5,False,8apgra,Cplusplus,t5_2qh6x
726,AGloriousDayForRain,"I've been thinking about making a 3d game engine myself, but i have no experience with creating game engines. Can you explain a bit how you created the actual 3d space (maybe in a general sort of way)? ","<div class=""md""><p>I&#39;ve been thinking about making a 3d game engine myself, but i have no experience with creating game engines. Can you explain a bit how you created the actual 3d space (maybe in a general sort of way)? </p>
</div>",1523192609.0,,False,dx0irwm,False,t3_8apgra,t3_8apgra,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0irwm/,1,False,3,False,8apgra,Cplusplus,t5_2qh6x
727,FruscianteDebutante,"This is amazing, you must be very proud to see how far you've come! I don't have too much experience in c++, most complicated things I've done are dynamic memory allocation with picture editing and one small microcontroller project.

My little bro seems interested in starting to code so he can make games. How long have you been at it and how do you even build something this big? Amazing. ","<div class=""md""><p>This is amazing, you must be very proud to see how far you&#39;ve come! I don&#39;t have too much experience in c++, most complicated things I&#39;ve done are dynamic memory allocation with picture editing and one small microcontroller project.</p>

<p>My little bro seems interested in starting to code so he can make games. How long have you been at it and how do you even build something this big? Amazing. </p>
</div>",1523266678.0,,False,dx28kz8,False,t3_8apgra,t3_8apgra,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx28kz8/,1,False,2,False,8apgra,Cplusplus,t5_2qh6x
728,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1523269482.0,,False,dx29r7c,False,t3_8apgra,t3_8apgra,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx29r7c/,1,False,1,False,8apgra,Cplusplus,t5_2qh6x
729,DOOMReboot,Thank you.  What have you been working on?  ,"<div class=""md""><p>Thank you.  What have you been working on?  </p>
</div>",1523292361.0,,False,dx2t5ps,True,t3_8apgra,t1_dx1ssgq,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx2t5ps/,1,False,2,False,8apgra,Cplusplus,t5_2qh6x
730,DOOMReboot,It's *huge* source-wise. Several megabytes of code. Anything in particular I could begin with?,"<div class=""md""><p>It&#39;s <em>huge</em> source-wise. Several megabytes of code. Anything in particular I could begin with?</p>
</div>",1523192344.0,,False,dx0imba,True,t3_8apgra,t1_dx0idd5,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0imba/,1,False,3,False,8apgra,Cplusplus,t5_2qh6x
731,DOOMReboot,"The DOOM WAD (datafile) contains 2D vertex information for each wall segment.  Each SECTOR has a ceiling and floor height.  When you combine them you get an XYZ coordinate which you save as a 3D Vector/Vertex from which you can define a quadrilateral (two triangles) which will represent the ""wall"" in 3D space.  

Once you have all the walls defined as triangles you can move them around the player by applying a 4x4 matrix transformation.

Floor triangles are created in very much the same way.  It's mainly about making sure that each triangle is comprised of the appropriate vertices in the correct 3D space.


Is that kinda what you were asking about?  ","<div class=""md""><p>The DOOM WAD (datafile) contains 2D vertex information for each wall segment.  Each SECTOR has a ceiling and floor height.  When you combine them you get an XYZ coordinate which you save as a 3D Vector/Vertex from which you can define a quadrilateral (two triangles) which will represent the &quot;wall&quot; in 3D space.  </p>

<p>Once you have all the walls defined as triangles you can move them around the player by applying a 4x4 matrix transformation.</p>

<p>Floor triangles are created in very much the same way.  It&#39;s mainly about making sure that each triangle is comprised of the appropriate vertices in the correct 3D space.</p>

<p>Is that kinda what you were asking about?  </p>
</div>",1523195744.0,,False,dx0kumm,True,t3_8apgra,t1_dx0irwm,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0kumm/,1,False,5,False,8apgra,Cplusplus,t5_2qh6x
732,DOOMReboot,"This project took about four hours a day for three months.  I've been writing games for nearly as long as I've been programming, which is about two decades. :)","<div class=""md""><p>This project took about four hours a day for three months.  I&#39;ve been writing games for nearly as long as I&#39;ve been programming, which is about two decades. :)</p>
</div>",1523272048.0,,False,dx2azjh,True,t3_8apgra,t1_dx28kz8,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx2azjh/,0,False,2,False,8apgra,Cplusplus,t5_2qh6x
733,DOOMReboot,At what level are you currently?  I learned through trial and error and reading a *lot* of books and articles along the way.,"<div class=""md""><p>At what level are you currently?  I learned through trial and error and reading a <em>lot</em> of books and articles along the way.</p>
</div>",1523292473.0,,False,dx2ta9h,True,t3_8apgra,t1_dx29r7c,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx2ta9h/,1,False,1,False,8apgra,Cplusplus,t5_2qh6x
734,flipcoder,"Here's my engine:  https://github.com/flipcoder/qor
My github also has some projects using it.
It's not perfect, I could name many things that need to be improved, but working on it has taught me a lot so I'm proud of the progress.  The biggest things I need to add is auto-collapsing changes in the scenegraph to temp buffer to play nicer with the cache and minimize indirection.   do this manually with certain objects but it would be nice automatically.  Also needs better culling, shadows, and thread performance.
I've done several projects with it and used it on Github Gameoff - and was one of the winners, yay!) ","<div class=""md""><p>Here&#39;s my engine:  <a href=""https://github.com/flipcoder/qor"">https://github.com/flipcoder/qor</a>
My github also has some projects using it.
It&#39;s not perfect, I could name many things that need to be improved, but working on it has taught me a lot so I&#39;m proud of the progress.  The biggest things I need to add is auto-collapsing changes in the scenegraph to temp buffer to play nicer with the cache and minimize indirection.   do this manually with certain objects but it would be nice automatically.  Also needs better culling, shadows, and thread performance.
I&#39;ve done several projects with it and used it on Github Gameoff - and was one of the winners, yay!) </p>
</div>",1523943083.0,,1523943390.0,dxhvmer,False,t3_8apgra,t1_dx2t5ps,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dxhvmer/,1,False,2,False,8apgra,Cplusplus,t5_2qh6x
735,sammyIsLife,I’ve always been interested in how 3d engines create the allure of movement with a fixed perspective. What sort of math goes into shifting the environments around in accordance with movement so as to make it seem like the character is moving through the environment. ,"<div class=""md""><p>I’ve always been interested in how 3d engines create the allure of movement with a fixed perspective. What sort of math goes into shifting the environments around in accordance with movement so as to make it seem like the character is moving through the environment. </p>
</div>",1523194277.0,,False,dx0jug1,False,t3_8apgra,t1_dx0imba,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0jug1/,1,False,4,False,8apgra,Cplusplus,t5_2qh6x
736,AGloriousDayForRain,"Yep that's what I was asking about. So when the player moves, it's not necessarily the player that moves, but the environment. 

Do you know of any tutorials or books for beginners on learning how to create game engines?","<div class=""md""><p>Yep that&#39;s what I was asking about. So when the player moves, it&#39;s not necessarily the player that moves, but the environment. </p>

<p>Do you know of any tutorials or books for beginners on learning how to create game engines?</p>
</div>",1523198588.0,,False,dx0n2rs,False,t3_8apgra,t1_dx0kumm,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0n2rs/,2,False,3,False,8apgra,Cplusplus,t5_2qh6x
737,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1523293732.0,,False,dx2uoyz,False,t3_8apgra,t1_dx2ta9h,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx2uoyz/,1,False,2,False,8apgra,Cplusplus,t5_2qh6x
738,DOOMReboot,"Looks impressive.  How long have you been working on it?  

> I've done several projects with it and used it on Github Gameoff - and was on

Congratulations!  :)

I have several immediatw questions if you don't mind.  How do you design for multiplatform - is it just sticking with standard C++ types or is there a lot more to it?

Does openAL support raw MIDI commands?

Which resources did you primarily use for learning?  

How do you handle generic, data driven shaders?","<div class=""md""><p>Looks impressive.  How long have you been working on it?  </p>

<blockquote>
<p>I&#39;ve done several projects with it and used it on Github Gameoff - and was on</p>
</blockquote>

<p>Congratulations!  :)</p>

<p>I have several immediatw questions if you don&#39;t mind.  How do you design for multiplatform - is it just sticking with standard C++ types or is there a lot more to it?</p>

<p>Does openAL support raw MIDI commands?</p>

<p>Which resources did you primarily use for learning?  </p>

<p>How do you handle generic, data driven shaders?</p>
</div>",1523968614.0,,False,dxi8ckc,True,t3_8apgra,t1_dxhvmer,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dxi8ckc/,1,False,2,False,8apgra,Cplusplus,t5_2qh6x
739,DOOMReboot,"The secret is that the player never moves; the world moves around the player.

It's all Linear Algebra, 4x4 Matrix transforms applied to 3D Vectors (converted to 4D homogeneous coordinates so that they jive).  

In a nutshell, you start with all the vertices for all the triangles/polygons.  Each one is a vector which will be multiplied by a final Matrix in order to ""move"" it around. 

DOOM coordinates are already in World Space, so you only need to perform a World to View multiplication.

 First you create a Scale Matrix.  Then a Rotation Matrix.  Then a Translation Matrix.  You concatenate them the matrices by multiplying them together (T * R * S).

You then take every vertex (Vector) and multiply it by the aforementioned View matrix.  That puts everything relative to where the player currently is (Translate Matrix) and the direction in which he's facing (Rotation Matrix).

You need one final matrix though, the Projection Matrix which converts all the vertices from unit space [-1, 1] into Screen Space which is your window resolution, Eg 1024x768.

Does that kinda answer your question?","<div class=""md""><p>The secret is that the player never moves; the world moves around the player.</p>

<p>It&#39;s all Linear Algebra, 4x4 Matrix transforms applied to 3D Vectors (converted to 4D homogeneous coordinates so that they jive).  </p>

<p>In a nutshell, you start with all the vertices for all the triangles/polygons.  Each one is a vector which will be multiplied by a final Matrix in order to &quot;move&quot; it around. </p>

<p>DOOM coordinates are already in World Space, so you only need to perform a World to View multiplication.</p>

<p>First you create a Scale Matrix.  Then a Rotation Matrix.  Then a Translation Matrix.  You concatenate them the matrices by multiplying them together (T * R * S).</p>

<p>You then take every vertex (Vector) and multiply it by the aforementioned View matrix.  That puts everything relative to where the player currently is (Translate Matrix) and the direction in which he&#39;s facing (Rotation Matrix).</p>

<p>You need one final matrix though, the Projection Matrix which converts all the vertices from unit space [-1, 1] into Screen Space which is your window resolution, Eg 1024x768.</p>

<p>Does that kinda answer your question?</p>
</div>",1523195199.0,,False,dx0khup,True,t3_8apgra,t1_dx0jug1,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0khup/,1,False,15,False,8apgra,Cplusplus,t5_2qh6x
740,DOOMReboot,"I haven't gone through this particular series myself, but I've browsed through it and his (thebennybox - everything he makes is high quality) series on creating a software renderer, and they are fantastic!

https://www.youtube.com/watch?v=ss3AnSxJ2X8&list=PLEETnX-uPtBXP_B2yupUKlflXBznWIlL5

This is by far my favorite book:

https://www.amazon.com/Engine-Architecture-Second-Jason-Gregory/dp/1466560010

I'd recommend thebennybox's video series first, the book may not be quite as beginner-friendly.","<div class=""md""><p>I haven&#39;t gone through this particular series myself, but I&#39;ve browsed through it and his (thebennybox - everything he makes is high quality) series on creating a software renderer, and they are fantastic!</p>

<p><a href=""https://www.youtube.com/watch?v=ss3AnSxJ2X8&amp;list=PLEETnX-uPtBXP_B2yupUKlflXBznWIlL5"">https://www.youtube.com/watch?v=ss3AnSxJ2X8&amp;list=PLEETnX-uPtBXP_B2yupUKlflXBznWIlL5</a></p>

<p>This is by far my favorite book:</p>

<p><a href=""https://www.amazon.com/Engine-Architecture-Second-Jason-Gregory/dp/1466560010"">https://www.amazon.com/Engine-Architecture-Second-Jason-Gregory/dp/1466560010</a></p>

<p>I&#39;d recommend thebennybox&#39;s video series first, the book may not be quite as beginner-friendly.</p>
</div>",1523198890.0,,False,dx0nbws,True,t3_8apgra,t1_dx0n2rs,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0nbws/,1,False,3,False,8apgra,Cplusplus,t5_2qh6x
741,flipcoder,"That's sort of the idea behind using matrices.  By multiplying a matrix you're modifying a coordinate system (like a frame of reference).  So to render an object from the perspective of a camera there's a chain of matrix multiplications that take place that give you a matrix that can send x,y,z positions right where they should be on the screen.   Operations on matricies can actually be visualized somewhat by thinking of rotating/translating/scaling like in 3d model software.  That's essentially what a matrix mult does in this context.  I highly recommend the book 3d math primer. ","<div class=""md""><p>That&#39;s sort of the idea behind using matrices.  By multiplying a matrix you&#39;re modifying a coordinate system (like a frame of reference).  So to render an object from the perspective of a camera there&#39;s a chain of matrix multiplications that take place that give you a matrix that can send x,y,z positions right where they should be on the screen.   Operations on matricies can actually be visualized somewhat by thinking of rotating/translating/scaling like in 3d model software.  That&#39;s essentially what a matrix mult does in this context.  I highly recommend the book 3d math primer. </p>
</div>",1523241670.0,,False,dx1ta9b,False,t3_8apgra,t1_dx0n2rs,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx1ta9b/,0,False,2,False,8apgra,Cplusplus,t5_2qh6x
742,DOOMReboot,Sounds like you're well on your way!,"<div class=""md""><p>Sounds like you&#39;re well on your way!</p>
</div>",1523295211.0,,False,dx2wdln,True,t3_8apgra,t1_dx2uoyz,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx2wdln/,0,False,1,False,8apgra,Cplusplus,t5_2qh6x
743,flipcoder,"I haven't worked on it much this year.  I tinker with it every now and then and add features I need for each project.  I originally started it around 10 years ago but did a rewrite and added features as I learned things.

Multiplatform isn't too hard.  I use SDL for basic window and opengl context.  From there I make sure I test newer C++ features in msvc before adding them, since msvc lags behind linux compilers and mingw on windows has downsides with libs and speed.  MSVC is good, but has iterator debugging which slows down stuff massively when testing if you don't disable.  Use boost::filesystem or watch your path separators and mind your home/config locations per OS.  Also be weary that libs that say crossplatform may be unstable on one platform.  You may have to hand-select certain versions of libs and make a wrapper.  There will be annoyances that force you to do small fixes to get things to compile.  For builds I don't like using platform IDEs directly.  I prefer using build systems like premake so I can do it all from terminal and vim for convenience.  You'll need to bring your workflow with you across OSs for testing.

I'm pretty sure openal doesn't do midi.  I've used rtmidi, rtaudio, portaudio and libmidifile before when I wrote a softsynth.  The requirements are different for doing midi playback in a doom port.  I think doom ports use multiple libs.

For learning, I read tons of books, too many to name.  I could give you a list of books depending on topic.  I stay away from ""tutorials"" like the plague.

In Qor I have a system of doing shader selection and swaps based on the requirements of the object data.  Use #ifdef instead of if statements to decrease unnecessary branching at the expense of shaders swaps.  This goes for everything, but especially important for shaders: batch the render order of objects together with similar attributes or make it a sorting factor when you build your rendering system.  Minimize state/context switches.  Use a profiler religiously.
I don't usually do anything too advanced with shaders besides bump mapping, and style shaders like auto-dither, but I do have some future plans if things need to get more advanced.

We could talk more, send me an email: flipcoder@gmail.com","<div class=""md""><p>I haven&#39;t worked on it much this year.  I tinker with it every now and then and add features I need for each project.  I originally started it around 10 years ago but did a rewrite and added features as I learned things.</p>

<p>Multiplatform isn&#39;t too hard.  I use SDL for basic window and opengl context.  From there I make sure I test newer C++ features in msvc before adding them, since msvc lags behind linux compilers and mingw on windows has downsides with libs and speed.  MSVC is good, but has iterator debugging which slows down stuff massively when testing if you don&#39;t disable.  Use boost::filesystem or watch your path separators and mind your home/config locations per OS.  Also be weary that libs that say crossplatform may be unstable on one platform.  You may have to hand-select certain versions of libs and make a wrapper.  There will be annoyances that force you to do small fixes to get things to compile.  For builds I don&#39;t like using platform IDEs directly.  I prefer using build systems like premake so I can do it all from terminal and vim for convenience.  You&#39;ll need to bring your workflow with you across OSs for testing.</p>

<p>I&#39;m pretty sure openal doesn&#39;t do midi.  I&#39;ve used rtmidi, rtaudio, portaudio and libmidifile before when I wrote a softsynth.  The requirements are different for doing midi playback in a doom port.  I think doom ports use multiple libs.</p>

<p>For learning, I read tons of books, too many to name.  I could give you a list of books depending on topic.  I stay away from &quot;tutorials&quot; like the plague.</p>

<p>In Qor I have a system of doing shader selection and swaps based on the requirements of the object data.  Use #ifdef instead of if statements to decrease unnecessary branching at the expense of shaders swaps.  This goes for everything, but especially important for shaders: batch the render order of objects together with similar attributes or make it a sorting factor when you build your rendering system.  Minimize state/context switches.  Use a profiler religiously.
I don&#39;t usually do anything too advanced with shaders besides bump mapping, and style shaders like auto-dither, but I do have some future plans if things need to get more advanced.</p>

<p>We could talk more, send me an email: <a href=""mailto:flipcoder@gmail.com"">flipcoder@gmail.com</a></p>
</div>",1524015381.0,,False,dxjm3ll,False,t3_8apgra,t1_dxi8ckc,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dxjm3ll/,0,False,2,False,8apgra,Cplusplus,t5_2qh6x
744,sammyIsLife,Blew my damn mind more like it. Thank you very much. ,"<div class=""md""><p>Blew my damn mind more like it. Thank you very much. </p>
</div>",1523198458.0,,False,dx0myw3,False,t3_8apgra,t1_dx0khup,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0myw3/,1,False,8,False,8apgra,Cplusplus,t5_2qh6x
745,AGloriousDayForRain,Wow this looks great. Thanks!,"<div class=""md""><p>Wow this looks great. Thanks!</p>
</div>",1523200404.0,,False,dx0oojo,False,t3_8apgra,t1_dx0nbws,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0oojo/,0,False,2,False,8apgra,Cplusplus,t5_2qh6x
746,DOOMReboot,It's not nearly as complicated as it sounds. :),"<div class=""md""><p>It&#39;s not nearly as complicated as it sounds. :)</p>
</div>",1523198531.0,,False,dx0n111,True,t3_8apgra,t1_dx0myw3,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0n111/,1,False,6,False,8apgra,Cplusplus,t5_2qh6x
747,sammyIsLife,That begs another question. How does every texture even know where it’s suppose to go? I would imagine if you had to tell every wall what texture it’s suppose to have individually it would be more of pain in the rear than it’s worth to make video games. ,"<div class=""md""><p>That begs another question. How does every texture even know where it’s suppose to go? I would imagine if you had to tell every wall what texture it’s suppose to have individually it would be more of pain in the rear than it’s worth to make video games. </p>
</div>",1523199351.0,,False,dx0nqis,False,t3_8apgra,t1_dx0n111,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx0nqis/,2,False,2,False,8apgra,Cplusplus,t5_2qh6x
748,DOOMReboot,"Well, iD had its own world editor and there are some quite good recent ones out there in the modding community.  You construct the level, click on a wall in the 3D view mode, and select a texture to apply to it.  It's not a chore at all!

Internally, each wall segment has a texture ID computed at runtime which indexes into an array of all the textures loaded for the mission.","<div class=""md""><p>Well, iD had its own world editor and there are some quite good recent ones out there in the modding community.  You construct the level, click on a wall in the 3D view mode, and select a texture to apply to it.  It&#39;s not a chore at all!</p>

<p>Internally, each wall segment has a texture ID computed at runtime which indexes into an array of all the textures loaded for the mission.</p>
</div>",1523215195.0,,False,dx134oe,True,t3_8apgra,t1_dx0nqis,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx134oe/,0,False,2,False,8apgra,Cplusplus,t5_2qh6x
749,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1523215507.0,,1534879452.0,dx13fi2,False,t3_8apgra,t1_dx0nqis,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx13fi2/,1,False,2,False,8apgra,Cplusplus,t5_2qh6x
750,DOOMReboot,"> Doom is faux 3D and if OP is implementing the engine the way it was originally made, then texture mapping may be different.

I completely disagree with the statement that it's faux 3D.  I know there's a heated debate, but consider the following:  DOOM uses 2D vertexes along with height of a sector.  2D plus 1D (height) == 3D.  It may be more correct in saying that it is a 3D engine with certain constraints, because coordinates are definitely provided for each of the three dimensions.  

I'm using mostly the same texturing technique you are describing, though. :)","<div class=""md""><blockquote>
<p>Doom is faux 3D and if OP is implementing the engine the way it was originally made, then texture mapping may be different.</p>
</blockquote>

<p>I completely disagree with the statement that it&#39;s faux 3D.  I know there&#39;s a heated debate, but consider the following:  DOOM uses 2D vertexes along with height of a sector.  2D plus 1D (height) == 3D.  It may be more correct in saying that it is a 3D engine with certain constraints, because coordinates are definitely provided for each of the three dimensions.  </p>

<p>I&#39;m using mostly the same texturing technique you are describing, though. :)</p>
</div>",1523224670.0,,False,dx1ci04,True,t3_8apgra,t1_dx13fi2,/r/Cplusplus/comments/8apgra/been_creating_a_3d_game_engine_from_scratch_in_c/dx1ci04/,0,False,3,False,8apgra,Cplusplus,t5_2qh6x
751,TheSkiGeek,"…msys2 has `pacman` (maybe with a more limited set of packages) and CMake works fine on Windows to produce makefiles (if you’re building in an environment like msys or mingw that gives you a POSIX shell).  `vcpkg` also works pretty well if the stuff you need is in there.

Manually finding packages can be a pain, but you have the same problems on Linux if the packages aren’t in a nice package manager or if you need to juggle multiple versions of packages.","<div class=""md""><p>…msys2 has <code>pacman</code> (maybe with a more limited set of packages) and CMake works fine on Windows to produce makefiles (if you’re building in an environment like msys or mingw that gives you a POSIX shell).  <code>vcpkg</code> also works pretty well if the stuff you need is in there.</p>

<p>Manually finding packages can be a pain, but you have the same problems on Linux if the packages aren’t in a nice package manager or if you need to juggle multiple versions of packages.</p>
</div>",1661625100.0,,False,im17ewe,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im17ewe/,1,False,13,False,wz519o,Cplusplus,t5_2qh6x
752,dvali,"Windows makes it easy (Visual Studio) until you have an even slightly complex job to do and then it becomes all but impossible. Or certainly way more effort than it's worth. Unless you are developing a product for Windows, or absolutely must use some tool that only exists for Windows, I don't really see why you'd write C++ in Windows.

I generally use Ubuntu or some other Debian derivative, and \`sudo apt install cmake build-essential\` brings literally everything I need. Couldn't be easier. Half the time what I need is there already.

Theoretically Visual Studio will open and build a CMake project, but it's iffy at best.","<div class=""md""><p>Windows makes it easy (Visual Studio) until you have an even slightly complex job to do and then it becomes all but impossible. Or certainly way more effort than it&#39;s worth. Unless you are developing a product for Windows, or absolutely must use some tool that only exists for Windows, I don&#39;t really see why you&#39;d write C++ in Windows.</p>

<p>I generally use Ubuntu or some other Debian derivative, and `sudo apt install cmake build-essential` brings literally everything I need. Couldn&#39;t be easier. Half the time what I need is there already.</p>

<p>Theoretically Visual Studio will open and build a CMake project, but it&#39;s iffy at best.</p>
</div>",1661617088.0,,False,im0nyzs,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im0nyzs/,2,False,9,False,wz519o,Cplusplus,t5_2qh6x
753,AwabKhan,Truly agree my friend,"<div class=""md""><p>Truly agree my friend</p>
</div>",1661614401.0,,False,im0heb1,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im0heb1/,0,False,7,False,wz519o,Cplusplus,t5_2qh6x
754,RidderHaddock,"Why don't you use Visual Studio?
The tool chain  if not the full IDE.

It's usually the best way to do C++ on Windows.","<div class=""md""><p>Why don&#39;t you use Visual Studio?
The tool chain  if not the full IDE.</p>

<p>It&#39;s usually the best way to do C++ on Windows.</p>
</div>",1661632673.0,,False,im1p5nx,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im1p5nx/,0,False,7,False,wz519o,Cplusplus,t5_2qh6x
755,hawkxp71,"No. Linix driven packages are a nightmare on windows.

If you want to develop for Linux do so.

But when on windows, don't try to force a Linux mentality onto it.","<div class=""md""><p>No. Linix driven packages are a nightmare on windows.</p>

<p>If you want to develop for Linux do so.</p>

<p>But when on windows, don&#39;t try to force a Linux mentality onto it.</p>
</div>",1661625541.0,,False,im18h52,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im18h52/,1,False,7,False,wz519o,Cplusplus,t5_2qh6x
756,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1661667160.0,,False,im3jlrx,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im3jlrx/,1,False,2,False,wz519o,Cplusplus,t5_2qh6x
757,no-sig-available,">Programming C/C++ on windows (without using Visual Studio)

So you don't want to use the native tool, and then complain that the alternatives all suck?

Trying to program in a Linux style on Windows is *hard*, because most of the ported tools just fit badly. Perhaps the problem is not C++ or Windows?

And I wouldn't try using Visual Studio on Linux either. :-)","<div class=""md""><blockquote>
<p>Programming C/C++ on windows (without using Visual Studio)</p>
</blockquote>

<p>So you don&#39;t want to use the native tool, and then complain that the alternatives all suck?</p>

<p>Trying to program in a Linux style on Windows is <em>hard</em>, because most of the ported tools just fit badly. Perhaps the problem is not C++ or Windows?</p>

<p>And I wouldn&#39;t try using Visual Studio on Linux either. :-)</p>
</div>",1661677654.0,,False,im3wiim,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im3wiim/,1,False,2,False,wz519o,Cplusplus,t5_2qh6x
758,EstablishmentBig7956,"Visual basic


https://docs.microsoft.com/en-us/powershell/module/packagemanagement/install-package?view=powershell-7.2","<div class=""md""><p>Visual basic</p>

<p><a href=""https://docs.microsoft.com/en-us/powershell/module/packagemanagement/install-package?view=powershell-7.2"">https://docs.microsoft.com/en-us/powershell/module/packagemanagement/install-package?view=powershell-7.2</a></p>
</div>",1661614474.0,,False,im0hkvn,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im0hkvn/,0,False,0,False,wz519o,Cplusplus,t5_2qh6x
759,thesecretdave,"This was one reason I tried out, specifically, Fedora Linux as it has a lot of precompiled mingw dependencies for cross-compilation to windows. It’s actually very comfortable to work with most of the time. Would recommend.","<div class=""md""><p>This was one reason I tried out, specifically, Fedora Linux as it has a lot of precompiled mingw dependencies for cross-compilation to windows. It’s actually very comfortable to work with most of the time. Would recommend.</p>
</div>",1661617330.0,,False,im0ojvc,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im0ojvc/,1,False,1,False,wz519o,Cplusplus,t5_2qh6x
760,0nlyscams,Where else would you do it,"<div class=""md""><p>Where else would you do it</p>
</div>",1662741340.0,,False,inquchv,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/inquchv/,0,False,1,False,wz519o,Cplusplus,t5_2qh6x
761,SLEDfanB,"Lol, this was literally why I switched to Linux","<div class=""md""><p>Lol, this was literally why I switched to Linux</p>
</div>",1663264711.0,,False,iok5xwy,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/iok5xwy/,0,False,1,False,wz519o,Cplusplus,t5_2qh6x
762,,"Rust my friend, Rust.

I’m not here to bag on C++ nor Windows, but Rust is so simple to use on Windows, especially its built-in package manager, Cargo.","<div class=""md""><p>Rust my friend, Rust.</p>

<p>I’m not here to bag on C++ nor Windows, but Rust is so simple to use on Windows, especially its built-in package manager, Cargo.</p>
</div>",1663692636.0,,False,ip7ra5e,False,t3_wz519o,t3_wz519o,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/ip7ra5e/,0,False,1,False,wz519o,Cplusplus,t5_2qh6x
763,ialex32_2,"Also, CMake not working in MSYS2 feels... questionable. It sounds like they're trying to run CMake outside of the MSYS2 environment (either for 32-bit or 64-bit) with the packages installed within it, and then wondering why it's failing.","<div class=""md""><p>Also, CMake not working in MSYS2 feels... questionable. It sounds like they&#39;re trying to run CMake outside of the MSYS2 environment (either for 32-bit or 64-bit) with the packages installed within it, and then wondering why it&#39;s failing.</p>
</div>",1661626357.0,,False,im1afem,False,t3_wz519o,t1_im17ewe,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im1afem/,1,False,8,False,wz519o,Cplusplus,t5_2qh6x
764,No_Futuree,"Yeah linux is great fpr developing, until you have to use a debugger, then you're fucked...","<div class=""md""><p>Yeah linux is great fpr developing, until you have to use a debugger, then you&#39;re fucked...</p>
</div>",1661644380.0,,False,im2emi4,False,t3_wz519o,t1_im0nyzs,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im2emi4/,2,False,2,False,wz519o,Cplusplus,t5_2qh6x
765,clickmeimorganic,"Can I cross compile on Linux to windows? Ive seen packages for mingw, but not really sure.","<div class=""md""><p>Can I cross compile on Linux to windows? Ive seen packages for mingw, but not really sure.</p>
</div>",1661617214.0,,False,im0o9x9,True,t3_wz519o,t1_im0nyzs,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im0o9x9/,3,False,1,False,wz519o,Cplusplus,t5_2qh6x
766,ijustineezarik,Yup this is reddit most of these post are newbie ranting abt stuff they dont fully understand,"<div class=""md""><p>Yup this is reddit most of these post are newbie ranting abt stuff they dont fully understand</p>
</div>",1661673849.0,,False,im3s0oq,False,t3_wz519o,t1_im18h52,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im3s0oq/,1,False,2,False,wz519o,Cplusplus,t5_2qh6x
767,clickmeimorganic,"Tried that, cmake wouldnt find the vcpkgs. I cant even remember what went wrong at that point (that was after 24 hours of trying to compile this, no sleep). And yes, I did set the modules directory for cmake. I think I just assumed the standardised nature of Linux would somehow carry over to windows, as most of my c++ development has been on Linux. I also usually write unix makefiles, so learning cmake specifically for universal compilation then not working as intended is a real kick in the balls.

Not saying it doesn't work, just not in the specific circumstances of my machine and project.  I think it's time for a complete reinstall of windows anyway.","<div class=""md""><p>Tried that, cmake wouldnt find the vcpkgs. I cant even remember what went wrong at that point (that was after 24 hours of trying to compile this, no sleep). And yes, I did set the modules directory for cmake. I think I just assumed the standardised nature of Linux would somehow carry over to windows, as most of my c++ development has been on Linux. I also usually write unix makefiles, so learning cmake specifically for universal compilation then not working as intended is a real kick in the balls.</p>

<p>Not saying it doesn&#39;t work, just not in the specific circumstances of my machine and project.  I think it&#39;s time for a complete reinstall of windows anyway.</p>
</div>",1661812773.0,,False,imbc9sr,True,t3_wz519o,t1_im3jlrx,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/imbc9sr/,0,False,1,False,wz519o,Cplusplus,t5_2qh6x
768,clickmeimorganic,"I've edited the post, should have been clearer.","<div class=""md""><p>I&#39;ve edited the post, should have been clearer.</p>
</div>",1661690576.0,,False,im4dsi7,True,t3_wz519o,t1_im3wiim,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im4dsi7/,0,False,1,False,wz519o,Cplusplus,t5_2qh6x
769,clickmeimorganic,"I'll look on the AUR, thanks. If not I guess I'll just use a VM.","<div class=""md""><p>I&#39;ll look on the AUR, thanks. If not I guess I&#39;ll just use a VM.</p>
</div>",1661618884.0,,False,im0sapp,True,t3_wz519o,t1_im0ojvc,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im0sapp/,1,False,1,False,wz519o,Cplusplus,t5_2qh6x
770,KingAggressive1498,I've also never been able to get CMake - from the msys2 package manager - to use GCC - also installed through the msys2 package manager - with the msys2 terminal. It always wants Visual C++.,"<div class=""md""><p>I&#39;ve also never been able to get CMake - from the msys2 package manager - to use GCC - also installed through the msys2 package manager - with the msys2 terminal. It always wants Visual C++.</p>
</div>",1661836689.0,,False,imco9l3,False,t3_wz519o,t1_im1afem,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/imco9l3/,0,False,2,False,wz519o,Cplusplus,t5_2qh6x
771,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1661670892.0,,False,im3oe66,False,t3_wz519o,t1_im2emi4,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im3oe66/,1,False,3,False,wz519o,Cplusplus,t5_2qh6x
772,dvali,"It's true that gdb is way less user friendly, but many editors have a nice interface built-in, if that's your jam. Can be flaky to configure though. Still, on balance, I definitely prefer Linux.

Actually if you twist my arm the things I really like about Visual Studio are the high quality debugging and especially the memory viewer. Haven't found a way to view memory in VS Code yet!","<div class=""md""><p>It&#39;s true that gdb is way less user friendly, but many editors have a nice interface built-in, if that&#39;s your jam. Can be flaky to configure though. Still, on balance, I definitely prefer Linux.</p>

<p>Actually if you twist my arm the things I really like about Visual Studio are the high quality debugging and especially the memory viewer. Haven&#39;t found a way to view memory in VS Code yet!</p>
</div>",1661675525.0,,False,im3u0zj,False,t3_wz519o,t1_im2emi4,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im3u0zj/,0,False,2,False,wz519o,Cplusplus,t5_2qh6x
773,slapnuttz,So clang and llvm might let you do that. You’ll still need to be careful of system calls and compiler extensions.,"<div class=""md""><p>So clang and llvm might let you do that. You’ll still need to be careful of system calls and compiler extensions.</p>
</div>",1661618876.0,,False,im0sa0o,False,t3_wz519o,t1_im0o9x9,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im0sa0o/,0,False,1,False,wz519o,Cplusplus,t5_2qh6x
774,linmanfu,"Yes, you can. A project I'm involved with (r/simutrans) cross-compiles on Ubuntu for Windows. I think you have to install special cross-compilation versions of your libraries. But even the person who set it up doesn't understand exactly how he did it. 😟 Also, we can't get cross-compiled builds to stay in sync with Visual Studio builds.

By the way, have you tried using vcpkg as a package manager on Windows? I am absolutely not an expert on this, but I believe you can use it separately from VS. I am pretty certain that I have used vcpkg for dependencies before compiling in mingw.","<div class=""md""><p>Yes, you can. A project I&#39;m involved with (<a href=""/r/simutrans"">r/simutrans</a>) cross-compiles on Ubuntu for Windows. I think you have to install special cross-compilation versions of your libraries. But even the person who set it up doesn&#39;t understand exactly how he did it. 😟 Also, we can&#39;t get cross-compiled builds to stay in sync with Visual Studio builds.</p>

<p>By the way, have you tried using vcpkg as a package manager on Windows? I am absolutely not an expert on this, but I believe you can use it separately from VS. I am pretty certain that I have used vcpkg for dependencies before compiling in mingw.</p>
</div>",1661619345.0,,False,im0tf0t,False,t3_wz519o,t1_im0o9x9,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im0tf0t/,1,False,1,False,wz519o,Cplusplus,t5_2qh6x
775,dvali,Probably. Never tried because I don't really write anything for Windows. It's almost always a Linux environment or bare metal for me.,"<div class=""md""><p>Probably. Never tried because I don&#39;t really write anything for Windows. It&#39;s almost always a Linux environment or bare metal for me.</p>
</div>",1661624635.0,,False,im16aco,False,t3_wz519o,t1_im0o9x9,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im16aco/,0,False,1,False,wz519o,Cplusplus,t5_2qh6x
776,clickmeimorganic,"sorry, but I'm not a newbie and I do understand that windows is not posix compliant OS. Have you used Linux before?","<div class=""md""><p>sorry, but I&#39;m not a newbie and I do understand that windows is not posix compliant OS. Have you used Linux before?</p>
</div>",1661813085.0,,False,imbcygb,True,t3_wz519o,t1_im3s0oq,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/imbcygb/,0,False,1,False,wz519o,Cplusplus,t5_2qh6x
777,,[removed],"<div class=""md""><p>[removed]</p>
</div>",1661619276.0,,False,im0t909,False,t3_wz519o,t1_im0sapp,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im0t909/,2,False,1,False,wz519o,Cplusplus,t5_2qh6x
778,No_Futuree,"I have only used Eclipse in the past and the experience using the dubugger was faaar from ideal, although, to be fair, Eclipse is a terrible IDE...The fact that you think a debbugger is ""perfectly usable"" from the command line makes me doubt you have done any serious debugging with it lol","<div class=""md""><p>I have only used Eclipse in the past and the experience using the dubugger was faaar from ideal, although, to be fair, Eclipse is a terrible IDE...The fact that you think a debbugger is &quot;perfectly usable&quot; from the command line makes me doubt you have done any serious debugging with it lol</p>
</div>",1661683848.0,,1661684056.0,im43v0g,False,t3_wz519o,t1_im3oe66,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im43v0g/,1,False,1,False,wz519o,Cplusplus,t5_2qh6x
779,clickmeimorganic,"thank you, I'll try that now. I installed vcpkg but something or other didn't work, can't remember.

Anyway, I'm going to try cross compiling. I used cmake because I thought it was plug and play with windows (ofc having to install deps and edit lists), but now I've realised it's not that easy.","<div class=""md""><p>thank you, I&#39;ll try that now. I installed vcpkg but something or other didn&#39;t work, can&#39;t remember.</p>

<p>Anyway, I&#39;m going to try cross compiling. I used cmake because I thought it was plug and play with windows (ofc having to install deps and edit lists), but now I&#39;ve realised it&#39;s not that easy.</p>
</div>",1661690073.0,,False,im4cxsb,True,t3_wz519o,t1_im0tf0t,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im4cxsb/,0,False,2,False,wz519o,Cplusplus,t5_2qh6x
780,TheSkiGeek,"WSL2 *is* a VM.

WSL(1) is an abstraction layer, like WINE but in reverse.","<div class=""md""><p>WSL2 <em>is</em> a VM.</p>

<p>WSL(1) is an abstraction layer, like WINE but in reverse.</p>
</div>",1661625306.0,,False,im17x04,False,t3_wz519o,t1_im0t909,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im17x04/,1,False,2,False,wz519o,Cplusplus,t5_2qh6x
781,clickmeimorganic,"Exactly what I'm using now, problem is opengl through x11 forwarding has terrible performance (not sure how virtual machine graphics work)","<div class=""md""><p>Exactly what I&#39;m using now, problem is opengl through x11 forwarding has terrible performance (not sure how virtual machine graphics work)</p>
</div>",1661690688.0,,False,im4dzhi,True,t3_wz519o,t1_im0t909,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im4dzhi/,1,False,1,False,wz519o,Cplusplus,t5_2qh6x
782,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1661698757.0,,False,im4uu0k,False,t3_wz519o,t1_im43v0g,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im4uu0k/,1,False,0,False,wz519o,Cplusplus,t5_2qh6x
783,,[removed],"<div class=""md""><p>[removed]</p>
</div>",1661625492.0,,False,im18cyc,False,t3_wz519o,t1_im17x04,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im18cyc/,1,False,1,False,wz519o,Cplusplus,t5_2qh6x
784,,[removed],"<div class=""md""><p>[removed]</p>
</div>",1661693008.0,,False,im4icft,False,t3_wz519o,t1_im4dzhi,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im4icft/,1,False,1,False,wz519o,Cplusplus,t5_2qh6x
785,No_Futuree,"I didn't miss anything, you said gdb was perfectly usable from the command line, not me...As for the more modern IDEs, I can't say because I haven't touched them in Linux, if you are right though, that'd be a huge improvement since I last developed under Linux.

Sometimes debugging is not only about finding bugs but also about understanding how a system works so I want to have a flexibile and confortable environment while doing it. Also, I work in AAA games so, yeah, there are pretty serious issue on the codebase lol...

Now answer my question, have you ever used gdb from the command line to debug any complex system?","<div class=""md""><p>I didn&#39;t miss anything, you said gdb was perfectly usable from the command line, not me...As for the more modern IDEs, I can&#39;t say because I haven&#39;t touched them in Linux, if you are right though, that&#39;d be a huge improvement since I last developed under Linux.</p>

<p>Sometimes debugging is not only about finding bugs but also about understanding how a system works so I want to have a flexibile and confortable environment while doing it. Also, I work in AAA games so, yeah, there are pretty serious issue on the codebase lol...</p>

<p>Now answer my question, have you ever used gdb from the command line to debug any complex system?</p>
</div>",1661758116.0,,False,im8a1bi,False,t3_wz519o,t1_im4uu0k,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im8a1bi/,0,False,1,False,wz519o,Cplusplus,t5_2qh6x
786,TheSkiGeek,"WSL2 **is** a VM.  It’s literally Hyper-V.  If you’re telling people to use WSL2 specifically you’re asking them to use a VM, you’re only going to confuse them by saying it’s not one.","<div class=""md""><p>WSL2 <strong>is</strong> a VM.  It’s literally Hyper-V.  If you’re telling people to use WSL2 specifically you’re asking them to use a VM, you’re only going to confuse them by saying it’s not one.</p>
</div>",1661625889.0,,False,im19axk,False,t3_wz519o,t1_im18cyc,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im19axk/,0,False,2,False,wz519o,Cplusplus,t5_2qh6x
787,clickmeimorganic,"exactly what I do too, only problem is compiling for Windows.","<div class=""md""><p>exactly what I do too, only problem is compiling for Windows.</p>
</div>",1661694110.0,,False,im4ki4a,True,t3_wz519o,t1_im4icft,/r/Cplusplus/comments/wz519o/maybe_im_just_an_idiot_but_i_hate_programming_in/im4ki4a/,0,False,1,False,wz519o,Cplusplus,t5_2qh6x
788,Affectionate-Win-617,"Frameworks: Unreal Engine, Qt, JUCE

Audio stuff: tracktion_engine, flac, ogg

Other things: RapidJSON, GoogleTest, TensorFlow, fmt

All of these are heavily used.","<div class=""md""><p>Frameworks: Unreal Engine, Qt, JUCE</p>

<p>Audio stuff: tracktion_engine, flac, ogg</p>

<p>Other things: RapidJSON, GoogleTest, TensorFlow, fmt</p>

<p>All of these are heavily used.</p>
</div>",1648657130.0,,False,i2qcbws,False,t3_ts4nq1,t3_ts4nq1,/r/Cplusplus/comments/ts4nq1/can_you_recommend_a_good_c_open_source_project/i2qcbws/,1,False,10,False,ts4nq1,Cplusplus,t5_2qh6x
789,MeanMachine7878,"Eigen math library, very cool template stuff.","<div class=""md""><p>Eigen math library, very cool template stuff.</p>
</div>",1648704758.0,,False,i2tb8lo,False,t3_ts4nq1,t3_ts4nq1,/r/Cplusplus/comments/ts4nq1/can_you_recommend_a_good_c_open_source_project/i2tb8lo/,1,False,4,False,ts4nq1,Cplusplus,t5_2qh6x
790,Arcadiadiv,You could consider contributing to the Godot Engine,"<div class=""md""><p>You could consider contributing to the Godot Engine</p>
</div>",1648665688.0,,False,i2qy2om,False,t3_ts4nq1,t3_ts4nq1,/r/Cplusplus/comments/ts4nq1/can_you_recommend_a_good_c_open_source_project/i2qy2om/,0,False,5,False,ts4nq1,Cplusplus,t5_2qh6x
791,open_risk,poco (portable components) https://pocoproject.org/,"<div class=""md""><p>poco (portable components) <a href=""https://pocoproject.org/"">https://pocoproject.org/</a></p>
</div>",1648715311.0,,False,i2toh3q,False,t3_ts4nq1,t3_ts4nq1,/r/Cplusplus/comments/ts4nq1/can_you_recommend_a_good_c_open_source_project/i2toh3q/,0,False,3,False,ts4nq1,Cplusplus,t5_2qh6x
792,jamolnng,[SerenityOS](https://github.com/SerenityOS/serenity),"<div class=""md""><p><a href=""https://github.com/SerenityOS/serenity"">SerenityOS</a></p>
</div>",1648666416.0,,False,i2qzxr0,False,t3_ts4nq1,t3_ts4nq1,/r/Cplusplus/comments/ts4nq1/can_you_recommend_a_good_c_open_source_project/i2qzxr0/,0,False,7,False,ts4nq1,Cplusplus,t5_2qh6x
793,lengocthuong15,Glogg or klogg,"<div class=""md""><p>Glogg or klogg</p>
</div>",1648645954.0,,False,i2plm1y,False,t3_ts4nq1,t3_ts4nq1,/r/Cplusplus/comments/ts4nq1/can_you_recommend_a_good_c_open_source_project/i2plm1y/,0,False,3,False,ts4nq1,Cplusplus,t5_2qh6x
794,elvisoric,https://github.com/skypjack/entt,"<div class=""md""><p><a href=""https://github.com/skypjack/entt"">https://github.com/skypjack/entt</a></p>
</div>",1648680760.0,,False,i2rz4ww,False,t3_ts4nq1,t3_ts4nq1,/r/Cplusplus/comments/ts4nq1/can_you_recommend_a_good_c_open_source_project/i2rz4ww/,0,False,3,False,ts4nq1,Cplusplus,t5_2qh6x
795,,Gogot and Opengl are two that I found while I was searching. You can search for easier ones on github cuz these two are way too complex if you are new.,"<div class=""md""><p>Gogot and Opengl are two that I found while I was searching. You can search for easier ones on github cuz these two are way too complex if you are new.</p>
</div>",1648643061.0,,False,i2pfxpz,False,t3_ts4nq1,t3_ts4nq1,/r/Cplusplus/comments/ts4nq1/can_you_recommend_a_good_c_open_source_project/i2pfxpz/,0,False,2,False,ts4nq1,Cplusplus,t5_2qh6x
796,LGTMe,LLVM,"<div class=""md""><p>LLVM</p>
</div>",1648717239.0,,False,i2tqnjs,False,t3_ts4nq1,t3_ts4nq1,/r/Cplusplus/comments/ts4nq1/can_you_recommend_a_good_c_open_source_project/i2tqnjs/,0,False,1,False,ts4nq1,Cplusplus,t5_2qh6x
797,latest_ali, Good stuff 👍,"<div class=""md""><p>Good stuff 👍</p>
</div>",1648657917.0,,False,i2qebhh,True,t3_ts4nq1,t1_i2qcbws,/r/Cplusplus/comments/ts4nq1/can_you_recommend_a_good_c_open_source_project/i2qebhh/,0,False,3,False,ts4nq1,Cplusplus,t5_2qh6x
798,latest_ali,👍,"<div class=""md""><p>👍</p>
</div>",1648715631.0,,False,i2tou7p,True,t3_ts4nq1,t1_i2tb8lo,/r/Cplusplus/comments/ts4nq1/can_you_recommend_a_good_c_open_source_project/i2tou7p/,0,False,1,False,ts4nq1,Cplusplus,t5_2qh6x
799,FrozenFirebat,"It is a lot easier to think about programming languages as needs based. You can write a program to do just about anything you want in any modern programming language. Python is a good example. You can get results from programming in Python a lot faster than in C++, on a large number of projects. So why would you want to use another language? Python doesn't give you the low level control over the program that C++ does. With C++ you can tell the program how it's supposed to handle things closer to the hardware, like memory allocations.  

Basically, if you think efficiency is important, you'd use C++ over Python. Where does this become important? Game Development (specifically the engine -- rendering, physics, and other expensive computationally processes will be written in C++, while it might interface into another, easier language for simpler stuff. Unity and Godot do this, Unity being written in C++ and consumer projects being coded in C#. Godot has support for C#, as well as a python based scripting language called GDscript.  

High end financial software will also likely be written in C++, sometimes hardware level stuff like robots as well, but poking around I find that a lot of Robotics are either legacy code in C, or they are simply written in C because the programmer is used to using C for robotics. (sometimes even see COBOL used in robotics).  

A lot of projects that need someone to maintain them will also be in C++, because it's been a popular language for so many years","<div class=""md""><p>It is a lot easier to think about programming languages as needs based. You can write a program to do just about anything you want in any modern programming language. Python is a good example. You can get results from programming in Python a lot faster than in C++, on a large number of projects. So why would you want to use another language? Python doesn&#39;t give you the low level control over the program that C++ does. With C++ you can tell the program how it&#39;s supposed to handle things closer to the hardware, like memory allocations.  </p>

<p>Basically, if you think efficiency is important, you&#39;d use C++ over Python. Where does this become important? Game Development (specifically the engine -- rendering, physics, and other expensive computationally processes will be written in C++, while it might interface into another, easier language for simpler stuff. Unity and Godot do this, Unity being written in C++ and consumer projects being coded in C#. Godot has support for C#, as well as a python based scripting language called GDscript.  </p>

<p>High end financial software will also likely be written in C++, sometimes hardware level stuff like robots as well, but poking around I find that a lot of Robotics are either legacy code in C, or they are simply written in C because the programmer is used to using C for robotics. (sometimes even see COBOL used in robotics).  </p>

<p>A lot of projects that need someone to maintain them will also be in C++, because it&#39;s been a popular language for so many years</p>
</div>",1531480081.0,,False,e2b7mxz,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2b7mxz/,2,False,36,False,8yilkw,Cplusplus,t5_2qh6x
800,yvvan666,Learn C++. It's not easy but if it goes well you will be able to switch to any other language quite fast.,"<div class=""md""><p>Learn C++. It&#39;s not easy but if it goes well you will be able to switch to any other language quite fast.</p>
</div>",1531478658.0,,False,e2b6tt0,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2b6tt0/,2,False,16,False,8yilkw,Cplusplus,t5_2qh6x
801,Aleriya,"C++ partners well with other languages. Many Python libraries are written in C++. Node.js and native modules are also C++.

Pairing C++ with a higher-level language can be a nice ""best of both worlds"" situation.","<div class=""md""><p>C++ partners well with other languages. Many Python libraries are written in C++. Node.js and native modules are also C++.</p>

<p>Pairing C++ with a higher-level language can be a nice &quot;best of both worlds&quot; situation.</p>
</div>",1531490903.0,,False,e2bgrhj,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2bgrhj/,0,False,12,False,8yilkw,Cplusplus,t5_2qh6x
802,Yaahallo,"Flexibility. Cpp is one of the least restrictive languages feature wise. I think it's not nearly as ergonomic as some modern languages and there's a billion gotchyas but it's fast and ubiquitous. All of this power comes with a price though, there's a famous quote by bjarne stroustrup ""C makes it easy to shoot yourself in the foot; c++ makes it harder, but when you do it blows your whole leg off."" 

If youre interested in programming languages that directly compete with cpp, rust comes to mind. Its similar to cpp and it makes it even harder to shoot yourself in the foot, but it's far more restrictive until you decide to bust out the unsafe {} code. It's definitely something to pay attention too if you're interested in game programming and robotics, less so AI I think.","<div class=""md""><p>Flexibility. Cpp is one of the least restrictive languages feature wise. I think it&#39;s not nearly as ergonomic as some modern languages and there&#39;s a billion gotchyas but it&#39;s fast and ubiquitous. All of this power comes with a price though, there&#39;s a famous quote by bjarne stroustrup &quot;C makes it easy to shoot yourself in the foot; c++ makes it harder, but when you do it blows your whole leg off.&quot; </p>

<p>If youre interested in programming languages that directly compete with cpp, rust comes to mind. Its similar to cpp and it makes it even harder to shoot yourself in the foot, but it&#39;s far more restrictive until you decide to bust out the unsafe {} code. It&#39;s definitely something to pay attention too if you&#39;re interested in game programming and robotics, less so AI I think.</p>
</div>",1531485326.0,,1531485514.0,e2bbce6,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2bbce6/,1,False,7,False,8yilkw,Cplusplus,t5_2qh6x
803,warpod,"C++ 

pros: fast, flexible

cons: steep learning curve, uninitialized variables","<div class=""md""><p>C++ </p>

<p>pros: fast, flexible</p>

<p>cons: steep learning curve, uninitialized variables</p>
</div>",1531487679.0,,False,e2bdfet,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2bdfet/,1,False,6,False,8yilkw,Cplusplus,t5_2qh6x
804,Sqeaky,"The reason I prefer c++ for many of my projects is that it allows me to define types very precisely while giving me low level kinds of performance.

Let me unpack that, there is a lot there. Because C++ includes most of C it is entirely possible to write a program that munges 
 a bunch of bits and drops to assembly and to do this without ever introducing a class or structure. This is terrible, lots of people do it and lots of people think this is C++. In C++ I can wrap some low-level munging bits in a nice tidy class. Perhaps the GPU, some database connection or some external device like a motor or thermocouple requires a very specific binary format to do its job, with C++ I can define classes for messages in that binary format and classes for sending those messages and even more classes for receiving those messages.

The end result of intelligently building up abstraction layers is that a programmer winds up with something that feels like a high-level language when in actuality they have controlled every bit. Development in C++ can start off slow, it can take a long time to get that motor controller just right. Once you have that motor controller using it is easy because the type system is strong, and barring some template metaprogramming shenanigans the error messages are often easy to understand. If you are building a program from a large number of these well designed types then you will have a hard time writing bugs because the types enforce their own use. If you combine this with good unit tests you might go years without needing the debugger.

This is different than writing Java because it has poor control over resources at the lowest level. I have tried writing large projects in Java and eventually the lack of resource management gets me. There is always some corner of the project dedicated to managing something in a hacky way. I'm not talking about just memory, but cleaning up mutexes, launched processes, or other resources is a huge pain in a language like Java because it all needs to be explicitly coded. If there's a method on a class that terminates a database connection it will likely need to be called manually at some point, the tools for doing this automatically are just very primitive. Don't get me wrong, this has gotten better in Java 9 but it's still not as good as C++ was 15 years ago. Destructors are almost magical, and they allow cleaning up of any arbitrary resources, even putting motors back into a given position in a predictable way. When you are called into work at 2 in the morning because I'm system somewhere ran out of memory or database connections or whatever, it will become clear why finalizers are not as good as destructors.

This is different than writing Ruby or Python because neither of them will catch simple type errors. Once a project gets to a certain size multiple people would likely start working on it. I wrote a small video game, fewer than 5,000 Lines, and some of the bugs were ridiculous. When refactoring code is easy to remove a variable's creation and use it later, despite this being a trivial bug to catch at compile time. There was another situation where I had a container of XY coordinates for tracking particles on the screen. Somehow a random selection of my XY coordinates had more XY coordinates for their X value. In a strongly typed language an XY coordinate would be rigidly defined as two floats or two integers. Any attempts to assign something else there would be a compilation error. Because in one part of the code I accidentally use a comma instead of a period the dynamic syntax of the language thought I was putting two values into 1 place. I had unit tests for all the testable components of the video game, easily 80% or more of the game at this point in time, but there's some code that wired this stuff together and because my bug was in there I was entirely on my own. Took several hours to find, and that would have been enough time to write several features.

With C++ I can define the binary format of messages going to a motor controller and precisely layout XY coordinates for rendering anything to a screen and in doing so I can build up a powerful domain specific language that lets me rapidly develop. I can pay an upfront cost once to create a highly productive environment in the future.

Edit - I fixed some brain-dead spelling and grammar errors. ","<div class=""md""><p>The reason I prefer c++ for many of my projects is that it allows me to define types very precisely while giving me low level kinds of performance.</p>

<p>Let me unpack that, there is a lot there. Because C++ includes most of C it is entirely possible to write a program that munges 
 a bunch of bits and drops to assembly and to do this without ever introducing a class or structure. This is terrible, lots of people do it and lots of people think this is C++. In C++ I can wrap some low-level munging bits in a nice tidy class. Perhaps the GPU, some database connection or some external device like a motor or thermocouple requires a very specific binary format to do its job, with C++ I can define classes for messages in that binary format and classes for sending those messages and even more classes for receiving those messages.</p>

<p>The end result of intelligently building up abstraction layers is that a programmer winds up with something that feels like a high-level language when in actuality they have controlled every bit. Development in C++ can start off slow, it can take a long time to get that motor controller just right. Once you have that motor controller using it is easy because the type system is strong, and barring some template metaprogramming shenanigans the error messages are often easy to understand. If you are building a program from a large number of these well designed types then you will have a hard time writing bugs because the types enforce their own use. If you combine this with good unit tests you might go years without needing the debugger.</p>

<p>This is different than writing Java because it has poor control over resources at the lowest level. I have tried writing large projects in Java and eventually the lack of resource management gets me. There is always some corner of the project dedicated to managing something in a hacky way. I&#39;m not talking about just memory, but cleaning up mutexes, launched processes, or other resources is a huge pain in a language like Java because it all needs to be explicitly coded. If there&#39;s a method on a class that terminates a database connection it will likely need to be called manually at some point, the tools for doing this automatically are just very primitive. Don&#39;t get me wrong, this has gotten better in Java 9 but it&#39;s still not as good as C++ was 15 years ago. Destructors are almost magical, and they allow cleaning up of any arbitrary resources, even putting motors back into a given position in a predictable way. When you are called into work at 2 in the morning because I&#39;m system somewhere ran out of memory or database connections or whatever, it will become clear why finalizers are not as good as destructors.</p>

<p>This is different than writing Ruby or Python because neither of them will catch simple type errors. Once a project gets to a certain size multiple people would likely start working on it. I wrote a small video game, fewer than 5,000 Lines, and some of the bugs were ridiculous. When refactoring code is easy to remove a variable&#39;s creation and use it later, despite this being a trivial bug to catch at compile time. There was another situation where I had a container of XY coordinates for tracking particles on the screen. Somehow a random selection of my XY coordinates had more XY coordinates for their X value. In a strongly typed language an XY coordinate would be rigidly defined as two floats or two integers. Any attempts to assign something else there would be a compilation error. Because in one part of the code I accidentally use a comma instead of a period the dynamic syntax of the language thought I was putting two values into 1 place. I had unit tests for all the testable components of the video game, easily 80% or more of the game at this point in time, but there&#39;s some code that wired this stuff together and because my bug was in there I was entirely on my own. Took several hours to find, and that would have been enough time to write several features.</p>

<p>With C++ I can define the binary format of messages going to a motor controller and precisely layout XY coordinates for rendering anything to a screen and in doing so I can build up a powerful domain specific language that lets me rapidly develop. I can pay an upfront cost once to create a highly productive environment in the future.</p>

<p>Edit - I fixed some brain-dead spelling and grammar errors. </p>
</div>",1531485164.0,,1531578014.0,e2bb7ja,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2bb7ja/,1,False,10,False,8yilkw,Cplusplus,t5_2qh6x
805,ZorbaTHut,"Gaming development right now is part C++, part C#. C# is used almost entirely with developers who use Unity. It's much easier to write than C++ and much harder to straight-up crash your game; the tradeoff is that it's also much harder to make fast.

On the other hand, most Unity games don't care that much about performance. As long as they don't do anything blatantly inefficient they'll be Fast Enough.

For larger AAA games, or games where performance is critical, it tends to be C++. This is a relatively small number of actual games but a disproportionately large percentage of game development.

Some developers are looking seriously into Rust, and it won't surprise me if Rust, eventually, kinda eats C++'s lunch. But this will likely take a decade or two, at a *minimum*, due to the massive amount of working C++ code that exists today.

So there's the answer:

* C# is ""better"" for gamedev if performance is less important than development speed
* Rust may be ""better"" for gamedev if you're okay throwing away all legacy code and starting from scratch

I know there's some AI/robotics groups that are also looking into Rust; in general I'd expect them to embrace it more rapidly than gamedev.","<div class=""md""><p>Gaming development right now is part C++, part C#. C# is used almost entirely with developers who use Unity. It&#39;s much easier to write than C++ and much harder to straight-up crash your game; the tradeoff is that it&#39;s also much harder to make fast.</p>

<p>On the other hand, most Unity games don&#39;t care that much about performance. As long as they don&#39;t do anything blatantly inefficient they&#39;ll be Fast Enough.</p>

<p>For larger AAA games, or games where performance is critical, it tends to be C++. This is a relatively small number of actual games but a disproportionately large percentage of game development.</p>

<p>Some developers are looking seriously into Rust, and it won&#39;t surprise me if Rust, eventually, kinda eats C++&#39;s lunch. But this will likely take a decade or two, at a <em>minimum</em>, due to the massive amount of working C++ code that exists today.</p>

<p>So there&#39;s the answer:</p>

<ul>
<li>C# is &quot;better&quot; for gamedev if performance is less important than development speed</li>
<li>Rust may be &quot;better&quot; for gamedev if you&#39;re okay throwing away all legacy code and starting from scratch</li>
</ul>

<p>I know there&#39;s some AI/robotics groups that are also looking into Rust; in general I&#39;d expect them to embrace it more rapidly than gamedev.</p>
</div>",1531493624.0,,False,e2bjvgp,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2bjvgp/,0,False,4,False,8yilkw,Cplusplus,t5_2qh6x
806,ifelsemonkey,Have you heard the findings in big datacenters? That if those always-on running services were written in C++ it could save billions of eletricity costs. That ROI is real.,"<div class=""md""><p>Have you heard the findings in big datacenters? That if those always-on running services were written in C++ it could save billions of eletricity costs. That ROI is real.</p>
</div>",1531548722.0,,False,e2d4cke,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2d4cke/,1,False,4,False,8yilkw,Cplusplus,t5_2qh6x
807,mredding,"C++ gives you what is so rare in application languages, well defined destruction times. The responsibility of knowing when memory is freed, and how an object is destroyed is on you. This adds complexity, but it also means you can ensure it doesn't happen along the critical path. In contrast, a garbage collector can only be guided, you never know when a sweep is actually going to occur.","<div class=""md""><p>C++ gives you what is so rare in application languages, well defined destruction times. The responsibility of knowing when memory is freed, and how an object is destroyed is on you. This adds complexity, but it also means you can ensure it doesn&#39;t happen along the critical path. In contrast, a garbage collector can only be guided, you never know when a sweep is actually going to occur.</p>
</div>",1531513694.0,,False,e2c8yol,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2c8yol/,2,False,3,False,8yilkw,Cplusplus,t5_2qh6x
808,audigex,"The full answer can be a lot more nuanced than this but basically

**C++ is compiled to machine code/binary**

Most other languages we compare C++ to (C#, Java, Python etc) are either *interpreted* (read line by line at run time), *JIT compiled* (compiled when called), or *compiled to bytecode* (which is kind of machine code, but for a virtual machine which then converts it to machine code)

All of these three techniques are, generally, slower than C++. That means C++ is one of the best choices for **computationally intensive work**. Gaming and AI are certainly two areas which are computationally expensive, which is why most game engines and AI software are written (or at least predominantly written) in C++ - although they may have portions in other languages.

Other languages, though, have other advantages. Java or .NET Core (C#) code, for example, can be ""built"" once and then deployed to any machine with the correct virtual machine/runtime environment. They also have simpler (for the programmer) memory management. These things can be much nicer for the developer, and are often (although not *always*) better.

Because of the lack of ""assistance"" in C++, it's a lot easier to make a mistake in C++ than in C#, which slows development down. You also have to do relatively more of the ""legwork"" getting libraries you need, managing memory etc. That's the simple version of the tradeoff with C++: development is (usually) slower, but the end result is (usually) faster

The basic rule of thumb is that C++ code runs faster, but C#/Python/Java etc can be written much faster. Python, particularly, is fantastic for writing prototypes fast. For any software that isn't constantly doing complex math or other computationally expensive work, you'll likely get your project finished faster in these languages.

Now I'll note here that everything I've said is a generalization - there are ways to make C#/Java/Python faster, and if you write C++ badly you can make it perform worse than those languages. Equally it's possible to write software in C++ fast. But, at the most basic level: C++ run fast, C# etc develop fast.

Personally I default to C#, as it's a much more enjoyable environment to develop in, especially with .NET Core being a lot faster than old .NET - as time goes by, the performance gap between C++ and other languages narrows. I tend to use C++ only where needed for high performance applications, and often then I'll only create a utility application in C++, which feeds results back to a main C# program.","<div class=""md""><p>The full answer can be a lot more nuanced than this but basically</p>

<p><strong>C++ is compiled to machine code/binary</strong></p>

<p>Most other languages we compare C++ to (C#, Java, Python etc) are either <em>interpreted</em> (read line by line at run time), <em>JIT compiled</em> (compiled when called), or <em>compiled to bytecode</em> (which is kind of machine code, but for a virtual machine which then converts it to machine code)</p>

<p>All of these three techniques are, generally, slower than C++. That means C++ is one of the best choices for <strong>computationally intensive work</strong>. Gaming and AI are certainly two areas which are computationally expensive, which is why most game engines and AI software are written (or at least predominantly written) in C++ - although they may have portions in other languages.</p>

<p>Other languages, though, have other advantages. Java or .NET Core (C#) code, for example, can be &quot;built&quot; once and then deployed to any machine with the correct virtual machine/runtime environment. They also have simpler (for the programmer) memory management. These things can be much nicer for the developer, and are often (although not <em>always</em>) better.</p>

<p>Because of the lack of &quot;assistance&quot; in C++, it&#39;s a lot easier to make a mistake in C++ than in C#, which slows development down. You also have to do relatively more of the &quot;legwork&quot; getting libraries you need, managing memory etc. That&#39;s the simple version of the tradeoff with C++: development is (usually) slower, but the end result is (usually) faster</p>

<p>The basic rule of thumb is that C++ code runs faster, but C#/Python/Java etc can be written much faster. Python, particularly, is fantastic for writing prototypes fast. For any software that isn&#39;t constantly doing complex math or other computationally expensive work, you&#39;ll likely get your project finished faster in these languages.</p>

<p>Now I&#39;ll note here that everything I&#39;ve said is a generalization - there are ways to make C#/Java/Python faster, and if you write C++ badly you can make it perform worse than those languages. Equally it&#39;s possible to write software in C++ fast. But, at the most basic level: C++ run fast, C# etc develop fast.</p>

<p>Personally I default to C#, as it&#39;s a much more enjoyable environment to develop in, especially with .NET Core being a lot faster than old .NET - as time goes by, the performance gap between C++ and other languages narrows. I tend to use C++ only where needed for high performance applications, and often then I&#39;ll only create a utility application in C++, which feeds results back to a main C# program.</p>
</div>",1531483212.0,,False,e2b9pah,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2b9pah/,0,False,3,False,8yilkw,Cplusplus,t5_2qh6x
809,__nullptr_t,"Static types, good libraries for reasoning about object lifetime, reasonable generic / metaprogramming.

I wouldn't use python even if it where faster. Type systems and explicit ownership semantics is a good thing.

Haskell is a good language to learn as well. Learning to think in Haskell actually is actually similar to metaprogramming in C++.","<div class=""md""><p>Static types, good libraries for reasoning about object lifetime, reasonable generic / metaprogramming.</p>

<p>I wouldn&#39;t use python even if it where faster. Type systems and explicit ownership semantics is a good thing.</p>

<p>Haskell is a good language to learn as well. Learning to think in Haskell actually is actually similar to metaprogramming in C++.</p>
</div>",1531518292.0,,False,e2ce6br,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2ce6br/,0,False,2,False,8yilkw,Cplusplus,t5_2qh6x
810,,"My primary languages are C++ and C#, so my perspective might be different than someone who only uses C++.

C++ is faster than C#, but C# is a far more productive language and far less error prone. In addition, the performance gap between C++ and C# is becoming very narrow, which is greatly reducing the need for C++. Entire game engines and operating systems are being written in C#.

C++ has its advantages, but those advantages are being slowly eroded by newer, more modern languages.","<div class=""md""><p>My primary languages are C++ and C#, so my perspective might be different than someone who only uses C++.</p>

<p>C++ is faster than C#, but C# is a far more productive language and far less error prone. In addition, the performance gap between C++ and C# is becoming very narrow, which is greatly reducing the need for C++. Entire game engines and operating systems are being written in C#.</p>

<p>C++ has its advantages, but those advantages are being slowly eroded by newer, more modern languages.</p>
</div>",1531513288.0,,False,e2c8h6r,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2c8h6r/,0,False,0,False,8yilkw,Cplusplus,t5_2qh6x
811,osamamhd,"I prefer **Python** it's easier than **C++**, you have to give it a try. ","<div class=""md""><p>I prefer <strong>Python</strong> it&#39;s easier than <strong>C++</strong>, you have to give it a try. </p>
</div>",1531478188.0,,False,e2b6kpd,False,t3_8yilkw,t3_8yilkw,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2b6kpd/,0,False,-7,False,8yilkw,Cplusplus,t5_2qh6x
812,,"There are also game engines written entirely in C#, like Xenko.

https://xenko.com","<div class=""md""><p>There are also game engines written entirely in C#, like Xenko.</p>

<p><a href=""https://xenko.com"">https://xenko.com</a></p>
</div>",1531499632.0,,False,e2brac7,False,t3_8yilkw,t1_e2b7mxz,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2brac7/,1,False,2,False,8yilkw,Cplusplus,t5_2qh6x
813,mattmc318,"Great response, happy cake day.","<div class=""md""><p>Great response, happy cake day.</p>
</div>",1531552312.0,,False,e2d6bno,False,t3_8yilkw,t1_e2b7mxz,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2d6bno/,0,False,1,False,8yilkw,Cplusplus,t5_2qh6x
814,5225225,"Learn *multiple languages*, in any case. Learn C++. Learn C. Learn Python. Attempt to learn Haskell and give up because you just don't understand pure functional programming and ugghh.

The more languages you know, the more you'll be able to translate easily between them. Downside being that there's always going to be features in one language that you find very useful (tagged unions from Rust, overloads from C#), but can't use them both at the same time.","<div class=""md""><p>Learn <em>multiple languages</em>, in any case. Learn C++. Learn C. Learn Python. Attempt to learn Haskell and give up because you just don&#39;t understand pure functional programming and ugghh.</p>

<p>The more languages you know, the more you&#39;ll be able to translate easily between them. Downside being that there&#39;s always going to be features in one language that you find very useful (tagged unions from Rust, overloads from C#), but can&#39;t use them both at the same time.</p>
</div>",1531531685.0,,False,e2cr4k7,False,t3_8yilkw,t1_e2b6tt0,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2cr4k7/,0,False,12,False,8yilkw,Cplusplus,t5_2qh6x
815,phun_2016,Solid advice.,"<div class=""md""><p>Solid advice.</p>
</div>",1531514624.0,,False,e2ca1s6,False,t3_8yilkw,t1_e2b6tt0,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2ca1s6/,0,False,2,False,8yilkw,Cplusplus,t5_2qh6x
816,mkestrada,"""C makes it easy to shoot yourself in the foot; c++ makes it harder, but when you do, it blows your whole leg off."" 

-Bjarne 'Stumpy' Stroustrup","<div class=""md""><p>&quot;C makes it easy to shoot yourself in the foot; c++ makes it harder, but when you do, it blows your whole leg off.&quot; </p>

<p>-Bjarne &#39;Stumpy&#39; Stroustrup</p>
</div>",1531530805.0,,False,e2cqcdi,False,t3_8yilkw,t1_e2bbce6,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2cqcdi/,0,False,5,False,8yilkw,Cplusplus,t5_2qh6x
817,mrexodia,-Wuninitialized -Werror goes a long way,"<div class=""md""><p>-Wuninitialized -Werror goes a long way</p>
</div>",1531495499.0,,False,e2bm3lp,False,t3_8yilkw,t1_e2bdfet,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2bm3lp/,0,False,4,False,8yilkw,Cplusplus,t5_2qh6x
818,xemasiv,"Insightful response, thank you very much for writing this.","<div class=""md""><p>Insightful response, thank you very much for writing this.</p>
</div>",1531559360.0,,False,e2d9m5i,False,t3_8yilkw,t1_e2bb7ja,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2d9m5i/,0,False,3,False,8yilkw,Cplusplus,t5_2qh6x
819,xemasiv,"I was a NodeJS/Javascript developer. What got me into learning C++ is that there was once this guy who wrote a websocket library in C++, added NodeJS bindings to it and fuck all - it got 10x performance than any other pure NodeJS/Javascript websocket library.

In online games & communication services that already translates into better utilization of servers deployed online. Very fantastic.","<div class=""md""><p>I was a NodeJS/Javascript developer. What got me into learning C++ is that there was once this guy who wrote a websocket library in C++, added NodeJS bindings to it and fuck all - it got 10x performance than any other pure NodeJS/Javascript websocket library.</p>

<p>In online games &amp; communication services that already translates into better utilization of servers deployed online. Very fantastic.</p>
</div>",1531559515.0,,False,e2d9ohc,False,t3_8yilkw,t1_e2d4cke,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2d9ohc/,0,False,2,False,8yilkw,Cplusplus,t5_2qh6x
820,ABlockInTheChain,">knowing when memory is freed

Garbage collection only helps you with managing memory, whereas destructors let you manage _any_ resource your class acquires.

The things you can do with RAII are a strict superset of what you can do with GC.","<div class=""md""><blockquote>
<p>knowing when memory is freed</p>
</blockquote>

<p>Garbage collection only helps you with managing memory, whereas destructors let you manage <em>any</em> resource your class acquires.</p>

<p>The things you can do with RAII are a strict superset of what you can do with GC.</p>
</div>",1531528957.0,,False,e2coogg,False,t3_8yilkw,t1_e2c8yol,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2coogg/,0,False,3,False,8yilkw,Cplusplus,t5_2qh6x
821,,"This isn't entirely accurate. Many languages, such as C#, clearly define when the GC can run. For example, in C#, the GC will only run in response to an allocation. No allocations, no GC. You can also suppress the GC directly in C#.","<div class=""md""><p>This isn&#39;t entirely accurate. Many languages, such as C#, clearly define when the GC can run. For example, in C#, the GC will only run in response to an allocation. No allocations, no GC. You can also suppress the GC directly in C#.</p>
</div>",1531514337.0,,False,e2c9pjb,False,t3_8yilkw,t1_e2c8yol,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2c9pjb/,1,False,2,False,8yilkw,Cplusplus,t5_2qh6x
822,FrozenFirebat,"[https://github.com/SiliconStudio/xenko](https://github.com/SiliconStudio/xenko)

Desktop development with C++ (with ""C++/CLI"" and ""Windows 8.1 SDK and UCRT SDK"" optional components)

It's development with C#, same as Unity. The engine, itself, was written in C++. I had to look it up, because I couldn't imagine getting the performance you want for a game engine out of C#.","<div class=""md""><p><a href=""https://github.com/SiliconStudio/xenko"">https://github.com/SiliconStudio/xenko</a></p>

<p>Desktop development with C++ (with &quot;C++/CLI&quot; and &quot;Windows 8.1 SDK and UCRT SDK&quot; optional components)</p>

<p>It&#39;s development with C#, same as Unity. The engine, itself, was written in C++. I had to look it up, because I couldn&#39;t imagine getting the performance you want for a game engine out of C#.</p>
</div>",1531506515.0,,False,e2c05ps,False,t3_8yilkw,t1_e2brac7,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2c05ps/,1,False,1,False,8yilkw,Cplusplus,t5_2qh6x
823,mredding,"There are also substantial drawbacks. You mean, I can't allocate without invoking the GC? Shitty. I have to disable it and enable it to enforce some sort of control? You mean I can't specify the order of destruction among my objects?

This isn't good enough, and it's not the same thing as C++.

This is the strength of well defined destruction times you cannot get with a GC. Some languages you can turn off the GC and manage memory explicitly, but then you're working with unsafe memory, defeating the whole purpose of using a language with a GC in the first place.","<div class=""md""><p>There are also substantial drawbacks. You mean, I can&#39;t allocate without invoking the GC? Shitty. I have to disable it and enable it to enforce some sort of control? You mean I can&#39;t specify the order of destruction among my objects?</p>

<p>This isn&#39;t good enough, and it&#39;s not the same thing as C++.</p>

<p>This is the strength of well defined destruction times you cannot get with a GC. Some languages you can turn off the GC and manage memory explicitly, but then you&#39;re working with unsafe memory, defeating the whole purpose of using a language with a GC in the first place.</p>
</div>",1531515235.0,,False,e2carfl,False,t3_8yilkw,t1_e2c9pjb,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2carfl/,1,False,2,False,8yilkw,Cplusplus,t5_2qh6x
824,,"It's almost all C#. There's only a few C++ bits which are primarily wrappers around native APIs.

There's 52 C++ files and 5181 C# files in that repo.

Xenko's performance is great. The speed of C# is widely underestimated.



","<div class=""md""><p>It&#39;s almost all C#. There&#39;s only a few C++ bits which are primarily wrappers around native APIs.</p>

<p>There&#39;s 52 C++ files and 5181 C# files in that repo.</p>

<p>Xenko&#39;s performance is great. The speed of C# is widely underestimated.</p>
</div>",1531509272.0,,False,e2c3nea,False,t3_8yilkw,t1_e2c05ps,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2c3nea/,0,False,4,False,8yilkw,Cplusplus,t5_2qh6x
825,,"I don't think it's a matter of being ""good enough"". It's simply a different approach to managing memory.

And avoiding allocation during critical paths isn't difficult. It's actually quite easy.

If you don't want the GC to do stuff then don't use it.","<div class=""md""><p>I don&#39;t think it&#39;s a matter of being &quot;good enough&quot;. It&#39;s simply a different approach to managing memory.</p>

<p>And avoiding allocation during critical paths isn&#39;t difficult. It&#39;s actually quite easy.</p>

<p>If you don&#39;t want the GC to do stuff then don&#39;t use it.</p>
</div>",1531515526.0,,False,e2cb3q5,False,t3_8yilkw,t1_e2carfl,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2cb3q5/,1,False,1,False,8yilkw,Cplusplus,t5_2qh6x
826,mredding,"I think you're missing my point. Explicit memory management is something C++ does better than many languages. Sometimes shoe-horning explicit memory management in a managed language isn't good enough. And it's not about avoiding allocation in the critical path, it's avoiding garbage collection that's hard, or managing it in a way that doesn't impact performance when it counts.","<div class=""md""><p>I think you&#39;re missing my point. Explicit memory management is something C++ does better than many languages. Sometimes shoe-horning explicit memory management in a managed language isn&#39;t good enough. And it&#39;s not about avoiding allocation in the critical path, it&#39;s avoiding garbage collection that&#39;s hard, or managing it in a way that doesn&#39;t impact performance when it counts.</p>
</div>",1531517506.0,,False,e2cdbf0,False,t3_8yilkw,t1_e2cb3q5,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2cdbf0/,1,False,1,False,8yilkw,Cplusplus,t5_2qh6x
827,,"> And it's not about avoiding allocation in the critical path, it's avoiding garbage collection that's hard,

My point is that these are the same thing in many languages with a GC","<div class=""md""><blockquote>
<p>And it&#39;s not about avoiding allocation in the critical path, it&#39;s avoiding garbage collection that&#39;s hard,</p>
</blockquote>

<p>My point is that these are the same thing in many languages with a GC</p>
</div>",1531519246.0,,False,e2cf7f9,False,t3_8yilkw,t1_e2cdbf0,/r/Cplusplus/comments/8yilkw/what_does_c_better_than_other_programming/e2cf7f9/,0,False,1,False,8yilkw,Cplusplus,t5_2qh6x
828,druepy,I'll be sure to check this out. I was actually looking for libraries for this yesterday. The only one that appeared was the one that relied on Python.,"<div class=""md""><p>I&#39;ll be sure to check this out. I was actually looking for libraries for this yesterday. The only one that appeared was the one that relied on Python.</p>
</div>",1598669934.0,,False,g37e0kf,False,t3_iikduy,t3_iikduy,/r/Cplusplus/comments/iikduy/matplot_a_c_graphics_library_for_data/g37e0kf/,0,False,2,False,iikduy,Cplusplus,t5_2qh6x
829,sinkingpotato,Holy shit. This seems to have a ton of functionality. Is there a backstory to this? I assume development has been more than just the past 2 days right? I look forward to trying it out,"<div class=""md""><p>Holy shit. This seems to have a ton of functionality. Is there a backstory to this? I assume development has been more than just the past 2 days right? I look forward to trying it out</p>
</div>",1598754310.0,,False,g3b9ki1,False,t3_iikduy,t3_iikduy,/r/Cplusplus/comments/iikduy/matplot_a_c_graphics_library_for_data/g3b9ki1/,1,False,2,False,iikduy,Cplusplus,t5_2qh6x
830,vsonicmu,Wow - This is amazing!,"<div class=""md""><p>Wow - This is amazing!</p>
</div>",1601921971.0,,False,g7taftf,False,t3_iikduy,t3_iikduy,/r/Cplusplus/comments/iikduy/matplot_a_c_graphics_library_for_data/g7taftf/,0,False,1,False,iikduy,Cplusplus,t5_2qh6x
831,FreitasAlan,"Yes. It's been a little more than 2 days. 😆 I was just annoyed to have to move to python or matlab all the time just for data analysis.

I hope the library can help you.","<div class=""md""><p>Yes. It&#39;s been a little more than 2 days. 😆 I was just annoyed to have to move to python or matlab all the time just for data analysis.</p>

<p>I hope the library can help you.</p>
</div>",1598755312.0,,False,g3bb8bj,True,t3_iikduy,t1_g3b9ki1,/r/Cplusplus/comments/iikduy/matplot_a_c_graphics_library_for_data/g3bb8bj/,1,False,2,False,iikduy,Cplusplus,t5_2qh6x
832,sinkingpotato,I think many people (me included) share the same feelings.,"<div class=""md""><p>I think many people (me included) share the same feelings.</p>
</div>",1598758134.0,,False,g3bfsq8,False,t3_iikduy,t1_g3bb8bj,/r/Cplusplus/comments/iikduy/matplot_a_c_graphics_library_for_data/g3bfsq8/,0,False,2,False,iikduy,Cplusplus,t5_2qh6x
833,Der_Wissenschaftler,I'd appreciate if you please post a tutorial or something help a beginner like me ,"<div class=""md""><p>I&#39;d appreciate if you please post a tutorial or something help a beginner like me </p>
</div>",1526424088.0,,False,dz1ii5d,False,t3_8jpe6w,t3_8jpe6w,/r/Cplusplus/comments/8jpe6w/pacman_finished/dz1ii5d/,1,False,9,False,8jpe6w,Cplusplus,t5_2qh6x
834,LinuxCodeMonkey,"Did you include the safe spot? That's my check for detail.

https://www.howtogeek.com/109815/pac-man-hiding-spot-makes-high-scores-a-snap/
","<div class=""md""><p>Did you include the safe spot? That&#39;s my check for detail.</p>

<p><a href=""https://www.howtogeek.com/109815/pac-man-hiding-spot-makes-high-scores-a-snap/"">https://www.howtogeek.com/109815/pac-man-hiding-spot-makes-high-scores-a-snap/</a></p>
</div>",1526427807.0,,False,dz1m3er,False,t3_8jpe6w,t3_8jpe6w,/r/Cplusplus/comments/8jpe6w/pacman_finished/dz1m3er/,1,False,5,False,8jpe6w,Cplusplus,t5_2qh6x
835,mrhone,"Amazing! I wish I had the time to learn how to do this.

My only comments, Don't let this subtract from your awesome job. 

The Ghosts in OG Pacman returned to the middle box, I imagine there is a reason you didn't do this? 

Your hitbox seems a bit picky compared to what I recall from OG pacman but I could be wrong. ","<div class=""md""><p>Amazing! I wish I had the time to learn how to do this.</p>

<p>My only comments, Don&#39;t let this subtract from your awesome job. </p>

<p>The Ghosts in OG Pacman returned to the middle box, I imagine there is a reason you didn&#39;t do this? </p>

<p>Your hitbox seems a bit picky compared to what I recall from OG pacman but I could be wrong. </p>
</div>",1526427977.0,,False,dz1m996,False,t3_8jpe6w,t3_8jpe6w,/r/Cplusplus/comments/8jpe6w/pacman_finished/dz1m996/,1,False,3,False,8jpe6w,Cplusplus,t5_2qh6x
836,Alandcook,Was c++ your first language you learned?,"<div class=""md""><p>Was c++ your first language you learned?</p>
</div>",1526955068.0,,False,dzd6nsp,False,t3_8jpe6w,t3_8jpe6w,/r/Cplusplus/comments/8jpe6w/pacman_finished/dzd6nsp/,1,False,2,False,8jpe6w,Cplusplus,t5_2qh6x
837,s0lly,"Of course! I’m creating a website to explain all my steps, what tutorials I watched, anything I thought was a cool “hack”, etc.
Will keep you posted!","<div class=""md""><p>Of course! I’m creating a website to explain all my steps, what tutorials I watched, anything I thought was a cool “hack”, etc.
Will keep you posted!</p>
</div>",1526424478.0,,False,dz1ivw6,True,t3_8jpe6w,t1_dz1ii5d,/r/Cplusplus/comments/8jpe6w/pacman_finished/dz1ivw6/,1,False,7,False,8jpe6w,Cplusplus,t5_2qh6x
838,s0lly,"Haha nice! I didn’t, of course. I actually didn’t read up too much on how exactly the original worked so that I could try code up my own version of things. But it’s amazing how there are actually so many intricacies to the original game e.g. unbeatable level 256 etc","<div class=""md""><p>Haha nice! I didn’t, of course. I actually didn’t read up too much on how exactly the original worked so that I could try code up my own version of things. But it’s amazing how there are actually so many intricacies to the original game e.g. unbeatable level 256 etc</p>
</div>",1526428099.0,,False,dz1mdgo,True,t3_8jpe6w,t1_dz1m3er,/r/Cplusplus/comments/8jpe6w/pacman_finished/dz1mdgo/,1,False,5,False,8jpe6w,Cplusplus,t5_2qh6x
839,s0lly,"Cheers, feedback is good!! It’s why I posted!

I didn’t add all the features as I didn’t want to spend too long on one project, given that I’m still only 3 months into learning so far. I’d rather tackle new things now. Some features needed to be sacrificial lambs!

The hit box is indeed a little further out on my version I think. I definitely could bring it in a touch.","<div class=""md""><p>Cheers, feedback is good!! It’s why I posted!</p>

<p>I didn’t add all the features as I didn’t want to spend too long on one project, given that I’m still only 3 months into learning so far. I’d rather tackle new things now. Some features needed to be sacrificial lambs!</p>

<p>The hit box is indeed a little further out on my version I think. I definitely could bring it in a touch.</p>
</div>",1526428406.0,,False,dz1mo2o,True,t3_8jpe6w,t1_dz1m996,/r/Cplusplus/comments/8jpe6w/pacman_finished/dz1mo2o/,1,False,2,False,8jpe6w,Cplusplus,t5_2qh6x
840,s0lly,"I’ve dabbled with various languages before and had most of the basics locked down (e.g. very comfortable with basic variable types and control flow), but had hardly used classes or anything more complicated (e.g. never used a pointer ever) until I started properly on C++ in Feb.","<div class=""md""><p>I’ve dabbled with various languages before and had most of the basics locked down (e.g. very comfortable with basic variable types and control flow), but had hardly used classes or anything more complicated (e.g. never used a pointer ever) until I started properly on C++ in Feb.</p>
</div>",1526981861.0,,False,dzdn29c,True,t3_8jpe6w,t1_dzd6nsp,/r/Cplusplus/comments/8jpe6w/pacman_finished/dzdn29c/,1,False,1,False,8jpe6w,Cplusplus,t5_2qh6x
841,Der_Wissenschaftler,Thanks so much appreciate your help,"<div class=""md""><p>Thanks so much appreciate your help</p>
</div>",1526425271.0,,False,dz1jnlc,False,t3_8jpe6w,t1_dz1ivw6,/r/Cplusplus/comments/8jpe6w/pacman_finished/dz1jnlc/,0,False,4,False,8jpe6w,Cplusplus,t5_2qh6x
842,LinuxCodeMonkey,"Well good luck, have fun with it. You'll learn a lot and just when you're sick of it, you may add little things like that in an ""oh fine, just to make it that much closer"" moment. But it's yours, enjoy!","<div class=""md""><p>Well good luck, have fun with it. You&#39;ll learn a lot and just when you&#39;re sick of it, you may add little things like that in an &quot;oh fine, just to make it that much closer&quot; moment. But it&#39;s yours, enjoy!</p>
</div>",1526428323.0,,False,dz1ml61,False,t3_8jpe6w,t1_dz1mdgo,/r/Cplusplus/comments/8jpe6w/pacman_finished/dz1ml61/,0,False,5,False,8jpe6w,Cplusplus,t5_2qh6x
843,mrhone,I understand! Amazing work!,"<div class=""md""><p>I understand! Amazing work!</p>
</div>",1526429162.0,,False,dz1ne7e,False,t3_8jpe6w,t1_dz1mo2o,/r/Cplusplus/comments/8jpe6w/pacman_finished/dz1ne7e/,0,False,3,False,8jpe6w,Cplusplus,t5_2qh6x
844,Alandcook,This is pretty inspiring tbh. Ive never coded before and I’m just diving right into c++.,"<div class=""md""><p>This is pretty inspiring tbh. Ive never coded before and I’m just diving right into c++.</p>
</div>",1526988198.0,,False,dzdq20g,False,t3_8jpe6w,t1_dzdn29c,/r/Cplusplus/comments/8jpe6w/pacman_finished/dzdq20g/,1,False,2,False,8jpe6w,Cplusplus,t5_2qh6x
845,s0lly,"Good stuff. For maximum inspiration, look at this video: https://www.youtube.com/watch?v=xW8skO7MFYw","<div class=""md""><p>Good stuff. For maximum inspiration, look at this video: <a href=""https://www.youtube.com/watch?v=xW8skO7MFYw"">https://www.youtube.com/watch?v=xW8skO7MFYw</a></p>
</div>",1526990212.0,,False,dzdracv,True,t3_8jpe6w,t1_dzdq20g,/r/Cplusplus/comments/8jpe6w/pacman_finished/dzdracv/,0,False,2,False,8jpe6w,Cplusplus,t5_2qh6x
846,DOOMReboot,"Man, you are smashing through these projects!  Everything looks great, but it doesn't look like the ghosts are chasing him.  Which pathfinding algorithm are you using?  Perhaps consider A* (a-star) algo and take a look at this: http://gameinternals.com/post/2072558330/understanding-pac-man-ghost-behavior","<div class=""md""><p>Man, you are smashing through these projects!  Everything looks great, but it doesn&#39;t look like the ghosts are chasing him.  Which pathfinding algorithm are you using?  Perhaps consider A* (a-star) algo and take a look at this: <a href=""http://gameinternals.com/post/2072558330/understanding-pac-man-ghost-behavior"">http://gameinternals.com/post/2072558330/understanding-pac-man-ghost-behavior</a></p>
</div>",1525108385.0,,False,dy7z8bq,False,t3_8frcc0,t3_8frcc0,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dy7z8bq/,1,False,4,False,8frcc0,Cplusplus,t5_2qh6x
847,dsa411,Any chance you would be interested in posting the source to github? It would be interesting to see how you are accomplishing this. ,"<div class=""md""><p>Any chance you would be interested in posting the source to github? It would be interesting to see how you are accomplishing this. </p>
</div>",1525009762.0,,False,dy5tq3j,False,t3_8frcc0,t3_8frcc0,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dy5tq3j/,1,False,4,False,8frcc0,Cplusplus,t5_2qh6x
848,Gollum999,"The only thing I noticed is that the speed seems off; I think normally Pacman is the same speed as the ghosts, except after eating a big pellet that makes the ghosts slow down. 

Other than that, looks like a great start!","<div class=""md""><p>The only thing I noticed is that the speed seems off; I think normally Pacman is the same speed as the ghosts, except after eating a big pellet that makes the ghosts slow down. </p>

<p>Other than that, looks like a great start!</p>
</div>",1525026199.0,,False,dy68lxd,False,t3_8frcc0,t3_8frcc0,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dy68lxd/,2,False,2,False,8frcc0,Cplusplus,t5_2qh6x
849,s0lly,Good spot. I'm not using one just yet - that's for the update!,"<div class=""md""><p>Good spot. I&#39;m not using one just yet - that&#39;s for the update!</p>
</div>",1525114431.0,,False,dy85tb2,True,t3_8frcc0,t1_dy7z8bq,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dy85tb2/,1,False,2,False,8frcc0,Cplusplus,t5_2qh6x
850,s0lly,Sure thing! When I've finished the project I'll probably do so. Will keep you posted.,"<div class=""md""><p>Sure thing! When I&#39;ve finished the project I&#39;ll probably do so. Will keep you posted.</p>
</div>",1525010900.0,,False,dy5ulml,True,t3_8frcc0,t1_dy5tq3j,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dy5ulml/,0,False,2,False,8frcc0,Cplusplus,t5_2qh6x
851,s0lly,"Agreed, that's something that will be changing! He's currently 50% faster (if memory serves).

Was thinking of using this slower speed but for ""level one"", with the ghosts speeding up as you level up. Trying to ""spice"" things up on a pretty simple base mechanic.","<div class=""md""><p>Agreed, that&#39;s something that will be changing! He&#39;s currently 50% faster (if memory serves).</p>

<p>Was thinking of using this slower speed but for &quot;level one&quot;, with the ghosts speeding up as you level up. Trying to &quot;spice&quot; things up on a pretty simple base mechanic.</p>
</div>",1525026765.0,,False,dy6960b,True,t3_8frcc0,t1_dy68lxd,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dy6960b/,1,False,4,False,8frcc0,Cplusplus,t5_2qh6x
852,s0lly,"It actually took me a long time to sort out the movement speed issue - it was actually down to a bug... :/

It's looking better now though, and smoother: https://youtu.be/9hoiPOGBPBA","<div class=""md""><p>It actually took me a long time to sort out the movement speed issue - it was actually down to a bug... :/</p>

<p>It&#39;s looking better now though, and smoother: <a href=""https://youtu.be/9hoiPOGBPBA"">https://youtu.be/9hoiPOGBPBA</a></p>
</div>",1525817607.0,,False,dyo0dr5,True,t3_8frcc0,t1_dy68lxd,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dyo0dr5/,0,False,1,False,8frcc0,Cplusplus,t5_2qh6x
853,DOOMReboot,How it coming along?,"<div class=""md""><p>How it coming along?</p>
</div>",1525434746.0,,False,dyfmgez,False,t3_8frcc0,t1_dy85tb2,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dyfmgez/,1,False,2,False,8frcc0,Cplusplus,t5_2qh6x
854,dancing_leaves,That's one of the fun things about these types of projects; I can take a game concept that I like and tweak it to my tastes.,"<div class=""md""><p>That&#39;s one of the fun things about these types of projects; I can take a game concept that I like and tweak it to my tastes.</p>
</div>",1525049460.0,,False,dy6u54s,False,t3_8frcc0,t1_dy6960b,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dy6u54s/,0,False,3,False,8frcc0,Cplusplus,t5_2qh6x
855,s0lly,"I ran into a massive wall, staring at code, that sort of thing...

Cutting a long story short, there was a bug in my movement logic than only appeared in certain circumstances, and I couldn't work it out. I think I finally figured it out though, many days later!! Whew.

So, watch this space... aiming for a Monday evening update.","<div class=""md""><p>I ran into a massive wall, staring at code, that sort of thing...</p>

<p>Cutting a long story short, there was a bug in my movement logic than only appeared in certain circumstances, and I couldn&#39;t work it out. I think I finally figured it out though, many days later!! Whew.</p>

<p>So, watch this space... aiming for a Monday evening update.</p>
</div>",1525561479.0,,False,dyiej5l,True,t3_8frcc0,t1_dyfmgez,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dyiej5l/,1,False,2,False,8frcc0,Cplusplus,t5_2qh6x
856,DOOMReboot,Glad you figured it out!  Looking forward seeing it.,"<div class=""md""><p>Glad you figured it out!  Looking forward seeing it.</p>
</div>",1525561916.0,,False,dyievzb,False,t3_8frcc0,t1_dyiej5l,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dyievzb/,1,False,2,False,8frcc0,Cplusplus,t5_2qh6x
857,s0lly,"Here's the slow but steady progress!
https://youtu.be/9hoiPOGBPBA

Can clearly see the ghosts chasing the Pacman. Still needs a lot of work though! Will probably need an A* algorithm or similar to get the ghosts to return to the centre area if they're eaten (I haven't coded anything in for that event yet).

Onwards and upwards!","<div class=""md""><p>Here&#39;s the slow but steady progress!
<a href=""https://youtu.be/9hoiPOGBPBA"">https://youtu.be/9hoiPOGBPBA</a></p>

<p>Can clearly see the ghosts chasing the Pacman. Still needs a lot of work though! Will probably need an A* algorithm or similar to get the ghosts to return to the centre area if they&#39;re eaten (I haven&#39;t coded anything in for that event yet).</p>

<p>Onwards and upwards!</p>
</div>",1525817539.0,,False,dyo0b9y,True,t3_8frcc0,t1_dyievzb,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dyo0b9y/,1,False,2,False,8frcc0,Cplusplus,t5_2qh6x
858,DOOMReboot,That fucking kicks ass!  Way to go bud!,"<div class=""md""><p>That fucking kicks ass!  Way to go bud!</p>
</div>",1525818008.0,,False,dyo0sft,False,t3_8frcc0,t1_dyo0b9y,/r/Cplusplus/comments/8frcc0/pacman_in_c_first_draft/dyo0sft/,0,False,2,False,8frcc0,Cplusplus,t5_2qh6x
859,KalosKaghatoss,"This book -> [https://www.amazon.fr/C-Primer-Stanley-B-Lippman/dp/0321714113](https://www.amazon.fr/C-Primer-Stanley-B-Lippman/dp/0321714113)

These channels - > [https://www.youtube.com/channel/UCQ-W1KE9EYfdxhL6S4twUNw](https://www.youtube.com/channel/UCQ-W1KE9EYfdxhL6S4twUNw) , [https://www.youtube.com/user/CalebTheVideoMaker2](https://www.youtube.com/user/CalebTheVideoMaker2), and the 3D buzz ""software engineering with c++"", its now free and you should find a torrent pretty easily.

I'm learning too, and I find these resources very helpful and understandable.","<div class=""md""><p>This book -&gt; <a href=""https://www.amazon.fr/C-Primer-Stanley-B-Lippman/dp/0321714113"">https://www.amazon.fr/C-Primer-Stanley-B-Lippman/dp/0321714113</a></p>

<p>These channels - &gt; <a href=""https://www.youtube.com/channel/UCQ-W1KE9EYfdxhL6S4twUNw"">https://www.youtube.com/channel/UCQ-W1KE9EYfdxhL6S4twUNw</a> , <a href=""https://www.youtube.com/user/CalebTheVideoMaker2"">https://www.youtube.com/user/CalebTheVideoMaker2</a>, and the 3D buzz &quot;software engineering with c++&quot;, its now free and you should find a torrent pretty easily.</p>

<p>I&#39;m learning too, and I find these resources very helpful and understandable.</p>
</div>",1596556283.0,,False,g0c6b3i,False,t3_i3lkz5,t3_i3lkz5,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0c6b3i/,2,False,7,False,i3lkz5,Cplusplus,t5_2qh6x
860,iampratikthorat,The Cherno on Youtube. That’s the best place to learn C++. You can even try The new boston but the channel’s videos are quite old like 2014.,"<div class=""md""><p>The Cherno on Youtube. That’s the best place to learn C++. You can even try The new boston but the channel’s videos are quite old like 2014.</p>
</div>",1596557962.0,,False,g0cabsp,False,t3_i3lkz5,t3_i3lkz5,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0cabsp/,1,False,12,False,i3lkz5,Cplusplus,t5_2qh6x
861,khedoros,"> any basic mistakes to avoid

""But it works that way in C..."" isn't always a valid line of argument. The languages have a lot in common, but there are times where some C features aren't supported in C++, or are only supported as compiler extensions in specific compilers (and won't be available in others). Variable-length arrays and some type-punning behaviors come to mind as things I've run into in that category.

Second, although plain pointers are available, smart pointers help you manage data lifetimes and indicate ownership of the pointed-to data. Modern C++ expects most memory management to be handled automatically, but it's stuff that you have to opt into as a developer.","<div class=""md""><blockquote>
<p>any basic mistakes to avoid</p>
</blockquote>

<p>&quot;But it works that way in C...&quot; isn&#39;t always a valid line of argument. The languages have a lot in common, but there are times where some C features aren&#39;t supported in C++, or are only supported as compiler extensions in specific compilers (and won&#39;t be available in others). Variable-length arrays and some type-punning behaviors come to mind as things I&#39;ve run into in that category.</p>

<p>Second, although plain pointers are available, smart pointers help you manage data lifetimes and indicate ownership of the pointed-to data. Modern C++ expects most memory management to be handled automatically, but it&#39;s stuff that you have to opt into as a developer.</p>
</div>",1596560882.0,,False,g0chyo9,False,t3_i3lkz5,t3_i3lkz5,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0chyo9/,1,False,5,False,i3lkz5,Cplusplus,t5_2qh6x
862,Doriphor,"Accept that knowing C can help you but it can also hurt you.

Dont learn the old style C++. Go for C++11 or 14 at least. Specifically.

Don't question, accept. There are many things in C++ that seem counterintuitive or unnecessarily complicated and if you stop to think about each thing, google it, post about it on Reddit, etc. you won't go anywhere.","<div class=""md""><p>Accept that knowing C can help you but it can also hurt you.</p>

<p>Dont learn the old style C++. Go for C++11 or 14 at least. Specifically.</p>

<p>Don&#39;t question, accept. There are many things in C++ that seem counterintuitive or unnecessarily complicated and if you stop to think about each thing, google it, post about it on Reddit, etc. you won&#39;t go anywhere.</p>
</div>",1596573908.0,,False,g0dgdmj,False,t3_i3lkz5,t3_i3lkz5,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0dgdmj/,0,False,3,False,i3lkz5,Cplusplus,t5_2qh6x
863,jstock23,"No offense, but this question is asked all the time. Search through this subreddit and you'll find some good resources!","<div class=""md""><p>No offense, but this question is asked all the time. Search through this subreddit and you&#39;ll find some good resources!</p>
</div>",1596574274.0,,False,g0dh8u9,False,t3_i3lkz5,t3_i3lkz5,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0dh8u9/,1,False,3,False,i3lkz5,Cplusplus,t5_2qh6x
864,paddaroth,"Sounds great, how have you found learning it?","<div class=""md""><p>Sounds great, how have you found learning it?</p>
</div>",1596624643.0,,False,g0fipas,True,t3_i3lkz5,t1_g0c6b3i,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0fipas/,1,False,2,False,i3lkz5,Cplusplus,t5_2qh6x
865,paddaroth,"Sounds great, how have you found learning it?","<div class=""md""><p>Sounds great, how have you found learning it?</p>
</div>",1596624662.0,,False,g0fipzu,True,t3_i3lkz5,t1_g0c6b3i,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0fipzu/,0,False,1,False,i3lkz5,Cplusplus,t5_2qh6x
866,jrfranz,"He’s VERY goode. But I have to say, sometimes he goes a little too fast, and it wasn’t until I had a lot o’ practise and reinforcement of the basics that I was able to follow him without having to rewind here and there. Aside frome that, he’s an excellent source to learn C++.","<div class=""md""><p>He’s VERY goode. But I have to say, sometimes he goes a little too fast, and it wasn’t until I had a lot o’ practise and reinforcement of the basics that I was able to follow him without having to rewind here and there. Aside frome that, he’s an excellent source to learn C++.</p>
</div>",1596607213.0,,False,g0f1cbl,False,t3_i3lkz5,t1_g0cabsp,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0f1cbl/,1,False,5,False,i3lkz5,Cplusplus,t5_2qh6x
867,paddaroth,"Right, so whilst it may help at some aspects treat it as if it were a whole new language. Very useful, thank you.","<div class=""md""><p>Right, so whilst it may help at some aspects treat it as if it were a whole new language. Very useful, thank you.</p>
</div>",1596624481.0,,False,g0fijbp,True,t3_i3lkz5,t1_g0chyo9,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0fijbp/,0,False,1,False,i3lkz5,Cplusplus,t5_2qh6x
868,paddaroth,No offense taken,"<div class=""md""><p>No offense taken</p>
</div>",1596624564.0,,False,g0fimd3,True,t3_i3lkz5,t1_g0dh8u9,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0fimd3/,0,False,2,False,i3lkz5,Cplusplus,t5_2qh6x
869,KalosKaghatoss,"Very difficult. The only thing I can say is practice, practice and practice and it comes bits after bits. Making some projects and applying what you're learning can be a good way to concretize your knowledge  (I'm making a raytracer and I learn both some maths and c++ with this project, very cool), because sometimes little exercises are limited in the use of all the concepts you're learning !","<div class=""md""><p>Very difficult. The only thing I can say is practice, practice and practice and it comes bits after bits. Making some projects and applying what you&#39;re learning can be a good way to concretize your knowledge  (I&#39;m making a raytracer and I learn both some maths and c++ with this project, very cool), because sometimes little exercises are limited in the use of all the concepts you&#39;re learning !</p>
</div>",1596626782.0,,False,g0flaub,False,t3_i3lkz5,t1_g0fipas,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0flaub/,0,False,2,False,i3lkz5,Cplusplus,t5_2qh6x
870,iampratikthorat,Yep that’s true,"<div class=""md""><p>Yep that’s true</p>
</div>",1596659825.0,,False,g0hhi0u,False,t3_i3lkz5,t1_g0f1cbl,/r/Cplusplus/comments/i3lkz5/beginner_learning_c/g0hhi0u/,0,False,1,False,i3lkz5,Cplusplus,t5_2qh6x
871,Possibility_Antique,"Look into std::format. It is not only faster in most cases, but more easily interfaces with custom types. Prior to C++20, printf didn't have a good alternative. There were C++ streams, but they were not the answer to everything. std::format is syntactically similar to printf, but you'll still need std::cout or something similar for I/O.","<div class=""md""><p>Look into std::format. It is not only faster in most cases, but more easily interfaces with custom types. Prior to C++20, printf didn&#39;t have a good alternative. There were C++ streams, but they were not the answer to everything. std::format is syntactically similar to printf, but you&#39;ll still need std::cout or something similar for I/O.</p>
</div>",1623115976.0,,False,h0zccb7,False,t3_nusuhs,t3_nusuhs,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h0zccb7/,2,False,27,False,nusuhs,Cplusplus,t5_2qh6x
872,AKostur,"Side note: “deprecated” has a well-defined meaning.  Printf isn’t deprecated, but is worth looking at warily for the reasons the other responses have provided.","<div class=""md""><p>Side note: “deprecated” has a well-defined meaning.  Printf isn’t deprecated, but is worth looking at warily for the reasons the other responses have provided.</p>
</div>",1623117466.0,,False,h0zf9sc,False,t3_nusuhs,t3_nusuhs,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h0zf9sc/,0,False,18,False,nusuhs,Cplusplus,t5_2qh6x
873,xENO_,"Yes, printf *is* awesome in C. It's also not type-safe. It's entirely possible to write something like:

    printf(""%s %d %f"", 3.14, ""lemon"", 31337);

That will almost certainly crash when it's executed, and based on the format string, that should obviously be a string, then an int, then a float, but even though it's obviously wrong, the compiler won't say anything about it unless it's sufficiently recent and has that warning turned on. You also can't extend it with new types. There's no equivalent of:

    std::ostream& operator<<(std::ostream& os, const Thing& t)
    {
        return os << ""Thing("" << thing.a() << "", "" << thing.b() << "", "" << thing.c() <<  "")"";
    }

    void some_function() {
        ...
        Thing t(3.14, ""lemon"", 31337);
        std::cout << t << '\n';
        ...
    }

IOStream has its own set of problems, but type safety isn't one of them. There's also std::format for doing a more printf-style string formatting in modern c++.","<div class=""md""><p>Yes, printf <em>is</em> awesome in C. It&#39;s also not type-safe. It&#39;s entirely possible to write something like:</p>

<pre><code>printf(&quot;%s %d %f&quot;, 3.14, &quot;lemon&quot;, 31337);
</code></pre>

<p>That will almost certainly crash when it&#39;s executed, and based on the format string, that should obviously be a string, then an int, then a float, but even though it&#39;s obviously wrong, the compiler won&#39;t say anything about it unless it&#39;s sufficiently recent and has that warning turned on. You also can&#39;t extend it with new types. There&#39;s no equivalent of:</p>

<pre><code>std::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const Thing&amp; t)
{
    return os &lt;&lt; &quot;Thing(&quot; &lt;&lt; thing.a() &lt;&lt; &quot;, &quot; &lt;&lt; thing.b() &lt;&lt; &quot;, &quot; &lt;&lt; thing.c() &lt;&lt;  &quot;)&quot;;
}

void some_function() {
    ...
    Thing t(3.14, &quot;lemon&quot;, 31337);
    std::cout &lt;&lt; t &lt;&lt; &#39;\n&#39;;
    ...
}
</code></pre>

<p>IOStream has its own set of problems, but type safety isn&#39;t one of them. There&#39;s also std::format for doing a more printf-style string formatting in modern c++.</p>
</div>",1623116128.0,,1623116398.0,h0zcn86,False,t3_nusuhs,t3_nusuhs,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h0zcn86/,1,False,14,False,nusuhs,Cplusplus,t5_2qh6x
874,mredding,"It's Turing complete and not type safe. It has some critical security flaws, and it's performance is purely run-time dependent. Streams, on the other hand, are type safe, they can gain a performance boost due to inlining, and they're provably as fast if not faster. Streams have locale support bound to the stream, not a global interface bound to the runtime. There is also now the `fmt` library that is also type safe and renders `printf` and their brand of formatting strings moot. Streams are incredibly flexible and powerful - types can know how to print themselves, you can integrate streams into algorithms, you can tee them off or tie them together, you can write one stream to another. They're one of the best examples of OOP in the entire language, which is the principle reasons why there hasn't been much incentive to change or revise their interface - we just haven't had a need to.","<div class=""md""><p>It&#39;s Turing complete and not type safe. It has some critical security flaws, and it&#39;s performance is purely run-time dependent. Streams, on the other hand, are type safe, they can gain a performance boost due to inlining, and they&#39;re provably as fast if not faster. Streams have locale support bound to the stream, not a global interface bound to the runtime. There is also now the <code>fmt</code> library that is also type safe and renders <code>printf</code> and their brand of formatting strings moot. Streams are incredibly flexible and powerful - types can know how to print themselves, you can integrate streams into algorithms, you can tee them off or tie them together, you can write one stream to another. They&#39;re one of the best examples of OOP in the entire language, which is the principle reasons why there hasn&#39;t been much incentive to change or revise their interface - we just haven&#39;t had a need to.</p>
</div>",1623171404.0,,False,h11r3jc,False,t3_nusuhs,t3_nusuhs,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h11r3jc/,1,False,4,False,nusuhs,Cplusplus,t5_2qh6x
875,flyingron,The main problem is that there's no type checking.    You can't really do that with the inane variadic variable passing.    What's particularly ugly however are the iomanips in streams to format.   I'd have loved to have seen one that takes a printf-like format specifier for the << operations to follow.,"<div class=""md""><p>The main problem is that there&#39;s no type checking.    You can&#39;t really do that with the inane variadic variable passing.    What&#39;s particularly ugly however are the iomanips in streams to format.   I&#39;d have loved to have seen one that takes a printf-like format specifier for the &lt;&lt; operations to follow.</p>
</div>",1623152921.0,,False,h10nk7t,False,t3_nusuhs,t3_nusuhs,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h10nk7t/,0,False,1,False,nusuhs,Cplusplus,t5_2qh6x
876,RavingGamingDude,"printf is mostly recommended to not be used in C++ for a few main reasons, but I can boil them down into two categories.

* C++ style zealots demanding that everyone use idiomatic (aka idiotic) C++ instead of C-style C++
* Practical concerns

printf is somewhat insecure, as it isn't type safe, and you can pass it more arguments than it can handle, or too few, as it's a variadic function that assumes the programmer has had as many formatting entries as arguments, making buffer overflows possible. It's also not type-safe. Both issues can be circumvented with good programming, but not always, and it's easier to not have to deal with it. printf is still handy, so if it works for you, more power to you!

I for one, as a C programmer who only uses C++ out of necessity (I will occasionally use C++ libraries and C++ compilers using as little C++ features/syntax as possible), will continue to use printf.","<div class=""md""><p>printf is mostly recommended to not be used in C++ for a few main reasons, but I can boil them down into two categories.</p>

<ul>
<li>C++ style zealots demanding that everyone use idiomatic (aka idiotic) C++ instead of C-style C++</li>
<li>Practical concerns</li>
</ul>

<p>printf is somewhat insecure, as it isn&#39;t type safe, and you can pass it more arguments than it can handle, or too few, as it&#39;s a variadic function that assumes the programmer has had as many formatting entries as arguments, making buffer overflows possible. It&#39;s also not type-safe. Both issues can be circumvented with good programming, but not always, and it&#39;s easier to not have to deal with it. printf is still handy, so if it works for you, more power to you!</p>

<p>I for one, as a C programmer who only uses C++ out of necessity (I will occasionally use C++ libraries and C++ compilers using as little C++ features/syntax as possible), will continue to use printf.</p>
</div>",1623434501.0,,False,h1fgj82,False,t3_nusuhs,t3_nusuhs,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h1fgj82/,0,False,1,False,nusuhs,Cplusplus,t5_2qh6x
877,Geemge0,"Cool! Why did it take till C++20 for this to show up? mind boggling considering the support it has seen for ages in C#, etc.","<div class=""md""><p>Cool! Why did it take till C++20 for this to show up? mind boggling considering the support it has seen for ages in C#, etc.</p>
</div>",1623133243.0,,False,h104o4g,False,t3_nusuhs,t1_h0zccb7,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h104o4g/,1,False,8,False,nusuhs,Cplusplus,t5_2qh6x
878,RavingGamingDude,"If the first time that std::format has appeared is in C++20, then you really can't consider it a viable alternative to printf-family functions in all circumstances, since many people are still using the vast majority of compilers that only support C++17 or older, such as versions of Visual Studio prior to VS2019, or toolchains using older versions of GCC, Clang, or the AMD/Intel compilers, or even more domain-specific compilers.","<div class=""md""><p>If the first time that std::format has appeared is in C++20, then you really can&#39;t consider it a viable alternative to printf-family functions in all circumstances, since many people are still using the vast majority of compilers that only support C++17 or older, such as versions of Visual Studio prior to VS2019, or toolchains using older versions of GCC, Clang, or the AMD/Intel compilers, or even more domain-specific compilers.</p>
</div>",1623434229.0,,False,h1ffxg5,False,t3_nusuhs,t1_h0zccb7,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h1ffxg5/,1,False,1,False,nusuhs,Cplusplus,t5_2qh6x
879,SoulsBloodSausage,Won’t most compilers catch this though? macOS clang with no options gives warnings for type errors with format specifiers,"<div class=""md""><p>Won’t most compilers catch this though? macOS clang with no options gives warnings for type errors with format specifiers</p>
</div>",1623127606.0,,False,h0zx4bs,False,t3_nusuhs,t1_h0zcn86,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h0zx4bs/,2,False,3,False,nusuhs,Cplusplus,t5_2qh6x
880,bert8128,"My experience with streams has not been good on the performance side. All tests have indicated markedly poor performance compared to printf, to the extent that we do not in general  use streams on my project. As always, test your own use cases.","<div class=""md""><p>My experience with streams has not been good on the performance side. All tests have indicated markedly poor performance compared to printf, to the extent that we do not in general  use streams on my project. As always, test your own use cases.</p>
</div>",1623189355.0,,False,h12wv22,False,t3_nusuhs,t1_h11r3jc,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h12wv22/,1,False,2,False,nusuhs,Cplusplus,t5_2qh6x
881,Possibility_Antique,"The typical reasons for things showing up late in C++ is because we are picky about letting things into the language. std::format is really efficient. More efficient than the c equivalent, and it's very well thought out. We've always had printf/sprints, and we've had streams, so we had the ability to be picky with what was accepted into the language. Arguably, the same thing happened with std::filesystem in C++17. It took them until 2017 to add a cross platform way of manipulated files. But the result is a really well out together library.

Another reason is that C++ is compiled to native binary. C#/Java do not, and scripting languages are even higher level. It's quite a bit easier to implement some of these features in higher-level languages.

Keep an eye out for other things to be standardized that are common practice in other languages such as networking, executors, and reflection. We should be getting those soon, and I hope it means we will have a more thought out and efficient language than most.","<div class=""md""><p>The typical reasons for things showing up late in C++ is because we are picky about letting things into the language. std::format is really efficient. More efficient than the c equivalent, and it&#39;s very well thought out. We&#39;ve always had printf/sprints, and we&#39;ve had streams, so we had the ability to be picky with what was accepted into the language. Arguably, the same thing happened with std::filesystem in C++17. It took them until 2017 to add a cross platform way of manipulated files. But the result is a really well out together library.</p>

<p>Another reason is that C++ is compiled to native binary. C#/Java do not, and scripting languages are even higher level. It&#39;s quite a bit easier to implement some of these features in higher-level languages.</p>

<p>Keep an eye out for other things to be standardized that are common practice in other languages such as networking, executors, and reflection. We should be getting those soon, and I hope it means we will have a more thought out and efficient language than most.</p>
</div>",1623135340.0,,False,h1076b2,False,t3_nusuhs,t1_h104o4g,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h1076b2/,1,False,14,False,nusuhs,Cplusplus,t5_2qh6x
882,Possibility_Antique,"You can simply use <fmt>, which is the open source library std::format is based off of.","<div class=""md""><p>You can simply use &lt;fmt&gt;, which is the open source library std::format is based off of.</p>
</div>",1623437953.0,,False,h1focnc,False,t3_nusuhs,t1_h1ffxg5,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h1focnc/,0,False,1,False,nusuhs,Cplusplus,t5_2qh6x
883,Possibility_Antique,"If you've ever dabbled in embedded software, you'll know that there are a LOT of compilers and implementations out there. In practice, many do have warnings enabled for type safety, but there is no language-level guarantee. std::format and std::ostream are guaranteed to fail to compile in the event that type safety is broken on every single compliant implementation and compiler.","<div class=""md""><p>If you&#39;ve ever dabbled in embedded software, you&#39;ll know that there are a LOT of compilers and implementations out there. In practice, many do have warnings enabled for type safety, but there is no language-level guarantee. std::format and std::ostream are guaranteed to fail to compile in the event that type safety is broken on every single compliant implementation and compiler.</p>
</div>",1623131702.0,,False,h102qvt,False,t3_nusuhs,t1_h0zx4bs,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h102qvt/,0,False,5,False,nusuhs,Cplusplus,t5_2qh6x
884,bert8128,"Warnings, but not errors.","<div class=""md""><p>Warnings, but not errors.</p>
</div>",1623189084.0,,False,h12w9qg,False,t3_nusuhs,t1_h0zx4bs,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h12w9qg/,0,False,1,False,nusuhs,Cplusplus,t5_2qh6x
885,mredding,"I agree whole heatedly, profiling is the ultimate authority to performance. Out if curiosity, did you disable synchronization with stdio? I've found that to be a big boost in performance and not too many developers know about it. And if you were using standard input and output, did you untie input from output?","<div class=""md""><p>I agree whole heatedly, profiling is the ultimate authority to performance. Out if curiosity, did you disable synchronization with stdio? I&#39;ve found that to be a big boost in performance and not too many developers know about it. And if you were using standard input and output, did you untie input from output?</p>
</div>",1623192253.0,,False,h13305b,False,t3_nusuhs,t1_h12wv22,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h13305b/,1,False,2,False,nusuhs,Cplusplus,t5_2qh6x
886,,How can be `std::format` more efficient than `printf`? Could you please elaborate on that?,"<div class=""md""><p>How can be <code>std::format</code> more efficient than <code>printf</code>? Could you please elaborate on that?</p>
</div>",1623140464.0,,False,h10cq7q,False,t3_nusuhs,t1_h1076b2,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h10cq7q/,2,False,2,False,nusuhs,Cplusplus,t5_2qh6x
887,bert8128,"I didn’t do either of those things, as I was writing to a freestanding buffet, not cout. In the end what I have is about the same speed as Google’s StrCat function but more suited to my particular domain. The use was mainly for logging, and convenience, consistency and robustness were the main goals, and I don’t thing streams would have helped there. The performance was not terrible, and wasn’t a significant factor overall.","<div class=""md""><p>I didn’t do either of those things, as I was writing to a freestanding buffet, not cout. In the end what I have is about the same speed as Google’s StrCat function but more suited to my particular domain. The use was mainly for logging, and convenience, consistency and robustness were the main goals, and I don’t thing streams would have helped there. The performance was not terrible, and wasn’t a significant factor overall.</p>
</div>",1623218877.0,,False,h14fae3,False,t3_nusuhs,t1_h13305b,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h14fae3/,0,False,1,False,nusuhs,Cplusplus,t5_2qh6x
888,Raesangur_Koriaron,"I believe because a lot more is done at compile time.  
With printf, the format string needed to be parsed at every call only to know how to format the types passed as arguments.   
The current `std::format` is mostly based on `fmtlib`, that is an open-source library, if you look at its source code (or even better, the STL's source code for the implementation of `std::format`, the whole thing is `constexpr`, and when we'll get complete support for `constexpr` `std::string` I expect even faster runtime speeds.  
But that's just my opinion on the matter, it may simply be better and more efficient algorithms and/or memory management and/or syntax.","<div class=""md""><p>I believe because a lot more is done at compile time.<br/>
With printf, the format string needed to be parsed at every call only to know how to format the types passed as arguments.<br/>
The current <code>std::format</code> is mostly based on <code>fmtlib</code>, that is an open-source library, if you look at its source code (or even better, the STL&#39;s source code for the implementation of <code>std::format</code>, the whole thing is <code>constexpr</code>, and when we&#39;ll get complete support for <code>constexpr</code> <code>std::string</code> I expect even faster runtime speeds.<br/>
But that&#39;s just my opinion on the matter, it may simply be better and more efficient algorithms and/or memory management and/or syntax.</p>
</div>",1623184799.0,,False,h12mq3a,False,t3_nusuhs,t1_h10cq7q,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h12mq3a/,1,False,6,False,nusuhs,Cplusplus,t5_2qh6x
889,Possibility_Antique,"I don't know the reason, but you can certainly find benchmarks online. https://github.com/fmtlib/format-benchmark","<div class=""md""><p>I don&#39;t know the reason, but you can certainly find benchmarks online. <a href=""https://github.com/fmtlib/format-benchmark"">https://github.com/fmtlib/format-benchmark</a></p>
</div>",1623153715.0,,False,h10ot5a,False,t3_nusuhs,t1_h10cq7q,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h10ot5a/,0,False,4,False,nusuhs,Cplusplus,t5_2qh6x
890,Possibility_Antique,"I suspect inlining might also make it faster than the C implementation, but I also have no evidence to back that up","<div class=""md""><p>I suspect inlining might also make it faster than the C implementation, but I also have no evidence to back that up</p>
</div>",1623457036.0,,False,h1gqv2s,False,t3_nusuhs,t1_h12mq3a,/r/Cplusplus/comments/nusuhs/why_is_printf_considered_deprecated/h1gqv2s/,0,False,2,False,nusuhs,Cplusplus,t5_2qh6x
891,topman20000,"The gameDev course is really great.  

But I wouldn’t start with that one if you just want to learn the very basics of C++.  Instead I would recommend [this course](https://www.udemy.com/course/learn-cpp-for-ue4-unit-1/).  The reason for this is that this particular course is a good segue into the game development angle, but it doesn’t jump right into unreal engine or require you to set up VS code. Instead it focuses on applying the principles exclusively in visual studio community. The reason I prefer this is because when you are developing with unreal engine, the structure of each of the C++ files and classes relies on different libraries, And when you are instantiating classes, you are basically working with inheritance right off the bat, which is why most people who work with unreal engine prefer to use blueprint scripting, rather than C++ scripting.  It’s just easier than having to go through the whole reflection/garbage collection ordeal



Outside of unreal engine, C++ is a language that tends to have several branches of applications, and while you might have a root in game dev, it depends on the application you want to use it for.  This is because C++ is made up of its own native libraries as well as several third-party libraries for development in different applications.

If you were to use it for operations in OCR or data science or web dev, it might be a little bit superfluous, given the fact that languages like python have much more concise coding for their applications.  

If you want to get into GUI and desktop app development. You might look into resources for studying QT Creator/Designer.  It’s a really Great resource for developing desktop applications because it is essentially a C++ IDE with a visual design form that allows you to visually set up slots and signals for each of your Wiget/Window classes, making the workflow a lot smoother.  

If you are using it for computational mathematics, C++ has a library dedicated to math operations and algorithms.  Once you learn the basics, you can include that library in your code to derive such classes.

If you were thinking of getting into operations which require multithreading, Udemy has courses on those","<div class=""md""><p>The gameDev course is really great.  </p>

<p>But I wouldn’t start with that one if you just want to learn the very basics of C++.  Instead I would recommend <a href=""https://www.udemy.com/course/learn-cpp-for-ue4-unit-1/"">this course</a>.  The reason for this is that this particular course is a good segue into the game development angle, but it doesn’t jump right into unreal engine or require you to set up VS code. Instead it focuses on applying the principles exclusively in visual studio community. The reason I prefer this is because when you are developing with unreal engine, the structure of each of the C++ files and classes relies on different libraries, And when you are instantiating classes, you are basically working with inheritance right off the bat, which is why most people who work with unreal engine prefer to use blueprint scripting, rather than C++ scripting.  It’s just easier than having to go through the whole reflection/garbage collection ordeal</p>

<p>Outside of unreal engine, C++ is a language that tends to have several branches of applications, and while you might have a root in game dev, it depends on the application you want to use it for.  This is because C++ is made up of its own native libraries as well as several third-party libraries for development in different applications.</p>

<p>If you were to use it for operations in OCR or data science or web dev, it might be a little bit superfluous, given the fact that languages like python have much more concise coding for their applications.  </p>

<p>If you want to get into GUI and desktop app development. You might look into resources for studying QT Creator/Designer.  It’s a really Great resource for developing desktop applications because it is essentially a C++ IDE with a visual design form that allows you to visually set up slots and signals for each of your Wiget/Window classes, making the workflow a lot smoother.  </p>

<p>If you are using it for computational mathematics, C++ has a library dedicated to math operations and algorithms.  Once you learn the basics, you can include that library in your code to derive such classes.</p>

<p>If you were thinking of getting into operations which require multithreading, Udemy has courses on those</p>
</div>",1631894129.0,,False,hd7ye15,False,t3_pq1o23,t3_pq1o23,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd7ye15/,2,False,6,False,pq1o23,Cplusplus,t5_2qh6x
892,AKostur,"I'm not convinced that gaming is the right area to focus on learning C++.  The gaming folk tend to place a bunch of restrictions on which aspects of C++ that they are willing to use (for various justifiable reasons).  But if you're looking to learn the language, you wouldn't want those extra restrictions.","<div class=""md""><p>I&#39;m not convinced that gaming is the right area to focus on learning C++.  The gaming folk tend to place a bunch of restrictions on which aspects of C++ that they are willing to use (for various justifiable reasons).  But if you&#39;re looking to learn the language, you wouldn&#39;t want those extra restrictions.</p>
</div>",1631894462.0,,False,hd7z6v0,False,t3_pq1o23,t3_pq1o23,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd7z6v0/,2,False,5,False,pq1o23,Cplusplus,t5_2qh6x
893,magion,"learncpp.com or just search the subreddit for `learn` since your question is asked a ton, and there are tons of good answers already given to this question.","<div class=""md""><p>learncpp.com or just search the subreddit for <code>learn</code> since your question is asked a ton, and there are tons of good answers already given to this question.</p>
</div>",1631893773.0,,False,hd7xj63,False,t3_pq1o23,t3_pq1o23,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd7xj63/,0,False,2,False,pq1o23,Cplusplus,t5_2qh6x
894,Ikkepop,"Probably choosing a project and trying to fumble your way trough it. Do that 5-6 times and you are well on your way. Insert some good books inbetween and also alot of cppcon (and other conference) videos and your golden. Try reading ""A tour of C++""","<div class=""md""><p>Probably choosing a project and trying to fumble your way trough it. Do that 5-6 times and you are well on your way. Insert some good books inbetween and also alot of cppcon (and other conference) videos and your golden. Try reading &quot;A tour of C++&quot;</p>
</div>",1631900380.0,,False,hd8dbtt,False,t3_pq1o23,t3_pq1o23,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd8dbtt/,0,False,2,False,pq1o23,Cplusplus,t5_2qh6x
895,Shieldfoss,"Lot of answers in this thread but nobody has mentioned the canonical one yet: The inventor of the language wrote [""A Tour of C++""](https://www.stroustrup.com/tour2.html)

His description:

> The ``tour'' is a quick (about 240 pages) tutorial overview of all of standard C++ (language and standard library) at a moderately high level for people who already know C++ or at least are experienced programmers. It covers C++17 plus a few likely features of C++20.

If you have 8 years of web dev I think you're in the ""experienced programmers"" target demographic for this book.","<div class=""md""><p>Lot of answers in this thread but nobody has mentioned the canonical one yet: The inventor of the language wrote <a href=""https://www.stroustrup.com/tour2.html"">&quot;A Tour of C++&quot;</a></p>

<p>His description:</p>

<blockquote>
<p>The ``tour&#39;&#39; is a quick (about 240 pages) tutorial overview of all of standard C++ (language and standard library) at a moderately high level for people who already know C++ or at least are experienced programmers. It covers C++17 plus a few likely features of C++20.</p>
</blockquote>

<p>If you have 8 years of web dev I think you&#39;re in the &quot;experienced programmers&quot; target demographic for this book.</p>
</div>",1631904171.0,,False,hd8m8t9,False,t3_pq1o23,t3_pq1o23,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd8m8t9/,1,False,2,False,pq1o23,Cplusplus,t5_2qh6x
896,mikeblas,"
All have different learning preferences. Different paces, modalities. Solo, group. Visual, aural. By study, by practice. Breadth-first, depth-first.  Structured, un-structured.

We don't know your preference, or even what language(s) you already know. (Is it JS? Anything else?)

How can someone recommend the ""best way"", then?

Seems like your suggested path would have you learning at least three things all at the same time: C++, Unity framework, and gamedev. Probably other things, like graphics programming, too. Is that wise? Is it your preferred approach?","<div class=""md""><p>All have different learning preferences. Different paces, modalities. Solo, group. Visual, aural. By study, by practice. Breadth-first, depth-first.  Structured, un-structured.</p>

<p>We don&#39;t know your preference, or even what language(s) you already know. (Is it JS? Anything else?)</p>

<p>How can someone recommend the &quot;best way&quot;, then?</p>

<p>Seems like your suggested path would have you learning at least three things all at the same time: C++, Unity framework, and gamedev. Probably other things, like graphics programming, too. Is that wise? Is it your preferred approach?</p>
</div>",1631901629.0,,False,hd8gav5,False,t3_pq1o23,t3_pq1o23,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd8gav5/,0,False,1,False,pq1o23,Cplusplus,t5_2qh6x
897,Ilyps,https://www.reddit.com/r/learnprogramming/wiki/faq_cpp,"<div class=""md""><p><a href=""https://www.reddit.com/r/learnprogramming/wiki/faq_cpp"">https://www.reddit.com/r/learnprogramming/wiki/faq_cpp</a></p>
</div>",1631902165.0,,False,hd8hkrq,False,t3_pq1o23,t3_pq1o23,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd8hkrq/,0,False,1,False,pq1o23,Cplusplus,t5_2qh6x
898,flying_5loths,[learncpp.com](https://learncpp.com),"<div class=""md""><p><a href=""https://learncpp.com"">learncpp.com</a></p>
</div>",1631911639.0,,False,hd93rks,False,t3_pq1o23,t3_pq1o23,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd93rks/,0,False,1,False,pq1o23,Cplusplus,t5_2qh6x
899,condensateme,Can you explain the JS fanboy ratrace?,"<div class=""md""><p>Can you explain the JS fanboy ratrace?</p>
</div>",1633031300.0,,False,hew1brx,False,t3_pq1o23,t3_pq1o23,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hew1brx/,1,False,1,False,pq1o23,Cplusplus,t5_2qh6x
900,Middlewarian,"> C++ is a language that tends to have several branches of applications

The chip shortage may spark another renaissance for C++.  Six months ago there were predictions the shortage would last 12 to 18 months.  Now they are talking about 2024.  I'm biased though as I've been investing in C++ for years.","<div class=""md""><blockquote>
<p>C++ is a language that tends to have several branches of applications</p>
</blockquote>

<p>The chip shortage may spark another renaissance for C++.  Six months ago there were predictions the shortage would last 12 to 18 months.  Now they are talking about 2024.  I&#39;m biased though as I&#39;ve been investing in C++ for years.</p>
</div>",1631896400.0,,False,hd83tmm,False,t3_pq1o23,t1_hd7ye15,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd83tmm/,1,False,3,False,pq1o23,Cplusplus,t5_2qh6x
901,Miserable_Decision_4,"Thanks for the input. I didnt know that about Unreal (blueprint scripting vs C++ scripting) and its a good point. Truth be told, I hate Visual Studio and do 99% of my work in VS Code, so that aspect wouldnt bother me :)

I'm really going to consider your advice. I want to get really good at C++ but I want an entertaining vehicle to learn it in. Writing REST APIs and ToDo apps have burnt me out ;)","<div class=""md""><p>Thanks for the input. I didnt know that about Unreal (blueprint scripting vs C++ scripting) and its a good point. Truth be told, I hate Visual Studio and do 99% of my work in VS Code, so that aspect wouldnt bother me :)</p>

<p>I&#39;m really going to consider your advice. I want to get really good at C++ but I want an entertaining vehicle to learn it in. Writing REST APIs and ToDo apps have burnt me out ;)</p>
</div>",1631894539.0,,False,hd7zdie,True,t3_pq1o23,t1_hd7ye15,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd7zdie/,1,False,1,False,pq1o23,Cplusplus,t5_2qh6x
902,Miserable_Decision_4,"Fair point. 

I would _eventually_ like to learn all the things, but its nice to start somewhere with a bit of fun packed in.","<div class=""md""><p>Fair point. </p>

<p>I would <em>eventually</em> like to learn all the things, but its nice to start somewhere with a bit of fun packed in.</p>
</div>",1631894772.0,,False,hd7zxr8,True,t3_pq1o23,t1_hd7z6v0,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd7zxr8/,0,False,2,False,pq1o23,Cplusplus,t5_2qh6x
903,,"Agree. For better or worse, the gaming industry doesn't want (and in many cases can't afford) to use modern C++ nor OOP stuff. I personally love this approach since it's very data-driven and hands-on, but it's not what the average C++ job requires.","<div class=""md""><p>Agree. For better or worse, the gaming industry doesn&#39;t want (and in many cases can&#39;t afford) to use modern C++ nor OOP stuff. I personally love this approach since it&#39;s very data-driven and hands-on, but it&#39;s not what the average C++ job requires.</p>
</div>",1631901785.0,,1631902012.0,hd8go7a,False,t3_pq1o23,t1_hd7z6v0,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd8go7a/,1,False,1,False,pq1o23,Cplusplus,t5_2qh6x
904,,"Which is full of holes. 

The fill in the gaps pick up Scott Meyers Effective Modern C++","<div class=""md""><p>Which is full of holes. </p>

<p>The fill in the gaps pick up Scott Meyers Effective Modern C++</p>
</div>",1631907634.0,,False,hd8ubph,False,t3_pq1o23,t1_hd8m8t9,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd8ubph/,0,False,2,False,pq1o23,Cplusplus,t5_2qh6x
905,Miserable_Decision_4,"Theres a lot of churn around chasing the latest and greatest tool/tech stack/build pipeline, etc. There's also a nearly constant proliferation of single-page app frameworks vying to get crowned prom king. 

I feel like a loner when I tell people, ""I picked X tech to focus on... and only that. Why? Because someone pays me to do it.""","<div class=""md""><p>Theres a lot of churn around chasing the latest and greatest tool/tech stack/build pipeline, etc. There&#39;s also a nearly constant proliferation of single-page app frameworks vying to get crowned prom king. </p>

<p>I feel like a loner when I tell people, &quot;I picked X tech to focus on... and only that. Why? Because someone pays me to do it.&quot;</p>
</div>",1633049404.0,,False,hex4cdp,True,t3_pq1o23,t1_hew1brx,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hex4cdp/,0,False,1,False,pq1o23,Cplusplus,t5_2qh6x
906,topman20000,"I’d love to learn as much about this From you as possible.  When you say investing, do you mean training or into an index?","<div class=""md""><p>I’d love to learn as much about this From you as possible.  When you say investing, do you mean training or into an index?</p>
</div>",1631898189.0,,1631899068.0,hd882vi,False,t3_pq1o23,t1_hd83tmm,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd882vi/,1,False,0,False,pq1o23,Cplusplus,t5_2qh6x
907,topman20000,Have you looked into code::blocks with the GCC compiler?,"<div class=""md""><p>Have you looked into code::blocks with the GCC compiler?</p>
</div>",1631898470.0,,False,hd88r43,False,t3_pq1o23,t1_hd7zdie,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd88r43/,1,False,2,False,pq1o23,Cplusplus,t5_2qh6x
908,sternone_2,"most companies are not using modern C++

most companies are litterally just maintaining C++98","<div class=""md""><p>most companies are not using modern C++</p>

<p>most companies are litterally just maintaining C++98</p>
</div>",1631955454.0,,False,hdb82h9,False,t3_pq1o23,t1_hd8go7a,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hdb82h9/,1,False,1,False,pq1o23,Cplusplus,t5_2qh6x
909,csp256,i wonder what assets $CPP would even hold,"<div class=""md""><p>i wonder what assets $CPP would even hold</p>
</div>",1631945847.0,,False,hdawh6i,False,t3_pq1o23,t1_hd882vi,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hdawh6i/,0,False,2,False,pq1o23,Cplusplus,t5_2qh6x
910,Miserable_Decision_4,I will now! :),"<div class=""md""><p>I will now! :)</p>
</div>",1631898697.0,,False,hd89amd,True,t3_pq1o23,t1_hd88r43,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hd89amd/,0,False,2,False,pq1o23,Cplusplus,t5_2qh6x
911,,Lately I've seen a lot of job postings requiring c++11. Area differences most likely,"<div class=""md""><p>Lately I&#39;ve seen a lot of job postings requiring c++11. Area differences most likely</p>
</div>",1631980387.0,,False,hdcdz0t,False,t3_pq1o23,t1_hdb82h9,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hdcdz0t/,1,False,1,False,pq1o23,Cplusplus,t5_2qh6x
912,sternone_2,they say it but then you code 90% on C++98,"<div class=""md""><p>they say it but then you code 90% on C++98</p>
</div>",1632000839.0,,False,hddrpkw,False,t3_pq1o23,t1_hdcdz0t,/r/Cplusplus/comments/pq1o23/best_way_to_learn_c_as_an_experienced_developer/hddrpkw/,0,False,1,False,pq1o23,Cplusplus,t5_2qh6x
913,AnsonKindred,"That is awesome, it seems like such a fundamental bug too, can't believe it lasted so long. I wonder how many old programs had mysterious crashes in release mode that devs couldn't replicate in debug mode that just drove them up the walls. Poor devs.","<div class=""md""><p>That is awesome, it seems like such a fundamental bug too, can&#39;t believe it lasted so long. I wonder how many old programs had mysterious crashes in release mode that devs couldn&#39;t replicate in debug mode that just drove them up the walls. Poor devs.</p>
</div>",1436476833.0,,False,csxvgv8,False,t3_3coa0o,t3_3coa0o,/r/Cplusplus/comments/3coa0o/10_year_old_compiler_bug_found/csxvgv8/,0,False,2,False,3coa0o,Cplusplus,t5_2qh6x
914,CyberBill,Crazy!  Has this been reported?,"<div class=""md""><p>Crazy!  Has this been reported?</p>
</div>",1436449409.0,,False,csxdnkl,False,t3_3coa0o,t3_3coa0o,/r/Cplusplus/comments/3coa0o/10_year_old_compiler_bug_found/csxdnkl/,0,False,2,False,3coa0o,Cplusplus,t5_2qh6x
915,NaturProdukt,"I recommend The Cherno youtube channel, the guy gives you a lot of theory before the actual coding and explains everything in depth. Good luck.","<div class=""md""><p>I recommend The Cherno youtube channel, the guy gives you a lot of theory before the actual coding and explains everything in depth. Good luck.</p>
</div>",1587679356.0,,False,fod3f8j,False,t3_g6v9ty,t3_g6v9ty,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/fod3f8j/,1,False,16,False,g6v9ty,Cplusplus,t5_2qh6x
916,,"[https://www.learncpp.com/](https://www.learncpp.com/)

Pair this with youtube videos and it'll be a great start!

Best of luck!","<div class=""md""><p><a href=""https://www.learncpp.com/"">https://www.learncpp.com/</a></p>

<p>Pair this with youtube videos and it&#39;ll be a great start!</p>

<p>Best of luck!</p>
</div>",1587679591.0,,False,fod42ay,False,t3_g6v9ty,t3_g6v9ty,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/fod42ay/,0,False,10,False,g6v9ty,Cplusplus,t5_2qh6x
917,sign_in_or_sign_up,"there is only starting to learn!  no one finishes...  :-)

I would start with a toy example, maybe a small game, text based or opengl or sdl or something","<div class=""md""><p>there is only starting to learn!  no one finishes...  :-)</p>

<p>I would start with a toy example, maybe a small game, text based or opengl or sdl or something</p>
</div>",1587678217.0,,False,fod08k8,False,t3_g6v9ty,t3_g6v9ty,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/fod08k8/,0,False,6,False,g6v9ty,Cplusplus,t5_2qh6x
918,,"Start with a calculator program. Always.

Go through youtube for interesting projects. Dont watch the videos. Create.

All the best! Baby steps.","<div class=""md""><p>Start with a calculator program. Always.</p>

<p>Go through youtube for interesting projects. Dont watch the videos. Create.</p>

<p>All the best! Baby steps.</p>
</div>",1587679049.0,,False,fod2k8b,False,t3_g6v9ty,t3_g6v9ty,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/fod2k8b/,2,False,8,False,g6v9ty,Cplusplus,t5_2qh6x
919,NightMoreLTU,"https://youtu.be/vLnPwxZdW4Y

A 4h video of the basics of programming. Could be watched on 1.5x speed.
Covers most of the basics of c++. Helped me in hard times.","<div class=""md""><p><a href=""https://youtu.be/vLnPwxZdW4Y"">https://youtu.be/vLnPwxZdW4Y</a></p>

<p>A 4h video of the basics of programming. Could be watched on 1.5x speed.
Covers most of the basics of c++. Helped me in hard times.</p>
</div>",1587742059.0,,False,fofsj8t,False,t3_g6v9ty,t3_g6v9ty,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/fofsj8t/,0,False,2,False,g6v9ty,Cplusplus,t5_2qh6x
920,upper_bound,"Starting from 0 C++ experience, or 0 programming experience?  


If you have 0 programming experience, I'd suggest a quality book as they tend to offer a much more guided approach where chapters build directly upon one another. An example with a games focus  
[https://www.amazon.com/Beginning-Through-Game-Programming-Fourth-ebook/dp/B00LZW07P0/ref=sr\_1\_3?dchild=1&keywords=c%2B%2B+programming+game&qid=1587748961&sr=8-3](https://www.amazon.com/Beginning-Through-Game-Programming-Fourth-ebook/dp/B00LZW07P0/ref=sr_1_3?dchild=1&keywords=c%2B%2B+programming+game&qid=1587748961&sr=8-3)  


If you have programming experience, and just need a good guide to c++ 'isms', Stroustraup is pretty much a right of passage (although this is more a reference/guide than a tutorial that works through examples)  
[https://www.amazon.com/Programming-Language-Programm-Lang\_p4-ebook/dp/B00DUW4BMS/ref=sr\_1\_6?dchild=1&keywords=c%2B%2B+learning&qid=1587749050&sr=8-6](https://www.amazon.com/Programming-Language-Programm-Lang_p4-ebook/dp/B00DUW4BMS/ref=sr_1_6?dchild=1&keywords=c%2B%2B+learning&qid=1587749050&sr=8-6)","<div class=""md""><p>Starting from 0 C++ experience, or 0 programming experience?  </p>

<p>If you have 0 programming experience, I&#39;d suggest a quality book as they tend to offer a much more guided approach where chapters build directly upon one another. An example with a games focus<br/>
<a href=""https://www.amazon.com/Beginning-Through-Game-Programming-Fourth-ebook/dp/B00LZW07P0/ref=sr_1_3?dchild=1&amp;keywords=c%2B%2B+programming+game&amp;qid=1587748961&amp;sr=8-3"">https://www.amazon.com/Beginning-Through-Game-Programming-Fourth-ebook/dp/B00LZW07P0/ref=sr_1_3?dchild=1&amp;keywords=c%2B%2B+programming+game&amp;qid=1587748961&amp;sr=8-3</a>  </p>

<p>If you have programming experience, and just need a good guide to c++ &#39;isms&#39;, Stroustraup is pretty much a right of passage (although this is more a reference/guide than a tutorial that works through examples)<br/>
<a href=""https://www.amazon.com/Programming-Language-Programm-Lang_p4-ebook/dp/B00DUW4BMS/ref=sr_1_6?dchild=1&amp;keywords=c%2B%2B+learning&amp;qid=1587749050&amp;sr=8-6"">https://www.amazon.com/Programming-Language-Programm-Lang_p4-ebook/dp/B00DUW4BMS/ref=sr_1_6?dchild=1&amp;keywords=c%2B%2B+learning&amp;qid=1587749050&amp;sr=8-6</a></p>
</div>",1587749186.0,,False,fog86p1,False,t3_g6v9ty,t3_g6v9ty,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/fog86p1/,0,False,2,False,g6v9ty,Cplusplus,t5_2qh6x
921,duochimo,"I will always recommended Stroustrup's Programming Principles and Practices. Get the most recent edition and just start from page 1. It may seem daunting, but the material is really well put together and it is easy to follow. Stroustrup created C++ and he does the best job at explaining how it works.","<div class=""md""><p>I will always recommended Stroustrup&#39;s Programming Principles and Practices. Get the most recent edition and just start from page 1. It may seem daunting, but the material is really well put together and it is easy to follow. Stroustrup created C++ and he does the best job at explaining how it works.</p>
</div>",1587682127.0,,False,foda3be,False,t3_g6v9ty,t3_g6v9ty,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/foda3be/,0,False,1,False,g6v9ty,Cplusplus,t5_2qh6x
922,movme000,Youtube? Just like everything else :))),"<div class=""md""><p>Youtube? Just like everything else :)))</p>
</div>",1587677172.0,,False,focxhs8,False,t3_g6v9ty,t3_g6v9ty,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/focxhs8/,1,False,-1,False,g6v9ty,Cplusplus,t5_2qh6x
923,,"Yea cherno takes care of a ton of the issues with starting out. (Explaining IDE, compiler etc) but you shouldn't rely on this videos too much. Books are a great source and whenever the book doesn't explain something too well.. that's best for youtube.","<div class=""md""><p>Yea cherno takes care of a ton of the issues with starting out. (Explaining IDE, compiler etc) but you shouldn&#39;t rely on this videos too much. Books are a great source and whenever the book doesn&#39;t explain something too well.. that&#39;s best for youtube.</p>
</div>",1587701014.0,,False,foed8k4,False,t3_g6v9ty,t1_fod3f8j,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/foed8k4/,0,False,4,False,g6v9ty,Cplusplus,t5_2qh6x
924,,"I have had a few friends try to ""learn"" by watching endless videos/talks and then talking about programming concepts without ever sitting down to write a single line of code.

I hope I don't have to explain how successful their programming 'career' ended up.","<div class=""md""><p>I have had a few friends try to &quot;learn&quot; by watching endless videos/talks and then talking about programming concepts without ever sitting down to write a single line of code.</p>

<p>I hope I don&#39;t have to explain how successful their programming &#39;career&#39; ended up.</p>
</div>",1587680195.0,,False,fod5gl7,False,t3_g6v9ty,t1_fod2k8b,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/fod5gl7/,2,False,4,False,g6v9ty,Cplusplus,t5_2qh6x
925,GrossInsightfulness,"I always recommend people start with a word counter for their first big project, but I think a calculator would also be a good recommendation.","<div class=""md""><p>I always recommend people start with a word counter for their first big project, but I think a calculator would also be a good recommendation.</p>
</div>",1587708425.0,,False,foen7bn,False,t3_g6v9ty,t1_fod2k8b,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/foen7bn/,0,False,2,False,g6v9ty,Cplusplus,t5_2qh6x
926,Ogromny_,Nothing is better than books,"<div class=""md""><p>Nothing is better than books</p>
</div>",1587677932.0,,False,foczhim,False,t3_g6v9ty,t1_focxhs8,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/foczhim/,1,False,8,False,g6v9ty,Cplusplus,t5_2qh6x
927,UniqueFailure,For me. I learned alot more about coding when I put down the graphically pleasing conceptual youtube videos and hit the documentation,"<div class=""md""><p>For me. I learned alot more about coding when I put down the graphically pleasing conceptual youtube videos and hit the documentation</p>
</div>",1587700992.0,,False,foed78g,False,t3_g6v9ty,t1_fod5gl7,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/foed78g/,1,False,1,False,g6v9ty,Cplusplus,t5_2qh6x
928,,"Hey
Of what I’ve realized, everyone has their own way of learning, and some might think watching youtube videos is their way just because its easy. 

A lot of people get stuck there and eventually realize they were just never really interested in programming.","<div class=""md""><p>Hey
Of what I’ve realized, everyone has their own way of learning, and some might think watching youtube videos is their way just because its easy. </p>

<p>A lot of people get stuck there and eventually realize they were just never really interested in programming.</p>
</div>",1587738285.0,,False,fofld72,False,t3_g6v9ty,t1_fod5gl7,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/fofld72/,0,False,0,False,g6v9ty,Cplusplus,t5_2qh6x
929,,"True, but not for beginners","<div class=""md""><p>True, but not for beginners</p>
</div>",1587691849.0,,False,fodx84n,False,t3_g6v9ty,t1_foczhim,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/fodx84n/,0,False,0,False,g6v9ty,Cplusplus,t5_2qh6x
930,,Graphically pleasing videos are good to start with. I personally finished 3Blue1Brown’s Linear Algebra module before actually getting to Gilbert Strang’s 18.06.,"<div class=""md""><p>Graphically pleasing videos are good to start with. I personally finished 3Blue1Brown’s Linear Algebra module before actually getting to Gilbert Strang’s 18.06.</p>
</div>",1587738392.0,,False,foflk0r,False,t3_g6v9ty,t1_foed78g,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/foflk0r/,1,False,1,False,g6v9ty,Cplusplus,t5_2qh6x
931,UniqueFailure,"Seen almost every 3blue1brown. Love him. I agree, awesome to start with. But no progress is made until your pencil hits the paper in my personal experience","<div class=""md""><p>Seen almost every 3blue1brown. Love him. I agree, awesome to start with. But no progress is made until your pencil hits the paper in my personal experience</p>
</div>",1588096791.0,,False,fov7ts8,False,t3_g6v9ty,t1_foflk0r,/r/Cplusplus/comments/g6v9ty/i_want_to_learn_c/fov7ts8/,0,False,2,False,g6v9ty,Cplusplus,t5_2qh6x
932,Middlewarian,">then it's easy to transition to other languages.

It seems like the tide has been going out on C++ for a few years, but the chip shortage might be a turning point in favor of C++.  I hear about it in embedded circles and am experiencing it firsthand looking for a new laptop:  some of the laptops I'm interested in aren't available for 2 to 3 months.","<div class=""md""><blockquote>
<p>then it&#39;s easy to transition to other languages.</p>
</blockquote>

<p>It seems like the tide has been going out on C++ for a few years, but the chip shortage might be a turning point in favor of C++.  I hear about it in embedded circles and am experiencing it firsthand looking for a new laptop:  some of the laptops I&#39;m interested in aren&#39;t available for 2 to 3 months.</p>
</div>",1630952031.0,,False,hbu3dbo,False,t3_pixgx3,t3_pixgx3,/r/Cplusplus/comments/pixgx3/how_to_learn_c_my_personal_recommended_roadmap/hbu3dbo/,1,False,6,False,pixgx3,Cplusplus,t5_2qh6x
933,,"I'm currently learning it for fun and my biggest problem is I dont know the fine line between crawl, walk and run.

So I look forward to these videos. I think having a solid book is great just to have well written documentation to understand concepts","<div class=""md""><p>I&#39;m currently learning it for fun and my biggest problem is I dont know the fine line between crawl, walk and run.</p>

<p>So I look forward to these videos. I think having a solid book is great just to have well written documentation to understand concepts</p>
</div>",1630965531.0,,False,hbuxl2h,False,t3_pixgx3,t3_pixgx3,/r/Cplusplus/comments/pixgx3/how_to_learn_c_my_personal_recommended_roadmap/hbuxl2h/,1,False,1,False,pixgx3,Cplusplus,t5_2qh6x
934,dvali,I'm not sure I understand how you're drawing a link between the chip shortage and C++?,"<div class=""md""><p>I&#39;m not sure I understand how you&#39;re drawing a link between the chip shortage and C++?</p>
</div>",1630958721.0,,False,hbuijqo,False,t3_pixgx3,t1_hbu3dbo,/r/Cplusplus/comments/pixgx3/how_to_learn_c_my_personal_recommended_roadmap/hbuijqo/,1,False,3,False,pixgx3,Cplusplus,t5_2qh6x
935,rwp80,"On the right-side panel of this subreddit, there's a section called ""Good free sites"". I don't recognise some of them, but the first one, [learncpp.com](https://learncpp.com), is excellent the few times I've used it.","<div class=""md""><p>On the right-side panel of this subreddit, there&#39;s a section called &quot;Good free sites&quot;. I don&#39;t recognise some of them, but the first one, <a href=""https://learncpp.com"">learncpp.com</a>, is excellent the few times I&#39;ve used it.</p>
</div>",1631018280.0,,False,hbxabqr,True,t3_pixgx3,t1_hbuxl2h,/r/Cplusplus/comments/pixgx3/how_to_learn_c_my_personal_recommended_roadmap/hbxabqr/,0,False,2,False,pixgx3,Cplusplus,t5_2qh6x
936,Middlewarian,"It's a guess, but increasing hardware prices may give efficient languages like C++ an edge over interpreted languages.  A lot of companies try to ""fake it till they make it"" with interpreted languages.  Years ago Southwest Airlines used a lot of Perl for their website.  They moved to C and C++ to better handle the volume.  A little more recently Facebook moved from PHP to C++ as the site became more popular.   This spike in prices may raise the priority for switching to C++.  It doesn't appear to be a very ""transitory"" spike from what I can tell.","<div class=""md""><p>It&#39;s a guess, but increasing hardware prices may give efficient languages like C++ an edge over interpreted languages.  A lot of companies try to &quot;fake it till they make it&quot; with interpreted languages.  Years ago Southwest Airlines used a lot of Perl for their website.  They moved to C and C++ to better handle the volume.  A little more recently Facebook moved from PHP to C++ as the site became more popular.   This spike in prices may raise the priority for switching to C++.  It doesn&#39;t appear to be a very &quot;transitory&quot; spike from what I can tell.</p>
</div>",1630959500.0,,False,hbuk9km,False,t3_pixgx3,t1_hbuijqo,/r/Cplusplus/comments/pixgx3/how_to_learn_c_my_personal_recommended_roadmap/hbuk9km/,1,False,8,False,pixgx3,Cplusplus,t5_2qh6x
937,ifconfig1,"I certainly hope something like this happens, from an application design perspective. In my experience using many modern desktop/web/mobile apps, usually those based on Python, JavaScript, and Java, memory and CPU usage is extraordinary high.

I see no reason why Spotify should ever use over a gig of RAM, which has caused me headaches in my 16 GB system many times.

I don't mean to say that using these languages inherently means high resource usage, but they certainly encourage it with their design patterns and implementation philosophies.","<div class=""md""><p>I certainly hope something like this happens, from an application design perspective. In my experience using many modern desktop/web/mobile apps, usually those based on Python, JavaScript, and Java, memory and CPU usage is extraordinary high.</p>

<p>I see no reason why Spotify should ever use over a gig of RAM, which has caused me headaches in my 16 GB system many times.</p>

<p>I don&#39;t mean to say that using these languages inherently means high resource usage, but they certainly encourage it with their design patterns and implementation philosophies.</p>
</div>",1630982548.0,,False,hbvw2ay,False,t3_pixgx3,t1_hbuk9km,/r/Cplusplus/comments/pixgx3/how_to_learn_c_my_personal_recommended_roadmap/hbvw2ay/,0,False,4,False,pixgx3,Cplusplus,t5_2qh6x
938,tombardier,"Post the code, keep the momentum going :)","<div class=""md""><p>Post the code, keep the momentum going :)</p>
</div>",1566070098.0,,False,ex88f82,False,t3_crqm2v,t3_crqm2v,/r/Cplusplus/comments/crqm2v/i_made_chess_in_c_and_felt_proud_so_decided_to/ex88f82/,0,False,14,False,crqm2v,Cplusplus,t5_2qh6x
939,ImAGhosTTT,Nice man!!,"<div class=""md""><p>Nice man!!</p>
</div>",1566078779.0,,False,ex8tr3n,False,t3_crqm2v,t3_crqm2v,/r/Cplusplus/comments/crqm2v/i_made_chess_in_c_and_felt_proud_so_decided_to/ex8tr3n/,0,False,3,False,crqm2v,Cplusplus,t5_2qh6x
940,liftthecat,"Good job fam, keep on grinding! 👍🏻","<div class=""md""><p>Good job fam, keep on grinding! 👍🏻</p>
</div>",1566069907.0,,False,ex87w8u,False,t3_crqm2v,t3_crqm2v,/r/Cplusplus/comments/crqm2v/i_made_chess_in_c_and_felt_proud_so_decided_to/ex87w8u/,0,False,2,False,crqm2v,Cplusplus,t5_2qh6x
941,dragonfire2314,Post a video of it,"<div class=""md""><p>Post a video of it</p>
</div>",1566074821.0,,False,ex8lolh,False,t3_crqm2v,t3_crqm2v,/r/Cplusplus/comments/crqm2v/i_made_chess_in_c_and_felt_proud_so_decided_to/ex8lolh/,0,False,1,False,crqm2v,Cplusplus,t5_2qh6x
942,lordoflight03,Good job man! Keep up the good work!,"<div class=""md""><p>Good job man! Keep up the good work!</p>
</div>",1566108534.0,,False,exaieqp,False,t3_crqm2v,t3_crqm2v,/r/Cplusplus/comments/crqm2v/i_made_chess_in_c_and_felt_proud_so_decided_to/exaieqp/,0,False,1,False,crqm2v,Cplusplus,t5_2qh6x
943,CorysInTheHouse69,I’d recommend putting in some `requires` statements to help prevent any data types that can’t be used with those functions from being used. It creates more meaningful errors at compile time,"<div class=""md""><p>I’d recommend putting in some <code>requires</code> statements to help prevent any data types that can’t be used with those functions from being used. It creates more meaningful errors at compile time</p>
</div>",1629229472.0,,False,h9bqcek,False,t3_p6ahya,t3_p6ahya,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9bqcek/,0,False,19,False,p6ahya,Cplusplus,t5_2qh6x
944,krehwell,shouldn't you host this on sourceforge or smth?,"<div class=""md""><p>shouldn&#39;t you host this on sourceforge or smth?</p>
</div>",1629238117.0,,False,h9capti,False,t3_p6ahya,t3_p6ahya,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9capti/,0,False,7,False,p6ahya,Cplusplus,t5_2qh6x
945,Nihili0,"this is great, but as my coding standard uses snake_case I'll have to rewrite it to rename the function, or maybe you could add a macro to choose the style so everyone is happy?","<div class=""md""><p>this is great, but as my coding standard uses snake_case I&#39;ll have to rewrite it to rename the function, or maybe you could add a macro to choose the style so everyone is happy?</p>
</div>",1629272911.0,,False,h9dx4fj,False,t3_p6ahya,t3_p6ahya,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9dx4fj/,0,False,8,False,p6ahya,Cplusplus,t5_2qh6x
946,khedoros,"> static_assert(!std::is_floating_point<T>::value);

Any reason you aren't just checking for is_integral?

> return isEven(num - 2*num/abs(num));

How tongue-in-cheek is this meant to be?","<div class=""md""><blockquote>
<p>static_assert(!std::is_floating_point&lt;T&gt;::value);</p>
</blockquote>

<p>Any reason you aren&#39;t just checking for is_integral?</p>

<blockquote>
<p>return isEven(num - 2*num/abs(num));</p>
</blockquote>

<p>How tongue-in-cheek is this meant to be?</p>
</div>",1629230217.0,,False,h9bs5fy,False,t3_p6ahya,t3_p6ahya,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9bs5fy/,1,False,11,False,p6ahya,Cplusplus,t5_2qh6x
947,scatters,"There's a cool mathematical trick that you might not be aware of that would really help here:

    template<class T>
    constexpr bool isEven(T num) {
        using namespace std::complex_literals;
        return real(exp(num * std::numbers::pi_v<double> * 1i)) > 0;
    }

Not only is this more efficient (no recursion means getting the result in a fixed number of operations) but it also works on floating-point types!

    for (auto i : {0., 1., 2., 2.1, 2.2, -9.12345})
        std::cout << i << "": "" << std::boolalpha << isEven(i) << std::endl;

outputs:

    0: true
    1: false
    2: true
    2.1: true
    2.2: true
    -9.12345: false","<div class=""md""><p>There&#39;s a cool mathematical trick that you might not be aware of that would really help here:</p>

<pre><code>template&lt;class T&gt;
constexpr bool isEven(T num) {
    using namespace std::complex_literals;
    return real(exp(num * std::numbers::pi_v&lt;double&gt; * 1i)) &gt; 0;
}
</code></pre>

<p>Not only is this more efficient (no recursion means getting the result in a fixed number of operations) but it also works on floating-point types!</p>

<pre><code>for (auto i : {0., 1., 2., 2.1, 2.2, -9.12345})
    std::cout &lt;&lt; i &lt;&lt; &quot;: &quot; &lt;&lt; std::boolalpha &lt;&lt; isEven(i) &lt;&lt; std::endl;
</code></pre>

<p>outputs:</p>

<pre><code>0: true
1: false
2: true
2.1: true
2.2: true
-9.12345: false
</code></pre>
</div>",1629296328.0,,False,h9etu3b,False,t3_p6ahya,t3_p6ahya,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9etu3b/,0,False,5,False,p6ahya,Cplusplus,t5_2qh6x
948,sigbhu,"You’re doing it all wrong. You should host it on some random server, and then capriciously pull it so you break half the internet","<div class=""md""><p>You’re doing it all wrong. You should host it on some random server, and then capriciously pull it so you break half the internet</p>
</div>",1629287618.0,,False,h9ee1j1,False,t3_p6ahya,t3_p6ahya,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9ee1j1/,0,False,2,False,p6ahya,Cplusplus,t5_2qh6x
949,Gathering_Clouds_,For speed I would consider adding a look-up table of cached previously calculated values... ;-),"<div class=""md""><p>For speed I would consider adding a look-up table of cached previously calculated values... ;-)</p>
</div>",1629308109.0,,False,h9fk1r9,False,t3_p6ahya,t3_p6ahya,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9fk1r9/,1,False,2,False,p6ahya,Cplusplus,t5_2qh6x
950,rwp80,"Wouldn't this work?

`if(x % 2 == 0) { /* it's even */ }`

`else { /* it's odd */ }`

I'm not sure if there's an issue with types here, but my guess is it can solved with a simple typecast in the right place.

In more common practical terms, the above is most likely to only be used on integers anyway, since floats exist for the purpose of fractional digits. If you're checking evenness of a float, then something is wrong with the design, in my opinion.","<div class=""md""><p>Wouldn&#39;t this work?</p>

<p><code>if(x % 2 == 0) { /* it&#39;s even */ }</code></p>

<p><code>else { /* it&#39;s odd */ }</code></p>

<p>I&#39;m not sure if there&#39;s an issue with types here, but my guess is it can solved with a simple typecast in the right place.</p>

<p>In more common practical terms, the above is most likely to only be used on integers anyway, since floats exist for the purpose of fractional digits. If you&#39;re checking evenness of a float, then something is wrong with the design, in my opinion.</p>
</div>",1629240211.0,,False,h9cf5qz,False,t3_p6ahya,t3_p6ahya,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9cf5qz/,1,False,4,False,p6ahya,Cplusplus,t5_2qh6x
951,CedricCicada,"Let's call 2 \* num / abs(num) ""increment"".  Increment will either be 2 or -2.  If num is negative, then increment will be -2, and subtracting it from num will give a result closer to 0.  If num is positive, then likewise in the next iteration, num will be closer to zero.  So, this function recurses num/2 times.

Why is this better than just using num % 2?","<div class=""md""><p>Let&#39;s call 2 * num / abs(num) &quot;increment&quot;.  Increment will either be 2 or -2.  If num is negative, then increment will be -2, and subtracting it from num will give a result closer to 0.  If num is positive, then likewise in the next iteration, num will be closer to zero.  So, this function recurses num/2 times.</p>

<p>Why is this better than just using num % 2?</p>
</div>",1629230147.0,,False,h9brzd5,False,t3_p6ahya,t3_p6ahya,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9brzd5/,1,False,1,False,p6ahya,Cplusplus,t5_2qh6x
952,unclemat,"Missing [[nodiscard]], args should be const, and instead of the if ladder in isEven you should use the pattern matching feature of C++23, but great work otherwise.","<div class=""md""><p>Missing [[nodiscard]], args should be const, and instead of the if ladder in isEven you should use the pattern matching feature of C++23, but great work otherwise.</p>
</div>",1629285630.0,,False,h9eb95y,False,t3_p6ahya,t3_p6ahya,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9eb95y/,0,False,1,False,p6ahya,Cplusplus,t5_2qh6x
953,pooopsex,"The amount of useless garbage on npm is actually ridiculous. I was working on a TS project today and I decided to look thru node modules for some gems - I found 'isobject' and 'is-obj' right next to each other and nearly killed myself

Went digging through GitHub and found out that a kid had added 'is-obj' to the dependent package and a guy with 4k GitHub followers had added 'isobject' to his package. I can excuse a kid adding a package like that, but a guy with 4k followers who says he's a professional software engineer? Come on, man","<div class=""md""><p>The amount of useless garbage on npm is actually ridiculous. I was working on a TS project today and I decided to look thru node modules for some gems - I found &#39;isobject&#39; and &#39;is-obj&#39; right next to each other and nearly killed myself</p>

<p>Went digging through GitHub and found out that a kid had added &#39;is-obj&#39; to the dependent package and a guy with 4k GitHub followers had added &#39;isobject&#39; to his package. I can excuse a kid adding a package like that, but a guy with 4k followers who says he&#39;s a professional software engineer? Come on, man</p>
</div>",1629869071.0,,False,ha9bmoa,False,t3_p6ahya,t3_p6ahya,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/ha9bmoa/,0,False,1,False,p6ahya,Cplusplus,t5_2qh6x
954,ninefourteen,"> How tongue-in-cheek is this meant to be?

Do you have to ask?","<div class=""md""><blockquote>
<p>How tongue-in-cheek is this meant to be?</p>
</blockquote>

<p>Do you have to ask?</p>
</div>",1629244215.0,,False,h9cnaax,False,t3_p6ahya,t1_h9bs5fy,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9cnaax/,2,False,6,False,p6ahya,Cplusplus,t5_2qh6x
955,FriedRiceAndMath,"To optimize memory usage, host the lookup table in a file on a server, and have the isEven / isOdd functions connect to the server & retrieve only the needed portions of the file.

Of course, for redundancy, there should be 2 servers. You can alternate which server handles successive requests to balance the load:

Server A: only even-numbered requests.   

Server B: only odd-numbered requests","<div class=""md""><p>To optimize memory usage, host the lookup table in a file on a server, and have the isEven / isOdd functions connect to the server &amp; retrieve only the needed portions of the file.</p>

<p>Of course, for redundancy, there should be 2 servers. You can alternate which server handles successive requests to balance the load:</p>

<p>Server A: only even-numbered requests.   </p>

<p>Server B: only odd-numbered requests</p>
</div>",1630216190.0,,False,haru3fk,False,t3_p6ahya,t1_h9fk1r9,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/haru3fk/,0,False,2,False,p6ahya,Cplusplus,t5_2qh6x
956,,This post is a joke dude lol OP is not actually seekin advice. Although the simplest/fastest implementation is return x % 2; for isOdd & return !(x % 2); for isEven. But both are so trivial that they can just be inlined (OP knows this 🙂).,"<div class=""md""><p>This post is a joke dude lol OP is not actually seekin advice. Although the simplest/fastest implementation is return x % 2; for isOdd &amp; return !(x % 2); for isEven. But both are so trivial that they can just be inlined (OP knows this 🙂).</p>
</div>",1629260768.0,,False,h9di4ou,False,t3_p6ahya,t1_h9cf5qz,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9di4ou/,1,False,6,False,p6ahya,Cplusplus,t5_2qh6x
957,TopDivide,"It's not, this was meant as a meme, to ridicule the is-odd, is-even javascript packages. This is really bad code... For constexpr parameters it's okay, but without constexpr it's just terrible. You are welcome to make an even less efficient one though","<div class=""md""><p>It&#39;s not, this was meant as a meme, to ridicule the is-odd, is-even javascript packages. This is really bad code... For constexpr parameters it&#39;s okay, but without constexpr it&#39;s just terrible. You are welcome to make an even less efficient one though</p>
</div>",1629230492.0,,False,h9bsu6r,True,t3_p6ahya,t1_h9brzd5,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9bsu6r/,3,False,13,False,p6ahya,Cplusplus,t5_2qh6x
958,khedoros,"After seeing some questionable things written in all seriousness, I fall back on Poe's Law. ;-)","<div class=""md""><p>After seeing some questionable things written in all seriousness, I fall back on Poe&#39;s Law. ;-)</p>
</div>",1629244728.0,,False,h9coap2,False,t3_p6ahya,t1_h9cnaax,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9coap2/,1,False,6,False,p6ahya,Cplusplus,t5_2qh6x
959,Nicksaurus,I often come across old code in our repo at work that's actually written like this. Some people seem to just naturally produce code that's 10 times as complicated as it needs to be,"<div class=""md""><p>I often come across old code in our repo at work that&#39;s actually written like this. Some people seem to just naturally produce code that&#39;s 10 times as complicated as it needs to be</p>
</div>",1629303532.0,,False,h9f9nh0,False,t3_p6ahya,t1_h9cnaax,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9f9nh0/,0,False,2,False,p6ahya,Cplusplus,t5_2qh6x
960,rwp80,Fair enough. Just the way the post was written it didn't indicate satire.,"<div class=""md""><p>Fair enough. Just the way the post was written it didn&#39;t indicate satire.</p>
</div>",1629288778.0,,False,h9efsho,False,t3_p6ahya,t1_h9di4ou,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9efsho/,0,False,1,False,p6ahya,Cplusplus,t5_2qh6x
961,CedricCicada,"Ah.  I'm an old-fashioned C++ programmer.  I haven't kept up with the language and I don't   use any fancy constructs.  I just figured you know more than I do about how to write super-efficient, super-standards-compliant code.  Of course, you probably do anyway.","<div class=""md""><p>Ah.  I&#39;m an old-fashioned C++ programmer.  I haven&#39;t kept up with the language and I don&#39;t   use any fancy constructs.  I just figured you know more than I do about how to write super-efficient, super-standards-compliant code.  Of course, you probably do anyway.</p>
</div>",1629230666.0,,False,h9bt9gg,False,t3_p6ahya,t1_h9bsu6r,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9bt9gg/,0,False,7,False,p6ahya,Cplusplus,t5_2qh6x
962,ialex32_2,"Those packages are actually made by some people who are trying to game the download system, to try to get ridiculous metrics for the packages they made by getting these useless packages incorporated in larger packages, at least according to a former NPM dev... Yeah...

So they know just how ridiculous those packages are... it just serves an end...","<div class=""md""><p>Those packages are actually made by some people who are trying to game the download system, to try to get ridiculous metrics for the packages they made by getting these useless packages incorporated in larger packages, at least according to a former NPM dev... Yeah...</p>

<p>So they know just how ridiculous those packages are... it just serves an end...</p>
</div>",1629235631.0,,False,h9c56k0,False,t3_p6ahya,t1_h9bsu6r,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9c56k0/,0,False,1,False,p6ahya,Cplusplus,t5_2qh6x
963,foureyesequals0,How does constexpr change it?,"<div class=""md""><p>How does constexpr change it?</p>
</div>",1629263481.0,,False,h9dm02m,False,t3_p6ahya,t1_h9bsu6r,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9dm02m/,0,False,1,False,p6ahya,Cplusplus,t5_2qh6x
964,IamImposter,Who's Poe?,"<div class=""md""><p>Who&#39;s Poe?</p>
</div>",1629275740.0,,False,h9e03wz,False,t3_p6ahya,t1_h9coap2,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9e03wz/,2,False,1,False,p6ahya,Cplusplus,t5_2qh6x
965,khedoros,"[Poe's](https://en.wikipedia.org/wiki/Poe%27s_law) a friend of [Murphy](https://en.wikipedia.org/wiki/Murphy%27s_law) and [Hanlon](https://en.wikipedia.org/wiki/Hanlon%27s_razor). Poe's Law says that without a clear statement of intent, it's difficult or impossible to create a parody of an extreme view that won't be mistaken by at least part of the audience as a sincere expression of that view. I was twisting it a little, closer to ""It's hard to tell if someone's joking online without asking them"".","<div class=""md""><p><a href=""https://en.wikipedia.org/wiki/Poe%27s_law"">Poe&#39;s</a> a friend of <a href=""https://en.wikipedia.org/wiki/Murphy%27s_law"">Murphy</a> and <a href=""https://en.wikipedia.org/wiki/Hanlon%27s_razor"">Hanlon</a>. Poe&#39;s Law says that without a clear statement of intent, it&#39;s difficult or impossible to create a parody of an extreme view that won&#39;t be mistaken by at least part of the audience as a sincere expression of that view. I was twisting it a little, closer to &quot;It&#39;s hard to tell if someone&#39;s joking online without asking them&quot;.</p>
</div>",1629294692.0,,False,h9eqfwi,False,t3_p6ahya,t1_h9e03wz,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9eqfwi/,0,False,2,False,p6ahya,Cplusplus,t5_2qh6x
966,wikipedia_answer_bot,"**Edgar Allan Poe (; born Edgar Poe; January 19, 1809 – October 7, 1849) was an American writer, poet, editor, and literary critic. Poe is best known for his poetry and short stories, particularly his tales of mystery and the macabre.**

More details here: <https://en.wikipedia.org/wiki/Edgar_Allan_Poe> 



*This comment was left automatically (by a bot). If I don't get this right, don't get mad at me, I'm still learning!*

[^(opt out)](https://www.reddit.com/r/wikipedia_answer_bot/comments/ozztfy/post_for_opting_out/) ^(|) [^(report/suggest)](https://www.reddit.com/r/wikipedia_answer_bot)","<div class=""md""><p><strong>Edgar Allan Poe (; born Edgar Poe; January 19, 1809 – October 7, 1849) was an American writer, poet, editor, and literary critic. Poe is best known for his poetry and short stories, particularly his tales of mystery and the macabre.</strong></p>

<p>More details here: <a href=""https://en.wikipedia.org/wiki/Edgar_Allan_Poe"">https://en.wikipedia.org/wiki/Edgar_Allan_Poe</a> </p>

<p><em>This comment was left automatically (by a bot). If I don&#39;t get this right, don&#39;t get mad at me, I&#39;m still learning!</em></p>

<p><a href=""https://www.reddit.com/r/wikipedia_answer_bot/comments/ozztfy/post_for_opting_out/""><sup>opt out</sup></a> <sup>|</sup> <a href=""https://www.reddit.com/r/wikipedia_answer_bot""><sup>report/suggest</sup></a></p>
</div>",1629275755.0,,False,h9e04im,False,t3_p6ahya,t1_h9e03wz,/r/Cplusplus/comments/p6ahya/i_created_isevenisodd_functions_for_you_so_you/h9e04im/,0,False,-2,False,p6ahya,Cplusplus,t5_2qh6x
967,Behelitoh,"In your journey you will understand, there is always someone better than you no matter what level of experience you have. So never see this as a disappointment, but rather as a motivation that every programmer in every experience level is always a ""student"" !","<div class=""md""><p>In your journey you will understand, there is always someone better than you no matter what level of experience you have. So never see this as a disappointment, but rather as a motivation that every programmer in every experience level is always a &quot;student&quot; !</p>
</div>",1626294278.0,,1626299837.0,h5711ja,False,t3_ok6xt7,t3_ok6xt7,/r/Cplusplus/comments/ok6xt7/appreciation_from_a_selflearning_programmer/h5711ja/,1,False,8,False,ok6xt7,Cplusplus,t5_2qh6x
968,JabawaJackson,"I won't pretend that I actually understand, I just wanted to add my personal experience. Online courses and courses in school are basically the same, except you get a choice to physically go in for school (plus the commitment). Both are great for their own reasons, and I don't think either is better than the other. Just wanted to mention that because it seemed like you were discrediting yourself a bit for it","<div class=""md""><p>I won&#39;t pretend that I actually understand, I just wanted to add my personal experience. Online courses and courses in school are basically the same, except you get a choice to physically go in for school (plus the commitment). Both are great for their own reasons, and I don&#39;t think either is better than the other. Just wanted to mention that because it seemed like you were discrediting yourself a bit for it</p>
</div>",1626301670.0,,False,h57h0y4,False,t3_ok6xt7,t3_ok6xt7,/r/Cplusplus/comments/ok6xt7/appreciation_from_a_selflearning_programmer/h57h0y4/,1,False,6,False,ok6xt7,Cplusplus,t5_2qh6x
969,,You should look up Bisqwit on YouTube. 🧐,"<div class=""md""><p>You should look up Bisqwit on YouTube. 🧐</p>
</div>",1626292099.0,,False,h56w1lj,False,t3_ok6xt7,t3_ok6xt7,/r/Cplusplus/comments/ok6xt7/appreciation_from_a_selflearning_programmer/h56w1lj/,1,False,5,False,ok6xt7,Cplusplus,t5_2qh6x
970,mce2631,Thanks for these words of wisdom. I'm definitely motivated.,"<div class=""md""><p>Thanks for these words of wisdom. I&#39;m definitely motivated.</p>
</div>",1626296803.0,,False,h576p2c,True,t3_ok6xt7,t1_h5711ja,/r/Cplusplus/comments/ok6xt7/appreciation_from_a_selflearning_programmer/h576p2c/,0,False,2,False,ok6xt7,Cplusplus,t5_2qh6x
971,mce2631,"Thanks for that. You read between the lines because I was discrediting myself. Prior to jumping into an online course, I tried to do a certificate and boy it was hard. Im the type of person who don’t want to add more stress to anyone else’s work by asking question all the time. What an online course enables me to do, is to listen to a segment over and over again until I get it right.","<div class=""md""><p>Thanks for that. You read between the lines because I was discrediting myself. Prior to jumping into an online course, I tried to do a certificate and boy it was hard. Im the type of person who don’t want to add more stress to anyone else’s work by asking question all the time. What an online course enables me to do, is to listen to a segment over and over again until I get it right.</p>
</div>",1626312915.0,,False,h582v7v,True,t3_ok6xt7,t1_h57h0y4,/r/Cplusplus/comments/ok6xt7/appreciation_from_a_selflearning_programmer/h582v7v/,0,False,5,False,ok6xt7,Cplusplus,t5_2qh6x
972,mce2631,I'll keep that in mind. Thanks!,"<div class=""md""><p>I&#39;ll keep that in mind. Thanks!</p>
</div>",1626296609.0,,False,h5769p6,True,t3_ok6xt7,t1_h56w1lj,/r/Cplusplus/comments/ok6xt7/appreciation_from_a_selflearning_programmer/h5769p6/,0,False,1,False,ok6xt7,Cplusplus,t5_2qh6x
973,ialex32_2,"All votes for:

>\++  
>  
>\--

Obviously as an image, so they'd be the same size.","<div class=""md""><p>All votes for:</p>

<blockquote>
<p>++  </p>

<p>--</p>
</blockquote>

<p>Obviously as an image, so they&#39;d be the same size.</p>
</div>",1623906498.0,,False,h2210d6,False,t3_o1npxa,t3_o1npxa,/r/Cplusplus/comments/o1npxa/rcplusplus_needs_upvote_and_downvote_icons/h2210d6/,0,False,43,False,o1npxa,Cplusplus,t5_2qh6x
974,Avereniect,"Well this is just obvious.  
https://imgur.com/a/pGg9bWC","<div class=""md""><p>Well this is just obvious.<br/>
<a href=""https://imgur.com/a/pGg9bWC"">https://imgur.com/a/pGg9bWC</a></p>
</div>",1623902290.0,,1623902743.0,h21uede,False,t3_o1npxa,t3_o1npxa,/r/Cplusplus/comments/o1npxa/rcplusplus_needs_upvote_and_downvote_icons/h21uede/,1,False,21,False,o1npxa,Cplusplus,t5_2qh6x
975,Possibility_Antique,"Not sure what the upvote analog would be, but I usually downvote my code using //","<div class=""md""><p>Not sure what the upvote analog would be, but I usually downvote my code using //</p>
</div>",1623962966.0,,False,h24upyj,False,t3_o1npxa,t3_o1npxa,/r/Cplusplus/comments/o1npxa/rcplusplus_needs_upvote_and_downvote_icons/h24upyj/,0,False,1,False,o1npxa,Cplusplus,t5_2qh6x
976,GhettoDuk,"\++ to upvote

\# to downvote

Edit: Fixed downvote on Desktop","<div class=""md""><p>++ to upvote</p>

<p># to downvote</p>

<p>Edit: Fixed downvote on Desktop</p>
</div>",1623904425.0,,1623933966.0,h21xsg7,False,t3_o1npxa,t3_o1npxa,/r/Cplusplus/comments/o1npxa/rcplusplus_needs_upvote_and_downvote_icons/h21xsg7/,2,False,-2,False,o1npxa,Cplusplus,t5_2qh6x
977,HappyFruitTree,What's wrong with the default?,"<div class=""md""><p>What&#39;s wrong with the default?</p>
</div>",1623925241.0,,False,h22nhcz,False,t3_o1npxa,t3_o1npxa,/r/Cplusplus/comments/o1npxa/rcplusplus_needs_upvote_and_downvote_icons/h22nhcz/,0,False,-1,False,o1npxa,Cplusplus,t5_2qh6x
978,,Hello I can help,"<div class=""md""><p>Hello I can help</p>
</div>",1624010964.0,,False,h26ze8z,False,t3_o1npxa,t3_o1npxa,/r/Cplusplus/comments/o1npxa/rcplusplus_needs_upvote_and_downvote_icons/h26ze8z/,0,False,0,False,o1npxa,Cplusplus,t5_2qh6x
979,,We decided to use your images! It may take a while because I am trying to find a way to download them on PC.,"<div class=""md""><p>We decided to use your images! It may take a while because I am trying to find a way to download them on PC.</p>
</div>",1624054762.0,,False,h29envr,False,t3_o1npxa,t1_h21uede,/r/Cplusplus/comments/o1npxa/rcplusplus_needs_upvote_and_downvote_icons/h29envr/,1,False,1,False,o1npxa,Cplusplus,t5_2qh6x
980,,If you can find a ++ image and a # image we will take it!,"<div class=""md""><p>If you can find a ++ image and a # image we will take it!</p>
</div>",1623904638.0,,False,h21y4da,False,t3_o1npxa,t1_h21xsg7,/r/Cplusplus/comments/o1npxa/rcplusplus_needs_upvote_and_downvote_icons/h21y4da/,0,False,0,False,o1npxa,Cplusplus,t5_2qh6x
981,Sorry-Chair,to downvote,"<div class=""md""><p>to downvote</p>
</div>",1623916891.0,,False,h22duk7,False,t3_o1npxa,t1_h21xsg7,/r/Cplusplus/comments/o1npxa/rcplusplus_needs_upvote_and_downvote_icons/h22duk7/,0,False,-3,False,o1npxa,Cplusplus,t5_2qh6x
982,Avereniect,https://drive.google.com/file/d/1jPBza50x5EiZxdGOO0mytkWlwz5LTmP2/view?usp=sharing,"<div class=""md""><p><a href=""https://drive.google.com/file/d/1jPBza50x5EiZxdGOO0mytkWlwz5LTmP2/view?usp=sharing"">https://drive.google.com/file/d/1jPBza50x5EiZxdGOO0mytkWlwz5LTmP2/view?usp=sharing</a></p>
</div>",1624055154.0,,False,h29ferg,False,t3_o1npxa,t1_h29envr,/r/Cplusplus/comments/o1npxa/rcplusplus_needs_upvote_and_downvote_icons/h29ferg/,1,False,2,False,o1npxa,Cplusplus,t5_2qh6x
983,,Thanks!,"<div class=""md""><p>Thanks!</p>
</div>",1624055190.0,,False,h29fh5x,False,t3_o1npxa,t1_h29ferg,/r/Cplusplus/comments/o1npxa/rcplusplus_needs_upvote_and_downvote_icons/h29fh5x/,0,False,1,False,o1npxa,Cplusplus,t5_2qh6x
984,,"As I understand it, it is still extremely specific algorithms that work on them, it isnt like you can take a traditional CPU, replace it with a quantum processor and do anything. It's like a GPU but much much more powerful and limited.","<div class=""md""><p>As I understand it, it is still extremely specific algorithms that work on them, it isnt like you can take a traditional CPU, replace it with a quantum processor and do anything. It&#39;s like a GPU but much much more powerful and limited.</p>
</div>",1574364941.0,,False,f890rhy,False,t3_dzocbu,t3_dzocbu,/r/Cplusplus/comments/dzocbu/quantum_computers_are_becoming_enough_of_a_thing/f890rhy/,1,False,16,False,dzocbu,Cplusplus,t5_2qh6x
985,FallicoMusic,"As a current computer science student, what path does one take to get into Quantum computers? Is there a masters degree for that?","<div class=""md""><p>As a current computer science student, what path does one take to get into Quantum computers? Is there a masters degree for that?</p>
</div>",1574376618.0,,False,f89oe0w,False,t3_dzocbu,t3_dzocbu,/r/Cplusplus/comments/dzocbu/quantum_computers_are_becoming_enough_of_a_thing/f89oe0w/,2,False,4,False,dzocbu,Cplusplus,t5_2qh6x
986,SiliconTree,"It would be worse than a traditional computer for traditional algorithms.  The comparison with GPGPUs is accurate: there are problems which would greatly benefit from quantum computers, and many of them have commercial applications like machine learning does.  The programming constraints in quantum computers is also very different than in a classical computer and will require specialists to develop systems to utilize and integrate them into traditional systems.","<div class=""md""><p>It would be worse than a traditional computer for traditional algorithms.  The comparison with GPGPUs is accurate: there are problems which would greatly benefit from quantum computers, and many of them have commercial applications like machine learning does.  The programming constraints in quantum computers is also very different than in a classical computer and will require specialists to develop systems to utilize and integrate them into traditional systems.</p>
</div>",1574389869.0,,False,f8a7nbe,False,t3_dzocbu,t1_f890rhy,/r/Cplusplus/comments/dzocbu/quantum_computers_are_becoming_enough_of_a_thing/f8a7nbe/,0,False,3,False,dzocbu,Cplusplus,t5_2qh6x
987,SiliconTree,"There are books on the subject, simulators, and even a few programming languages being developed for them already, like Q#.
https://youtu.be/F_Riqjdh2oM

Quantum computers is still too experimental for there to be professional programs to learn about them, because very few people can even use them for real experiments.  One PhD candidate I knew who was into Quantum computing developed algorithms purely in theory because the memory requirements to simulate a quantum computer to test them was prohibitively large.","<div class=""md""><p>There are books on the subject, simulators, and even a few programming languages being developed for them already, like Q#.
<a href=""https://youtu.be/F_Riqjdh2oM"">https://youtu.be/F_Riqjdh2oM</a></p>

<p>Quantum computers is still too experimental for there to be professional programs to learn about them, because very few people can even use them for real experiments.  One PhD candidate I knew who was into Quantum computing developed algorithms purely in theory because the memory requirements to simulate a quantum computer to test them was prohibitively large.</p>
</div>",1574390273.0,,False,f8a8768,False,t3_dzocbu,t1_f89oe0w,/r/Cplusplus/comments/dzocbu/quantum_computers_are_becoming_enough_of_a_thing/f8a8768/,1,False,3,False,dzocbu,Cplusplus,t5_2qh6x
988,ZortacDev,"Depends on your University. At my Uni (ETH Zürich) there is a Quantum Engineering masters degree that also touches on quantum computing. If there isn’t anything specific offered, probably taking physics and quantum physics is a good way to start as quantum computers operate in a really weird way and some understanding of wave functions and how quantum gates act on them is definitely helpful before going into more specialized information.","<div class=""md""><p>Depends on your University. At my Uni (ETH Zürich) there is a Quantum Engineering masters degree that also touches on quantum computing. If there isn’t anything specific offered, probably taking physics and quantum physics is a good way to start as quantum computers operate in a really weird way and some understanding of wave functions and how quantum gates act on them is definitely helpful before going into more specialized information.</p>
</div>",1574413464.0,,False,f8av2xh,False,t3_dzocbu,t1_f89oe0w,/r/Cplusplus/comments/dzocbu/quantum_computers_are_becoming_enough_of_a_thing/f8av2xh/,0,False,1,False,dzocbu,Cplusplus,t5_2qh6x
989,MCRusher,There's also [avalon](https://avalon-lang.readthedocs.io/en/latest/index.html),"<div class=""md""><p>There&#39;s also <a href=""https://avalon-lang.readthedocs.io/en/latest/index.html"">avalon</a></p>
</div>",1574433746.0,,False,f8bcuqi,False,t3_dzocbu,t1_f8a8768,/r/Cplusplus/comments/dzocbu/quantum_computers_are_becoming_enough_of_a_thing/f8bcuqi/,0,False,1,False,dzocbu,Cplusplus,t5_2qh6x
990,GoodLifeWorkHard,Yeah me too.  Its such a empowering feeling you get when you understand what the hell you're talking about.,"<div class=""md""><p>Yeah me too.  Its such a empowering feeling you get when you understand what the hell you&#39;re talking about.</p>
</div>",1567381697.0,,False,eyry7k3,False,t3_cyhby5,t3_cyhby5,/r/Cplusplus/comments/cyhby5/finally_starting_to_enjoy_some_of_this_stuff/eyry7k3/,1,False,5,False,cyhby5,Cplusplus,t5_2qh6x
991,Manu_spawn,"I envy u (in a fun way) i just don't understand a single thing about programming (and i ""study"" this as my career)","<div class=""md""><p>I envy u (in a fun way) i just don&#39;t understand a single thing about programming (and i &quot;study&quot; this as my career)</p>
</div>",1567448172.0,,False,eyty08f,False,t3_cyhby5,t3_cyhby5,/r/Cplusplus/comments/cyhby5/finally_starting_to_enjoy_some_of_this_stuff/eyty08f/,0,False,1,False,cyhby5,Cplusplus,t5_2qh6x
992,HumanTR,i still cant understand,"<div class=""md""><p>i still cant understand</p>
</div>",1567413191.0,,False,eysvm3i,False,t3_cyhby5,t1_eyry7k3,/r/Cplusplus/comments/cyhby5/finally_starting_to_enjoy_some_of_this_stuff/eysvm3i/,0,False,1,False,cyhby5,Cplusplus,t5_2qh6x
993,mean_king17,A true heir of c++ we have here,"<div class=""md""><p>A true heir of c++ we have here</p>
</div>",1673742874.0,,False,j4du94i,False,t3_109n71i,t3_109n71i,/r/Cplusplus/comments/109n71i/sorta_wholesome_coding_related_post_so_i_found/j4du94i/,1,False,2,False,109n71i,Cplusplus,t5_2qh6x
994,BrokenTekReddit,So he would've known B-Yarn Shoe-Strap?,"<div class=""md""><p>So he would&#39;ve known B-Yarn Shoe-Strap?</p>
</div>",1673550776.0,,False,j42lcok,False,t3_109n71i,t3_109n71i,/r/Cplusplus/comments/109n71i/sorta_wholesome_coding_related_post_so_i_found/j42lcok/,0,False,1,False,109n71i,Cplusplus,t5_2qh6x
995,Lewdghostgirl,A title I don’t think I can live up to. It’s insane how smart he is though.,"<div class=""md""><p>A title I don’t think I can live up to. It’s insane how smart he is though.</p>
</div>",1673813104.0,,False,j4hm8mr,True,t3_109n71i,t1_j4du94i,/r/Cplusplus/comments/109n71i/sorta_wholesome_coding_related_post_so_i_found/j4hm8mr/,1,False,2,False,109n71i,Cplusplus,t5_2qh6x
996,mean_king17,"Well, it is in you DNA should ever need it, that's a fact.","<div class=""md""><p>Well, it is in you DNA should ever need it, that&#39;s a fact.</p>
</div>",1673825840.0,,False,j4ijjk9,False,t3_109n71i,t1_j4hm8mr,/r/Cplusplus/comments/109n71i/sorta_wholesome_coding_related_post_so_i_found/j4ijjk9/,0,False,1,False,109n71i,Cplusplus,t5_2qh6x
997,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1668425009.0,,1679842795.0,iwbczwy,False,t3_yum03i,t3_yum03i,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwbczwy/,1,False,7,False,yum03i,Cplusplus,t5_2qh6x
998,khedoros,"I've experienced that, but I don't think the language matters much, and it doesn't even have to be programming specifically.","<div class=""md""><p>I&#39;ve experienced that, but I don&#39;t think the language matters much, and it doesn&#39;t even have to be programming specifically.</p>
</div>",1668396883.0,,False,iwabke2,False,t3_yum03i,t3_yum03i,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwabke2/,1,False,8,False,yum03i,Cplusplus,t5_2qh6x
999,TheFunnyShah,Would anyone with the knowledge and some free time please break down line-by-line what OP mentioned?,"<div class=""md""><p>Would anyone with the knowledge and some free time please break down line-by-line what OP mentioned?</p>
</div>",1668398254.0,,False,iwae7du,False,t3_yum03i,t3_yum03i,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwae7du/,2,False,7,False,yum03i,Cplusplus,t5_2qh6x
1000,TheZipCreator,I've never experienced anything this extreme but occasionally I get lost in thought about programming shit I was doing earlier and forget what I was doing,"<div class=""md""><p>I&#39;ve never experienced anything this extreme but occasionally I get lost in thought about programming shit I was doing earlier and forget what I was doing</p>
</div>",1668459995.0,,False,iwdji4i,False,t3_yum03i,t3_yum03i,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwdji4i/,0,False,2,False,yum03i,Cplusplus,t5_2qh6x
1001,Nouseforaname1066,This 100% happens to me.  I don’t think it’s specific to C++ though.  I once drove the wrong way down a 1 way street after studying for an exam for several hours.  This was right around the corner from my house.  I remember doing it and thinking “something is off about this.  Why does this feel wrong?” and then a car started coming the other way.  Thankfully I managed to avoid getting in an accident that night.  I was not sleep deprived or anything and it wasn’t very late.,"<div class=""md""><p>This 100% happens to me.  I don’t think it’s specific to C++ though.  I once drove the wrong way down a 1 way street after studying for an exam for several hours.  This was right around the corner from my house.  I remember doing it and thinking “something is off about this.  Why does this feel wrong?” and then a car started coming the other way.  Thankfully I managed to avoid getting in an accident that night.  I was not sleep deprived or anything and it wasn’t very late.</p>
</div>",1668395731.0,,False,iwa9auj,False,t3_yum03i,t3_yum03i,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwa9auj/,0,False,2,False,yum03i,Cplusplus,t5_2qh6x
1002,ILikeToPlayWithDogs,"Yes, I was diagnosed with Asperger syndrome at a very young age. And, yes, this is undoubtedly a contributing factor, but the largest contributing factor is the unique qualities general to any human. The biggest different between me and you is that I don't have the instinctual automatic social programming built-in to my brain that you do; beyond that, I'm not really all that different from everyone else.

I shop every-other week and am typically (but not this week) able to proceed through the store at about the same rate as everyone else.","<div class=""md""><p>Yes, I was diagnosed with Asperger syndrome at a very young age. And, yes, this is undoubtedly a contributing factor, but the largest contributing factor is the unique qualities general to any human. The biggest different between me and you is that I don&#39;t have the instinctual automatic social programming built-in to my brain that you do; beyond that, I&#39;m not really all that different from everyone else.</p>

<p>I shop every-other week and am typically (but not this week) able to proceed through the store at about the same rate as everyone else.</p>
</div>",1668440983.0,,False,iwc7528,True,t3_yum03i,t1_iwbczwy,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwc7528/,1,False,5,False,yum03i,Cplusplus,t5_2qh6x
1003,ISvengali,"Precisely /u/ILikeToPlayWithDogs

So, Ive noticed that if I spend 2 days really embedded in a style of thought, thoughts just come faster and faster. Its pretty dramatic too, from 'hey Im an idiot' to 'omg Im the god of all I survey'

I was reading about semantic priming for something else, and this popped out at me - semantic priming lasts about 2 days.  

Im pretty sure this is the mechanism that explains this.

What this says to me is to organize things around this.  Heavy algorithmic work for 2 days, then a day of light structural organization work, with the second day really getting a ton done.","<div class=""md""><p>Precisely <a href=""/u/ILikeToPlayWithDogs"">/u/ILikeToPlayWithDogs</a></p>

<p>So, Ive noticed that if I spend 2 days really embedded in a style of thought, thoughts just come faster and faster. Its pretty dramatic too, from &#39;hey Im an idiot&#39; to &#39;omg Im the god of all I survey&#39;</p>

<p>I was reading about semantic priming for something else, and this popped out at me - semantic priming lasts about 2 days.  </p>

<p>Im pretty sure this is the mechanism that explains this.</p>

<p>What this says to me is to organize things around this.  Heavy algorithmic work for 2 days, then a day of light structural organization work, with the second day really getting a ton done.</p>
</div>",1668400030.0,,False,iwahh9a,False,t3_yum03i,t1_iwabke2,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwahh9a/,0,False,2,False,yum03i,Cplusplus,t5_2qh6x
1004,DownVoted-YOU,"It's a joke playing on the fact that many people over-complicate C++ code with excessive use of data structures. They're trying to sound far more complex than their problem actually is, in hopes of feeling or appearing 'smart'. Most programmers are not like this.","<div class=""md""><p>It&#39;s a joke playing on the fact that many people over-complicate C++ code with excessive use of data structures. They&#39;re trying to sound far more complex than their problem actually is, in hopes of feeling or appearing &#39;smart&#39;. Most programmers are not like this.</p>
</div>",1668406572.0,,False,iwari3a,False,t3_yum03i,t1_iwae7du,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwari3a/,1,False,12,False,yum03i,Cplusplus,t5_2qh6x
1005,ILikeToPlayWithDogs,"Line-by-line breakdown:

* ""xorshift-based cache-line randomization algorithm"". Basically, each cache slot has only a certain associativity and actively more objects in your C++ program with the same address's multiple of 64 than the associativity of the cache results in competition for that cache line. So, by randomizing the multiple of 64 that each item is allocated lessens the severity of over-contended cache lines (as, with randomization, there is less likely to be a huge traffic jam of lots of different memory competing at the same time.)
* ""index-compressed pointer linked list"" means that I have an array, say `uint32_t pointerMemoryArray[240]`, which functions as its own neat self-contained garbage collection system: `pointerMemoryArray[pointerMemoryArray[0]]` yields the index of the last freed slot (and the value at that freed slot is the former free index like a compressed linked list), which enables us to free memory as simply as `pointerMemoryArray[n]=pointerMemoryArray[0], pointerMemoryArray[0]=n`. (Granted, this is a bit oversimplified as I randomize the indexes with a custom-period xorshift-like function.)
* ""thread-local memory management"" means that all the memory is handled on a per-thread basis using the GCC __thread extension (never use thread_local unless you really need it as it's god-aweful slow by design), which enables the code accessing these global variables to be thread-safe without atomics and without mutexes.
* ""copy-on-write doubly-linked queue--featuring a branchless (aside from the necessary evil of one branch for bounds checking) operator[]--"" means that I created a highly specialized std:deque-like class that offers built-in near-zero-overhead reference counting for fast shallow cloning as I am going to be cloning my deques very frequently and discarding these clones after a very short period of time, most-often without even modifying the clone in the interim (but I can't predict when a clone might be modified in advance, so I really have to clone it and can't reuse the original object.)
* ""for the aliasing-compressed reverse-RPN stack"" means that I compress each RPN entry into a union-like structure with pointer bitwise compression and the works. (Note that the best way to do pointer bitwise compression is storing the enum in the topmost 2 to 3 bits and shifting the pointer downwards. This translates to the most efficient assembly as it allows the pointer to be used normally as a aligned array offset on many architectures without consuming an extra register.)
* ""of the mpz_t calculator"" basically means I'm making a big-integer calculator.
* ""organize the exact L1, L2, and L3 cache associativity saturation"" -- see the Extended Info section below.
* ""of every superscalar memory access"". Basically, processors execute instructions highly out of order depending upon the circumstances of when data becomes available for calculations, and I leverage this to my advantage with all sort of tricks ranging from grouping related items together in the same cache line so they become available at the same time to the rare prefetch as an advanced notice I will reading/writing data far in the future to speculative computation of various states while long-latency instructions like division or chained multiplication are in progress.

&#x200B;

Extended Info: Basically, what I'm describing is that I focus minimally on big-O complexity of my algorithms and I just arrange everything as I write the code to make the best use of the CPU cache. In today's processors, the main bottleneck of most software is memory access, so optimizing your program's structure for cache access patterns often has a bigger impact on performance than minimizing big-O complexity (granted, this is only if you already have a relatively small big-O complexity. A huge big-O complexity is never going to run fast no matter how much one optimizes the access patterns.)

One example of one of the many ways I've optimized memory usage is a std::vector-like class I wrote that batch-allocates a huge amount of virtual ram and divide and recycle it amongst the 3 instances of the class expected to be in use at various points in the program. Yes, you can reserve memory with std::vector but even this wouldn't fulfill my needs as I needed the ability to keep a cache of supposedly discarded instances past the end of the array to maximize the speed of a semi-random poping/pushing pattern. Note that growing a std::vector is significantly more expensive than one would expect when it has to relocate its data to a new larger memory region because the new memory region is likely to be cold in the cache and will take long times to access each element as each 64-byte slice of the new memory region warms up.

One perfect example is the Sieve of Eratosthenes, which has a complexity of O(n*log(log(n))) on hypothetical machines with infinitely fast memory but in practice on real hardware quickly approaches O(n^2) time as n grows larger and larger than the L3 cache. (This statistic about approaching O(n^2) is my own metric I've observed; everyone else out there seems rather preoccupied with hypothetical big-O complexity and unconcerned with actual run-time on real hardware, so I haven't seen any information about this online.)

**Addendum:** One last question I imagine you might have is about portability of this C++ code given that caches can vary so greatly between architectures and that things like pointer compression are undefined behavior. Well, although both these are true, it's important to stay pragmatic and, in practice, I guarantee no new strange exotic architecture is going to pop up in the future as it wouldn't be able to run much of the existing C/C++ code. And, the existing exotic architectures are dying out or long dead for this very reason. For caches, it's very safe and future proof to optimize your application to the caches of today's x86_64 as  newly built processors are tuned for existing software, which in turn means newly built processors are tuned to run x86-optimized software efficiently. This principle is very applicable to ARM processors, whose caches have slowly converged towards looking more and more similar to that the x86 over time, and this principle will apply to all new processors built in the future. Moreover, even if some crazy new cache is put in the latest processor, you will still get nice performance as your cache optimizations will at least lessen trips to main memory.","<div class=""md""><p>Line-by-line breakdown:</p>

<ul>
<li>&quot;xorshift-based cache-line randomization algorithm&quot;. Basically, each cache slot has only a certain associativity and actively more objects in your C++ program with the same address&#39;s multiple of 64 than the associativity of the cache results in competition for that cache line. So, by randomizing the multiple of 64 that each item is allocated lessens the severity of over-contended cache lines (as, with randomization, there is less likely to be a huge traffic jam of lots of different memory competing at the same time.)</li>
<li>&quot;index-compressed pointer linked list&quot; means that I have an array, say <code>uint32_t pointerMemoryArray[240]</code>, which functions as its own neat self-contained garbage collection system: <code>pointerMemoryArray[pointerMemoryArray[0]]</code> yields the index of the last freed slot (and the value at that freed slot is the former free index like a compressed linked list), which enables us to free memory as simply as <code>pointerMemoryArray[n]=pointerMemoryArray[0], pointerMemoryArray[0]=n</code>. (Granted, this is a bit oversimplified as I randomize the indexes with a custom-period xorshift-like function.)</li>
<li>&quot;thread-local memory management&quot; means that all the memory is handled on a per-thread basis using the GCC __thread extension (never use thread_local unless you really need it as it&#39;s god-aweful slow by design), which enables the code accessing these global variables to be thread-safe without atomics and without mutexes.</li>
<li>&quot;copy-on-write doubly-linked queue--featuring a branchless (aside from the necessary evil of one branch for bounds checking) operator[]--&quot; means that I created a highly specialized std:deque-like class that offers built-in near-zero-overhead reference counting for fast shallow cloning as I am going to be cloning my deques very frequently and discarding these clones after a very short period of time, most-often without even modifying the clone in the interim (but I can&#39;t predict when a clone might be modified in advance, so I really have to clone it and can&#39;t reuse the original object.)</li>
<li>&quot;for the aliasing-compressed reverse-RPN stack&quot; means that I compress each RPN entry into a union-like structure with pointer bitwise compression and the works. (Note that the best way to do pointer bitwise compression is storing the enum in the topmost 2 to 3 bits and shifting the pointer downwards. This translates to the most efficient assembly as it allows the pointer to be used normally as a aligned array offset on many architectures without consuming an extra register.)</li>
<li>&quot;of the mpz_t calculator&quot; basically means I&#39;m making a big-integer calculator.</li>
<li>&quot;organize the exact L1, L2, and L3 cache associativity saturation&quot; -- see the Extended Info section below.</li>
<li>&quot;of every superscalar memory access&quot;. Basically, processors execute instructions highly out of order depending upon the circumstances of when data becomes available for calculations, and I leverage this to my advantage with all sort of tricks ranging from grouping related items together in the same cache line so they become available at the same time to the rare prefetch as an advanced notice I will reading/writing data far in the future to speculative computation of various states while long-latency instructions like division or chained multiplication are in progress.</li>
</ul>

<p>&#x200B;</p>

<p>Extended Info: Basically, what I&#39;m describing is that I focus minimally on big-O complexity of my algorithms and I just arrange everything as I write the code to make the best use of the CPU cache. In today&#39;s processors, the main bottleneck of most software is memory access, so optimizing your program&#39;s structure for cache access patterns often has a bigger impact on performance than minimizing big-O complexity (granted, this is only if you already have a relatively small big-O complexity. A huge big-O complexity is never going to run fast no matter how much one optimizes the access patterns.)</p>

<p>One example of one of the many ways I&#39;ve optimized memory usage is a std::vector-like class I wrote that batch-allocates a huge amount of virtual ram and divide and recycle it amongst the 3 instances of the class expected to be in use at various points in the program. Yes, you can reserve memory with std::vector but even this wouldn&#39;t fulfill my needs as I needed the ability to keep a cache of supposedly discarded instances past the end of the array to maximize the speed of a semi-random poping/pushing pattern. Note that growing a std::vector is significantly more expensive than one would expect when it has to relocate its data to a new larger memory region because the new memory region is likely to be cold in the cache and will take long times to access each element as each 64-byte slice of the new memory region warms up.</p>

<p>One perfect example is the Sieve of Eratosthenes, which has a complexity of O(n*log(log(n))) on hypothetical machines with infinitely fast memory but in practice on real hardware quickly approaches O(n<sup>2)</sup> time as n grows larger and larger than the L3 cache. (This statistic about approaching O(n<sup>2)</sup> is my own metric I&#39;ve observed; everyone else out there seems rather preoccupied with hypothetical big-O complexity and unconcerned with actual run-time on real hardware, so I haven&#39;t seen any information about this online.)</p>

<p><strong>Addendum:</strong> One last question I imagine you might have is about portability of this C++ code given that caches can vary so greatly between architectures and that things like pointer compression are undefined behavior. Well, although both these are true, it&#39;s important to stay pragmatic and, in practice, I guarantee no new strange exotic architecture is going to pop up in the future as it wouldn&#39;t be able to run much of the existing C/C++ code. And, the existing exotic architectures are dying out or long dead for this very reason. For caches, it&#39;s very safe and future proof to optimize your application to the caches of today&#39;s x86_64 as  newly built processors are tuned for existing software, which in turn means newly built processors are tuned to run x86-optimized software efficiently. This principle is very applicable to ARM processors, whose caches have slowly converged towards looking more and more similar to that the x86 over time, and this principle will apply to all new processors built in the future. Moreover, even if some crazy new cache is put in the latest processor, you will still get nice performance as your cache optimizations will at least lessen trips to main memory.</p>
</div>",1668416653.0,,False,iwb3hoh,True,t3_yum03i,t1_iwae7du,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwb3hoh/,3,False,9,False,yum03i,Cplusplus,t5_2qh6x
1006,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1668441420.0,,1679842789.0,iwc87ih,False,t3_yum03i,t1_iwc7528,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwc87ih/,1,False,2,False,yum03i,Cplusplus,t5_2qh6x
1007,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1668413398.0,,False,iwazw0b,False,t3_yum03i,t1_iwari3a,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwazw0b/,1,False,-6,False,yum03i,Cplusplus,t5_2qh6x
1008,WhatInTheBruh,"Damn... 
How many years of experience do you have?

How do i become as skilled as fuck like you in systems programming ? 

Please respond im genuinely interested to become a skilled programmer","<div class=""md""><p>Damn... 
How many years of experience do you have?</p>

<p>How do i become as skilled as fuck like you in systems programming ? </p>

<p>Please respond im genuinely interested to become a skilled programmer</p>
</div>",1668421099.0,,False,iwb8c8o,False,t3_yum03i,t1_iwb3hoh,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwb8c8o/,1,False,5,False,yum03i,Cplusplus,t5_2qh6x
1009,WinstonP18,"I have been coding for a few years but most of what you wrote flew right over my head. Granted, I never had to do systems-programming but still ....

I have 2 questions: (i) Can you share which field do you work in?; and (ii) Is what you wrote common knowledge among experienced C++ developers? 

Another way to rephrase question (ii) above is: Would one need to know/understand what you wrote before he can call himself an 'experienced' C++ dev?","<div class=""md""><p>I have been coding for a few years but most of what you wrote flew right over my head. Granted, I never had to do systems-programming but still ....</p>

<p>I have 2 questions: (i) Can you share which field do you work in?; and (ii) Is what you wrote common knowledge among experienced C++ developers? </p>

<p>Another way to rephrase question (ii) above is: Would one need to know/understand what you wrote before he can call himself an &#39;experienced&#39; C++ dev?</p>
</div>",1668449587.0,,False,iwcsp1t,False,t3_yum03i,t1_iwb3hoh,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwcsp1t/,1,False,3,False,yum03i,Cplusplus,t5_2qh6x
1010,TheFunnyShah,Thank you muchly! Another precious bit of insight into the world of C++ coding!,"<div class=""md""><p>Thank you muchly! Another precious bit of insight into the world of C++ coding!</p>
</div>",1668535732.0,,False,iwhj8gq,False,t3_yum03i,t1_iwb3hoh,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwhj8gq/,0,False,2,False,yum03i,Cplusplus,t5_2qh6x
1011,ILikeToPlayWithDogs,"Great to meet a relatable fellow. 

It's weird because, for me at least, this issue only happens with C++ and not with any of the other programming languages I use. No other programming language sucks me as deep in as C++ consistently does, ha ha.","<div class=""md""><p>Great to meet a relatable fellow. </p>

<p>It&#39;s weird because, for me at least, this issue only happens with C++ and not with any of the other programming languages I use. No other programming language sucks me as deep in as C++ consistently does, ha ha.</p>
</div>",1668442544.0,,False,iwcaylb,True,t3_yum03i,t1_iwc87ih,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwcaylb/,0,False,3,False,yum03i,Cplusplus,t5_2qh6x
1012,DZMBA,"This is an amphetamine thing.

Once you mentioned that, your over verbosity, over description, and mind set makes sense.  Getting locked/hyperfocused into a mindset (ie: focused) is literally what it's supposed to do.   
 You've had not enough sleep and a bit too much Adderall.  There's a tenancy to over explain (and overthink) in that state. 

  * bullet points/lists to break things down is a tell tale  IMO. Your post below this is TLDR & fits the structure","<div class=""md""><p>This is an amphetamine thing.</p>

<p>Once you mentioned that, your over verbosity, over description, and mind set makes sense.  Getting locked/hyperfocused into a mindset (ie: focused) is literally what it&#39;s supposed to do.<br/>
 You&#39;ve had not enough sleep and a bit too much Adderall.  There&#39;s a tenancy to over explain (and overthink) in that state. </p>

<ul>
<li>bullet points/lists to break things down is a tell tale  IMO. Your post below this is TLDR &amp; fits the structure</li>
</ul>
</div>",1668434596.0,,1668435363.0,iwbsono,False,t3_yum03i,t1_iwazw0b,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwbsono/,0,False,3,False,yum03i,Cplusplus,t5_2qh6x
1013,ILikeToPlayWithDogs,"Linux.

Find a Linux distro (or some other FOSS operating system) you like and use it on a daily basis as your daily driver for everything you do. (And install it for real on bare metal; VMs are not conducive to any sort of learning or experience.) That's the #1 ticket to really mastering all fields of computers. (I'm also a sysadmin, devops, full stack, ci/cd guy, and system architect.)

I have about 5 or 6 years of experience depending on how one defines when I really got into things. Before that, I futzed around in Windows land for 7 years and didn't really learn a whole lot about computers. (For an approximate reference, I learned three times as much in my first 3 months of using a Linux distro exclusively as I did over those 7 years using Windows.)","<div class=""md""><p>Linux.</p>

<p>Find a Linux distro (or some other FOSS operating system) you like and use it on a daily basis as your daily driver for everything you do. (And install it for real on bare metal; VMs are not conducive to any sort of learning or experience.) That&#39;s the #1 ticket to really mastering all fields of computers. (I&#39;m also a sysadmin, devops, full stack, ci/cd guy, and system architect.)</p>

<p>I have about 5 or 6 years of experience depending on how one defines when I really got into things. Before that, I futzed around in Windows land for 7 years and didn&#39;t really learn a whole lot about computers. (For an approximate reference, I learned three times as much in my first 3 months of using a Linux distro exclusively as I did over those 7 years using Windows.)</p>
</div>",1668441348.0,,False,iwc812i,True,t3_yum03i,t1_iwb8c8o,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwc812i/,1,False,4,False,yum03i,Cplusplus,t5_2qh6x
1014,ILikeToPlayWithDogs,"Three things (all subjective, granted):

* I don't work in any specific field. I'm all over the place and good at many many things ranging from systems programing to full stack, syadmin, devops, ci/cd guy, and system architecture. I'm also majoring in EE so I'll have that under my belt too.
* I don't think it's common knowledge. Optimizing for cache efficiency is the most tricky and difficult kind of optimization because it requires a radically different approach to most-every facet of programming than what one is used to. It took me many many years of finely honing this skill to be able to write the post above.
* In my own personal opinion (though this is a very controversial viewpoint, so take with a grain of salt?), I believe that the C++ language is a paragon of excellent design and the main issue with poor C++ is a lack of understanding of the ramifications and interworkings of all the complex C++ syntax. I believe that 'experienced' C++ devs are simply those who really understand this syntax and interworkings of C++ as this knowledge enables one to write far more robust, self-validating code than what is possible in any other programming language (except Rust, perhaps, which is its own enigma thingy). Note that this does not factor in the time to takes to actually write the software, and, factoring it in, I believe C++ has far lower ROI even for experienced C++ devs in most projects.

Also, from this definition, I'm certainly not a 'experienced' C++ dev. I'm still struggling with all those different types of reference values and heavily rely on the Google AddressSanitizer to track down those remaining memory leaks, which I finesse out of my code with guess work, ha ha.","<div class=""md""><p>Three things (all subjective, granted):</p>

<ul>
<li>I don&#39;t work in any specific field. I&#39;m all over the place and good at many many things ranging from systems programing to full stack, syadmin, devops, ci/cd guy, and system architecture. I&#39;m also majoring in EE so I&#39;ll have that under my belt too.</li>
<li>I don&#39;t think it&#39;s common knowledge. Optimizing for cache efficiency is the most tricky and difficult kind of optimization because it requires a radically different approach to most-every facet of programming than what one is used to. It took me many many years of finely honing this skill to be able to write the post above.</li>
<li>In my own personal opinion (though this is a very controversial viewpoint, so take with a grain of salt?), I believe that the C++ language is a paragon of excellent design and the main issue with poor C++ is a lack of understanding of the ramifications and interworkings of all the complex C++ syntax. I believe that &#39;experienced&#39; C++ devs are simply those who really understand this syntax and interworkings of C++ as this knowledge enables one to write far more robust, self-validating code than what is possible in any other programming language (except Rust, perhaps, which is its own enigma thingy). Note that this does not factor in the time to takes to actually write the software, and, factoring it in, I believe C++ has far lower ROI even for experienced C++ devs in most projects.</li>
</ul>

<p>Also, from this definition, I&#39;m certainly not a &#39;experienced&#39; C++ dev. I&#39;m still struggling with all those different types of reference values and heavily rely on the Google AddressSanitizer to track down those remaining memory leaks, which I finesse out of my code with guess work, ha ha.</p>
</div>",1668471960.0,,1668472193.0,iwebpkb,True,t3_yum03i,t1_iwcsp1t,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwebpkb/,1,False,2,False,yum03i,Cplusplus,t5_2qh6x
1015,WhatInTheBruh,"Wow thanks for responding.

Im around 2.5 years into my work and literally started even doing something worthwhile in last 1 month. My work is also primarily on windows  but will definitely start using linux now.
 
And i do have linux on vm but dont even use it.
Will do what you said about installing on bare metal
 Thank you","<div class=""md""><p>Wow thanks for responding.</p>

<p>Im around 2.5 years into my work and literally started even doing something worthwhile in last 1 month. My work is also primarily on windows  but will definitely start using linux now.</p>

<p>And i do have linux on vm but dont even use it.
Will do what you said about installing on bare metal
 Thank you</p>
</div>",1668442479.0,,False,iwcasyf,False,t3_yum03i,t1_iwc812i,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwcasyf/,1,False,2,False,yum03i,Cplusplus,t5_2qh6x
1016,WinstonP18,"Thanks for taking the time to explain to my questions, as well as the very detailed \`Line-by-line breakdown\` further up. I don't think I'll ever be even a 'half-decent' C++ or Rust developer as my work does not need to get to such low-levels. Still, it's always fascinating to see the other side of the spectrum  :)","<div class=""md""><p>Thanks for taking the time to explain to my questions, as well as the very detailed `Line-by-line breakdown` further up. I don&#39;t think I&#39;ll ever be even a &#39;half-decent&#39; C++ or Rust developer as my work does not need to get to such low-levels. Still, it&#39;s always fascinating to see the other side of the spectrum  :)</p>
</div>",1668504649.0,,False,iwfvr3w,False,t3_yum03i,t1_iwebpkb,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwfvr3w/,0,False,2,False,yum03i,Cplusplus,t5_2qh6x
1017,ILikeToPlayWithDogs,"Great to hear! Glad you are embracing this. Always remember that there are thousands of distros; some people find their special someone on their first roulette spin, while others take much searching to find which distro they really connect with. So, don't generalize your first experience with your first distro to all of Linux; if it's not working as well as you would like it to, then find a different interesting distro and see if that one is better.","<div class=""md""><p>Great to hear! Glad you are embracing this. Always remember that there are thousands of distros; some people find their special someone on their first roulette spin, while others take much searching to find which distro they really connect with. So, don&#39;t generalize your first experience with your first distro to all of Linux; if it&#39;s not working as well as you would like it to, then find a different interesting distro and see if that one is better.</p>
</div>",1668443176.0,,False,iwcchzx,True,t3_yum03i,t1_iwcasyf,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwcchzx/,1,False,2,False,yum03i,Cplusplus,t5_2qh6x
1018,WhatInTheBruh,"Well i started with linux mint long back then i was facing some issues and then entirely stopped using it. This was on bare metal.

Then 6+ months ago i just installed ubuntu on my windows and just use it occasionally for some programming..

Will do some research and do a dual boot","<div class=""md""><p>Well i started with linux mint long back then i was facing some issues and then entirely stopped using it. This was on bare metal.</p>

<p>Then 6+ months ago i just installed ubuntu on my windows and just use it occasionally for some programming..</p>

<p>Will do some research and do a dual boot</p>
</div>",1668678730.0,,False,iwpbkgc,False,t3_yum03i,t1_iwcchzx,/r/Cplusplus/comments/yum03i/anyone_else_feel_like_they_have_to_rewire_their/iwpbkgc/,0,False,1,False,yum03i,Cplusplus,t5_2qh6x
1019,,Try these: [WxWidgets](https://www.wxwidgets.org/) and [Qt](https://www.qt.io/). Both have subreddits and projects on GitHub.,"<div class=""md""><p>Try these: <a href=""https://www.wxwidgets.org/"">WxWidgets</a> and <a href=""https://www.qt.io/"">Qt</a>. Both have subreddits and projects on GitHub.</p>
</div>",1600513782.0,,False,g5sxntk,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5sxntk/,0,False,11,False,ivqatm,Cplusplus,t5_2qh6x
1020,WhyNotDIYIt,Qt is “easy” to use,"<div class=""md""><p>Qt is “easy” to use</p>
</div>",1600519428.0,,False,g5t3sz9,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5t3sz9/,0,False,8,False,ivqatm,Cplusplus,t5_2qh6x
1021,1500lego,"Look into Qt5. Learned it for a university project and it's tough, but the tutorial on 'zetcode' helped a lot. That and the manuals online","<div class=""md""><p>Look into Qt5. Learned it for a university project and it&#39;s tough, but the tutorial on &#39;zetcode&#39; helped a lot. That and the manuals online</p>
</div>",1600520446.0,,False,g5t5nom,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5t5nom/,0,False,7,False,ivqatm,Cplusplus,t5_2qh6x
1022,ignorantpisswalker,Qt5 is the best C++ GUI framework (also cross platform). Problem with it is that it invents a lot of low level stuff (QString QFile QList etc) and it basically demands its own IDE (which is very simplistic but gets the job done).,"<div class=""md""><p>Qt5 is the best C++ GUI framework (also cross platform). Problem with it is that it invents a lot of low level stuff (QString QFile QList etc) and it basically demands its own IDE (which is very simplistic but gets the job done).</p>
</div>",1600534941.0,,False,g5u0xcq,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5u0xcq/,1,False,4,False,ivqatm,Cplusplus,t5_2qh6x
1023,ssj_100,Wxwidges is a good place to start with an easy environment to setup so you can start developing quickly,"<div class=""md""><p>Wxwidges is a good place to start with an easy environment to setup so you can start developing quickly</p>
</div>",1600521039.0,,False,g5t6y6h,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5t6y6h/,0,False,6,False,ivqatm,Cplusplus,t5_2qh6x
1024,SupermanLeRetour,"I personally vouch for Qt too. Tons of resources online, and a great documentation. Also very used professionally, can be a plus if you intend to make it your job.","<div class=""md""><p>I personally vouch for Qt too. Tons of resources online, and a great documentation. Also very used professionally, can be a plus if you intend to make it your job.</p>
</div>",1600529120.0,,False,g5tpf31,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5tpf31/,0,False,2,False,ivqatm,Cplusplus,t5_2qh6x
1025,Stenigma0,Try [ImGui](https://github.com/ocornut/imgui),"<div class=""md""><p>Try <a href=""https://github.com/ocornut/imgui"">ImGui</a></p>
</div>",1600539888.0,,False,g5ud23p,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5ud23p/,0,False,2,False,ivqatm,Cplusplus,t5_2qh6x
1026,qFoxoman,"many C++ GUI libraries available from simple and easy to use to a complex 3D once. 

But I will suggest Qt as a full C++ framework with all tools and IDE you will need and as mentioned here it is a free open source multiplatform framework. one install file can set all needed tools for you and the same code base could be used in many desktops, mobile, embedded systems and now also web!","<div class=""md""><p>many C++ GUI libraries available from simple and easy to use to a complex 3D once. </p>

<p>But I will suggest Qt as a full C++ framework with all tools and IDE you will need and as mentioned here it is a free open source multiplatform framework. one install file can set all needed tools for you and the same code base could be used in many desktops, mobile, embedded systems and now also web!</p>
</div>",1600539971.0,,False,g5udamw,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5udamw/,0,False,1,False,ivqatm,Cplusplus,t5_2qh6x
1027,accuracy_frosty,You can use qt or wxwidgets (you can also use win32),"<div class=""md""><p>You can use qt or wxwidgets (you can also use win32)</p>
</div>",1600547217.0,,False,g5uwuz9,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5uwuz9/,0,False,1,False,ivqatm,Cplusplus,t5_2qh6x
1028,ProgramMax,"If you are looking for something standard & common, Qt or the native platform's API (like Win32) are good ways to go.  


If you're willing to do something non-standard / -common, I've been working on cross-platform a GUI library recently. Right now, it only has Windows support. BUT I think if you compare it to alternatives you'll find it is much easier and more powerful.  


Here is a basic example: [https://github.com/ProgramMax/maxGUI/blob/tip-of-tree/Code/Examples/1%20-%20SimpleExample/EntryPoint.cpp](https://github.com/ProgramMax/maxGUI/blob/tip-of-tree/Code/Examples/1%20-%20SimpleExample/EntryPoint.cpp)  
(Those TODOs are about to be cleaned up as I add the other platforms.)","<div class=""md""><p>If you are looking for something standard &amp; common, Qt or the native platform&#39;s API (like Win32) are good ways to go.  </p>

<p>If you&#39;re willing to do something non-standard / -common, I&#39;ve been working on cross-platform a GUI library recently. Right now, it only has Windows support. BUT I think if you compare it to alternatives you&#39;ll find it is much easier and more powerful.  </p>

<p>Here is a basic example: <a href=""https://github.com/ProgramMax/maxGUI/blob/tip-of-tree/Code/Examples/1%20-%20SimpleExample/EntryPoint.cpp"">https://github.com/ProgramMax/maxGUI/blob/tip-of-tree/Code/Examples/1%20-%20SimpleExample/EntryPoint.cpp</a><br/>
(Those TODOs are about to be cleaned up as I add the other platforms.)</p>
</div>",1600560328.0,,False,g5w0942,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5w0942/,0,False,1,False,ivqatm,Cplusplus,t5_2qh6x
1029,DoorsXP,"if you really wish to use C++ for GUI then gtkmm and Qt5Widgets are best of the best out there.

personally I prefer QML(separate language than C++) offered by Qt for UI design. it can be easily integrated with C++.","<div class=""md""><p>if you really wish to use C++ for GUI then gtkmm and Qt5Widgets are best of the best out there.</p>

<p>personally I prefer QML(separate language than C++) offered by Qt for UI design. it can be easily integrated with C++.</p>
</div>",1600598506.0,,False,g5ylc9p,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5ylc9p/,0,False,1,False,ivqatm,Cplusplus,t5_2qh6x
1030,njalmeister81,"Side note: Whenever possible, I make responsive GUIs using HTML (VSCode with Vue, Bootstrap, React etc.) and run the backend in C++ with a built in POCO web server with rest API's. I often use WebSockets to make things snappy. This enables my users to run the GUI on any device with a web browser, and it's super easy to communicate with my c++ code via the API's. Also, developing GUIs in HTML is superior to any C++ GUI framework when it comes to development speed, usability, customization etc. WebGL is surprisingly good for 3D stuff. If you absolutely have/want to make a gui in c++ then I guess QT is a good place to start.","<div class=""md""><p>Side note: Whenever possible, I make responsive GUIs using HTML (VSCode with Vue, Bootstrap, React etc.) and run the backend in C++ with a built in POCO web server with rest API&#39;s. I often use WebSockets to make things snappy. This enables my users to run the GUI on any device with a web browser, and it&#39;s super easy to communicate with my c++ code via the API&#39;s. Also, developing GUIs in HTML is superior to any C++ GUI framework when it comes to development speed, usability, customization etc. WebGL is surprisingly good for 3D stuff. If you absolutely have/want to make a gui in c++ then I guess QT is a good place to start.</p>
</div>",1600538474.0,,1600583220.0,g5u8t86,False,t3_ivqatm,t3_ivqatm,/r/Cplusplus/comments/ivqatm/c_gui/g5u8t86/,0,False,0,False,ivqatm,Cplusplus,t5_2qh6x
1031,methezer,I use qt daily at work and never leave visual studio/xcode. I wish I had a dollar for every library that implements their own string class.,"<div class=""md""><p>I use qt daily at work and never leave visual studio/xcode. I wish I had a dollar for every library that implements their own string class.</p>
</div>",1600541426.0,,False,g5uhgsa,False,t3_ivqatm,t1_g5u0xcq,/r/Cplusplus/comments/ivqatm/c_gui/g5uhgsa/,0,False,3,False,ivqatm,Cplusplus,t5_2qh6x
1032,TheDefalt8,"- classic calculator with GUI.
- react game. measures reaction time to a visual/audio signal
- tic tac toe. x-o
- pong.
- flappy bird.
- Brick breaker","<div class=""md""><ul>
<li>classic calculator with GUI.</li>
<li>react game. measures reaction time to a visual/audio signal</li>
<li>tic tac toe. x-o</li>
<li>pong.</li>
<li>flappy bird.</li>
<li>Brick breaker</li>
</ul>
</div>",1641631846.0,,False,hrr9lpt,False,t3_ryt0qx,t3_ryt0qx,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrr9lpt/,0,False,20,False,ryt0qx,Cplusplus,t5_2qh6x
1033,Shadow_Gabriel,"You can try reimplementing your C projects using C++. 

I would recommend watching some of the CppCon presentations. I also come from a C background and I though for a log time that C++ is C with classes. Those presentations opened my mind to the fact that C++ is an entirely different type of beast.","<div class=""md""><p>You can try reimplementing your C projects using C++. </p>

<p>I would recommend watching some of the CppCon presentations. I also come from a C background and I though for a log time that C++ is C with classes. Those presentations opened my mind to the fact that C++ is an entirely different type of beast.</p>
</div>",1641666716.0,,False,hrt2g7x,False,t3_ryt0qx,t3_ryt0qx,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrt2g7x/,0,False,5,False,ryt0qx,Cplusplus,t5_2qh6x
1034,rwn_sky_7236,My advice would be to get familiar with the abstraction mechanisms such as classes and templates first and then move to the C++ Standard Library containers and algorithms.,"<div class=""md""><p>My advice would be to get familiar with the abstraction mechanisms such as classes and templates first and then move to the C++ Standard Library containers and algorithms.</p>
</div>",1641688807.0,,False,hrul2fl,False,t3_ryt0qx,t3_ryt0qx,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrul2fl/,0,False,4,False,ryt0qx,Cplusplus,t5_2qh6x
1035,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1641662109.0,,False,hrsqm9n,False,t3_ryt0qx,t3_ryt0qx,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrsqm9n/,1,False,2,False,ryt0qx,Cplusplus,t5_2qh6x
1036,Gunslinging_Gamer,Battleships vs. AI?,"<div class=""md""><p>Battleships vs. AI?</p>
</div>",1641647912.0,,False,hrrvaaz,False,t3_ryt0qx,t3_ryt0qx,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrrvaaz/,0,False,1,False,ryt0qx,Cplusplus,t5_2qh6x
1037,TheMaskOfAmontillado,Write your own simple shell. That’s an assignment I had in my OS class.,"<div class=""md""><p>Write your own simple shell. That’s an assignment I had in my OS class.</p>
</div>",1641659941.0,,False,hrsl4hb,False,t3_ryt0qx,t3_ryt0qx,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrsl4hb/,0,False,1,False,ryt0qx,Cplusplus,t5_2qh6x
1038,ExtraFig6,"A huge difference between the two languages is you can ask the C++ type system to do more to support you. This can change the way you would structure your code, perhaps more so than the OOP parts. 

In particular, make sure you have a good understanding of using destructors for resource management.

For example, compare std::array to a C array. The std::array won't decay to a pointer. The type system carries around information about its size, which templates can take advantage of.","<div class=""md""><p>A huge difference between the two languages is you can ask the C++ type system to do more to support you. This can change the way you would structure your code, perhaps more so than the OOP parts. </p>

<p>In particular, make sure you have a good understanding of using destructors for resource management.</p>

<p>For example, compare std::array to a C array. The std::array won&#39;t decay to a pointer. The type system carries around information about its size, which templates can take advantage of.</p>
</div>",1641677757.0,,False,hrtu6es,False,t3_ryt0qx,t3_ryt0qx,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrtu6es/,0,False,1,False,ryt0qx,Cplusplus,t5_2qh6x
1039,bellpeppercaptain,"Yeah, I had started to look into some unreal tutorials and play around, but it definitely felt like I needed to get my hands dirty with a more ""regular"" C++ before I went in and learned those systems in conjunction.","<div class=""md""><p>Yeah, I had started to look into some unreal tutorials and play around, but it definitely felt like I needed to get my hands dirty with a more &quot;regular&quot; C++ before I went in and learned those systems in conjunction.</p>
</div>",1641666362.0,,False,hrt1kcw,True,t3_ryt0qx,t1_hrsqm9n,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrt1kcw/,1,False,2,False,ryt0qx,Cplusplus,t5_2qh6x
1040,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1641679498.0,,False,hrtyhcf,False,t3_ryt0qx,t1_hrt1kcw,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrtyhcf/,1,False,2,False,ryt0qx,Cplusplus,t5_2qh6x
1041,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1641699408.0,,False,hrv9k8j,False,t3_ryt0qx,t1_hrtyhcf,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrv9k8j/,1,False,2,False,ryt0qx,Cplusplus,t5_2qh6x
1042,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1641699928.0,,1650354883.0,hrvapw0,False,t3_ryt0qx,t1_hrv9k8j,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrvapw0/,1,False,2,False,ryt0qx,Cplusplus,t5_2qh6x
1043,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1641700181.0,,False,hrvb9yi,False,t3_ryt0qx,t1_hrvapw0,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrvb9yi/,1,False,1,False,ryt0qx,Cplusplus,t5_2qh6x
1044,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1641775239.0,,False,hrzrhhc,False,t3_ryt0qx,t1_hrvb9yi,/r/Cplusplus/comments/ryt0qx/what_are_some_good_beginner_projects_for_someone/hrzrhhc/,0,False,1,False,ryt0qx,Cplusplus,t5_2qh6x
1045,Cakefonz,"This is some nice work!

Will it handle implicit conversions, e.g. if `E1` is convertible to `E2` (user defined conversion or otherwise)? ...

    auto func() -> result<T, E1>
    {
      ...
    }
    
    auto other_func() -> result<T, E2>
    {
      return func();
    }","<div class=""md""><p>This is some nice work!</p>

<p>Will it handle implicit conversions, e.g. if <code>E1</code> is convertible to <code>E2</code> (user defined conversion or otherwise)? ...</p>

<pre><code>auto func() -&gt; result&lt;T, E1&gt;
{
  ...
}

auto other_func() -&gt; result&lt;T, E2&gt;
{
  return func();
}
</code></pre>
</div>",1615575783.0,,False,gqpy6g2,False,t3_m3hyov,t3_m3hyov,/r/Cplusplus/comments/m3hyov/modern_c_result_type_based_on_swift_rust/gqpy6g2/,1,False,3,False,m3hyov,Cplusplus,t5_2qh6x
1046,Middlewarian,I'd like to see more/caller code in the Teaser.,"<div class=""md""><p>I&#39;d like to see more/caller code in the Teaser.</p>
</div>",1615673575.0,,False,gqu9xhl,False,t3_m3hyov,t3_m3hyov,/r/Cplusplus/comments/m3hyov/modern_c_result_type_based_on_swift_rust/gqu9xhl/,1,False,2,False,m3hyov,Cplusplus,t5_2qh6x
1047,peymanmo,Nice work!! I'll give this a try soon but it looks nice. I appreciate the docs and Conan record as well. The try this link is also helpful.,"<div class=""md""><p>Nice work!! I&#39;ll give this a try soon but it looks nice. I appreciate the docs and Conan record as well. The try this link is also helpful.</p>
</div>",1616527027.0,,False,gryolo4,False,t3_m3hyov,t3_m3hyov,/r/Cplusplus/comments/m3hyov/modern_c_result_type_based_on_swift_rust/gryolo4/,0,False,1,False,m3hyov,Cplusplus,t5_2qh6x
1048,bitwizeshift,"Yep, that's supported out-of-the-box!

It's actually conditionally explicit -- so if T1 and E1 are convertible to T2 and E2, then `result<T1,E1>` will be convertible to `result<T2,E2>`.","<div class=""md""><p>Yep, that&#39;s supported out-of-the-box!</p>

<p>It&#39;s actually conditionally explicit -- so if T1 and E1 are convertible to T2 and E2, then <code>result&lt;T1,E1&gt;</code> will be convertible to <code>result&lt;T2,E2&gt;</code>.</p>
</div>",1615578066.0,,False,gqq3484,True,t3_m3hyov,t1_gqpy6g2,/r/Cplusplus/comments/m3hyov/modern_c_result_type_based_on_swift_rust/gqq3484/,1,False,2,False,m3hyov,Cplusplus,t5_2qh6x
1049,bitwizeshift,"Thank you for the suggestion!

It's difficult to come up with a segment that is demonstrative, compact, and not to complicated; but I'll try to include something a little better.

Or perhaps I could make a gif slideshow for the opening with different examples, like I've seen some projects using in the past.","<div class=""md""><p>Thank you for the suggestion!</p>

<p>It&#39;s difficult to come up with a segment that is demonstrative, compact, and not to complicated; but I&#39;ll try to include something a little better.</p>

<p>Or perhaps I could make a gif slideshow for the opening with different examples, like I&#39;ve seen some projects using in the past.</p>
</div>",1615700717.0,,False,gqvhsgo,True,t3_m3hyov,t1_gqu9xhl,/r/Cplusplus/comments/m3hyov/modern_c_result_type_based_on_swift_rust/gqvhsgo/,0,False,1,False,m3hyov,Cplusplus,t5_2qh6x
1050,Cakefonz,"Great! I thought it would. This implementation looks more compact than others. Definitely gonna give it a try. Again, nice work 👍","<div class=""md""><p>Great! I thought it would. This implementation looks more compact than others. Definitely gonna give it a try. Again, nice work 👍</p>
</div>",1615578831.0,,False,gqq4r43,False,t3_m3hyov,t1_gqq3484,/r/Cplusplus/comments/m3hyov/modern_c_result_type_based_on_swift_rust/gqq4r43/,0,False,1,False,m3hyov,Cplusplus,t5_2qh6x
1051,PercyServiceRooster,Thanks :),"<div class=""md""><p>Thanks :)</p>
</div>",1685283250.0,,False,jly24gn,False,t3_13tzhvc,t3_13tzhvc,/r/Cplusplus/comments/13tzhvc/how_to_setup_vscode_for_cc_programming_from_a/jly24gn/,1,False,2,False,13tzhvc,Cplusplus,t5_2qh6x
1052,tarikhello,I appreciate it! Please subscribe for more content 🙏🏿,"<div class=""md""><p>I appreciate it! Please subscribe for more content 🙏🏿</p>
</div>",1685284293.0,,False,jly4h2a,True,t3_13tzhvc,t1_jly24gn,/r/Cplusplus/comments/13tzhvc/how_to_setup_vscode_for_cc_programming_from_a/jly4h2a/,1,False,3,False,13tzhvc,Cplusplus,t5_2qh6x
1053,PercyServiceRooster,Will do! What other videos do you have in the offing?,"<div class=""md""><p>Will do! What other videos do you have in the offing?</p>
</div>",1685285705.0,,False,jly7p37,False,t3_13tzhvc,t1_jly4h2a,/r/Cplusplus/comments/13tzhvc/how_to_setup_vscode_for_cc_programming_from_a/jly7p37/,1,False,2,False,13tzhvc,Cplusplus,t5_2qh6x
1054,tarikhello,"This was my first tutorial video, if you have suggestions please let me know and I’ll get around to making a video in it!","<div class=""md""><p>This was my first tutorial video, if you have suggestions please let me know and I’ll get around to making a video in it!</p>
</div>",1685286206.0,,False,jly8ufg,True,t3_13tzhvc,t1_jly7p37,/r/Cplusplus/comments/13tzhvc/how_to_setup_vscode_for_cc_programming_from_a/jly8ufg/,2,False,3,False,13tzhvc,Cplusplus,t5_2qh6x
1055,PercyServiceRooster,"Probably how to debug and conditional breakpoints, break when value changes etc (not sure they even exist in VSCode)","<div class=""md""><p>Probably how to debug and conditional breakpoints, break when value changes etc (not sure they even exist in VSCode)</p>
</div>",1685286306.0,,False,jly92jk,False,t3_13tzhvc,t1_jly8ufg,/r/Cplusplus/comments/13tzhvc/how_to_setup_vscode_for_cc_programming_from_a/jly92jk/,0,False,3,False,13tzhvc,Cplusplus,t5_2qh6x
1056,woo4u,I would like to know how to set up the json for debugging and if it would be possible how to set up vs code with cmake :),"<div class=""md""><p>I would like to know how to set up the json for debugging and if it would be possible how to set up vs code with cmake :)</p>
</div>",1685319945.0,,False,jm0e9n4,False,t3_13tzhvc,t1_jly8ufg,/r/Cplusplus/comments/13tzhvc/how_to_setup_vscode_for_cc_programming_from_a/jm0e9n4/,2,False,3,False,13tzhvc,Cplusplus,t5_2qh6x
1057,tarikhello,Just made a cmake setup tutorial which you can find here: https://youtu.be/OUAuqw3QgeE,"<div class=""md""><p>Just made a cmake setup tutorial which you can find here: <a href=""https://youtu.be/OUAuqw3QgeE"">https://youtu.be/OUAuqw3QgeE</a></p>
</div>",1685329826.0,,False,jm0xtci,True,t3_13tzhvc,t1_jm0e9n4,/r/Cplusplus/comments/13tzhvc/how_to_setup_vscode_for_cc_programming_from_a/jm0xtci/,0,False,3,False,13tzhvc,Cplusplus,t5_2qh6x
1058,tarikhello,Please find the debugging setup video here: [https://youtu.be/ean872pAyzY](https://youtu.be/ean872pAyzY),"<div class=""md""><p>Please find the debugging setup video here: <a href=""https://youtu.be/ean872pAyzY"">https://youtu.be/ean872pAyzY</a></p>
</div>",1685511818.0,,False,jmay9h8,True,t3_13tzhvc,t1_jm0e9n4,/r/Cplusplus/comments/13tzhvc/how_to_setup_vscode_for_cc_programming_from_a/jmay9h8/,0,False,1,False,13tzhvc,Cplusplus,t5_2qh6x
1059,thatagory,These look great. Im started c++ in college this year and really looking forward to creating games,"<div class=""md""><p>These look great. Im started c++ in college this year and really looking forward to creating games</p>
</div>",1570200796.0,,False,f2eouzi,False,t3_dcvs1u,t3_dcvs1u,/r/Cplusplus/comments/dcvs1u/3d_game_tutorial_in_c_from_scratch_part_13/f2eouzi/,1,False,2,False,dcvs1u,Cplusplus,t5_2qh6x
1060,PardDev,"Thank you very much, mate!","<div class=""md""><p>Thank you very much, mate!</p>
</div>",1570201239.0,,False,f2eping,True,t3_dcvs1u,t1_f2eouzi,/r/Cplusplus/comments/dcvs1u/3d_game_tutorial_in_c_from_scratch_part_13/f2eping/,0,False,1,False,dcvs1u,Cplusplus,t5_2qh6x
1061,stilgarpl,"This language looks like half-C, half-bash. I bet it was fun to make it.","<div class=""md""><p>This language looks like half-C, half-bash. I bet it was fun to make it.</p>
</div>",1567088406.0,,False,eyhk2vc,False,t3_cx1izj,t3_cx1izj,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eyhk2vc/,1,False,7,False,cx1izj,Cplusplus,t5_2qh6x
1062,Narase33,I also think alot about creating a small interpreted language. How much work was is until you had your first running version?,"<div class=""md""><p>I also think alot about creating a small interpreted language. How much work was is until you had your first running version?</p>
</div>",1567093409.0,,False,eyhvmgx,False,t3_cx1izj,t3_cx1izj,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eyhvmgx/,1,False,4,False,cx1izj,Cplusplus,t5_2qh6x
1063,prema_van_smuuf,"Congrats!

I created my little one in PHP. But I would bet your's a bit faster.","<div class=""md""><p>Congrats!</p>

<p>I created my little one in PHP. But I would bet your&#39;s a bit faster.</p>
</div>",1567111235.0,,False,eyj259z,False,t3_cx1izj,t3_cx1izj,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eyj259z/,0,False,1,False,cx1izj,Cplusplus,t5_2qh6x
1064,thot_slayer_69420,this needs more upvotes,"<div class=""md""><p>this needs more upvotes</p>
</div>",1567416503.0,,False,eysyab7,False,t3_cx1izj,t3_cx1izj,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eysyab7/,1,False,1,False,cx1izj,Cplusplus,t5_2qh6x
1065,ElectruxRedsworth,"I don't know if it was sarcasm or not, but yea, it was definitely fun. Although, I don't see the similarity of it with Bash 😅🤔","<div class=""md""><p>I don&#39;t know if it was sarcasm or not, but yea, it was definitely fun. Although, I don&#39;t see the similarity of it with Bash 😅🤔</p>
</div>",1567088653.0,,False,eyhknrl,True,t3_cx1izj,t1_eyhk2vc,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eyhknrl/,1,False,2,False,cx1izj,Cplusplus,t5_2qh6x
1066,ElectruxRedsworth,"Well, I'd say it was about 1.5 months after which a very barebones interpreter (Virtual Machine) was working, according to the commit history.

In my opinion, it also depends on the language and how sure you are about what you want. I have changed multiple things at many points which caused significant increase in required time.

But, to be honest, I think you should create the language if you are really interested. It is extremely fun and rewarding experience :)","<div class=""md""><p>Well, I&#39;d say it was about 1.5 months after which a very barebones interpreter (Virtual Machine) was working, according to the commit history.</p>

<p>In my opinion, it also depends on the language and how sure you are about what you want. I have changed multiple things at many points which caused significant increase in required time.</p>

<p>But, to be honest, I think you should create the language if you are really interested. It is extremely fun and rewarding experience :)</p>
</div>",1567098660.0,,False,eyi7qia,True,t3_cx1izj,t1_eyhvmgx,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eyi7qia/,1,False,5,False,cx1izj,Cplusplus,t5_2qh6x
1067,ElectruxRedsworth,Thank you very much for your kind words 😊,"<div class=""md""><p>Thank you very much for your kind words 😊</p>
</div>",1567438075.0,,False,eytjbr4,True,t3_cx1izj,t1_eysyab7,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eytjbr4/,0,False,2,False,cx1izj,Cplusplus,t5_2qh6x
1068,stilgarpl,No sarcasm intended. I've once implemented dynamic command parser for my p2p engine. When it finally started working it felt great.,"<div class=""md""><p>No sarcasm intended. I&#39;ve once implemented dynamic command parser for my p2p engine. When it finally started working it felt great.</p>
</div>",1567088752.0,,False,eyhkvz4,False,t3_cx1izj,t1_eyhknrl,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eyhkvz4/,1,False,2,False,cx1izj,Cplusplus,t5_2qh6x
1069,Narase33,"Sounds great, maybe Ill start with a little planing soon","<div class=""md""><p>Sounds great, maybe Ill start with a little planing soon</p>
</div>",1567101821.0,,False,eyifnl3,False,t3_cx1izj,t1_eyi7qia,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eyifnl3/,1,False,2,False,cx1izj,Cplusplus,t5_2qh6x
1070,ElectruxRedsworth,"Oh okay, thanks a lot then :) and your project seems interesting! Any change it is open source?","<div class=""md""><p>Oh okay, thanks a lot then :) and your project seems interesting! Any change it is open source?</p>
</div>",1567088869.0,,False,eyhl5km,True,t3_cx1izj,t1_eyhkvz4,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eyhl5km/,1,False,1,False,cx1izj,Cplusplus,t5_2qh6x
1071,ElectruxRedsworth,sure! good luck! :),"<div class=""md""><p>sure! good luck! :)</p>
</div>",1567101866.0,,False,eyifrj4,True,t3_cx1izj,t1_eyifnl3,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eyifrj4/,0,False,2,False,cx1izj,Cplusplus,t5_2qh6x
1072,stilgarpl,It will be when it's ready :) . I have a small child and not a lot of free time to develop hobby projects.,"<div class=""md""><p>It will be when it&#39;s ready :) . I have a small child and not a lot of free time to develop hobby projects.</p>
</div>",1567089093.0,,False,eyhlo2j,False,t3_cx1izj,t1_eyhl5km,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eyhlo2j/,1,False,2,False,cx1izj,Cplusplus,t5_2qh6x
1073,ElectruxRedsworth,oh. well alright then! good luck making it and share it when you do open source it 😁,"<div class=""md""><p>oh. well alright then! good luck making it and share it when you do open source it 😁</p>
</div>",1567089359.0,,False,eyhm9id,True,t3_cx1izj,t1_eyhlo2j,/r/Cplusplus/comments/cx1izj/developed_an_interpreted_language_in_c/eyhm9id/,0,False,1,False,cx1izj,Cplusplus,t5_2qh6x
1074,rodrigocfd,https://stackoverflow.com/questions/52928946/why-shouldnt-i-put-everything-in-header,"<div class=""md""><p><a href=""https://stackoverflow.com/questions/52928946/why-shouldnt-i-put-everything-in-header"">https://stackoverflow.com/questions/52928946/why-shouldnt-i-put-everything-in-header</a></p>
</div>",1603896490.0,,False,gadvg6j,False,t3_jjopan,t3_jjopan,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gadvg6j/,1,False,17,False,jjopan,Cplusplus,t5_2qh6x
1075,mredding,"Well, as you've read from the one link to SO, headers aren't compiled, sources are. So if anything, why not write everything into one source file?

Well, there's this thing called a ""Unity Build"". The whole program is one source file. Typically, how this is done, is the program is written in many source files, but they are included into a single source file, and that file is compiled.

The include macro is dumb, it's just an in-place copy in the memory buffer. Indeed, it was originally envisioned to be general purpose:

    int data [] = {
    #include ""generated_data.dat""
    };

This is actually why array sizes can be omitted and initializer lists can have trailing commas. Thank you, C.

The tricky part with unity builds is getting everything in one source file in the right order. As you may know by now, things need to be declared, you need complete types before the compiler can determine the size of dependent types.

Then the problem is can the compiler handle a single input that can be several million lines of code? The result is a singly long compile time, essentially no link time, and highly optimized whole-program object code.

Still, many source files are used rather than one, because it's easier to manage all the source code when organized that way. You can always write everything into one single source file, and use your IDE to handle navigation for you, but it's still tricky to manage - you have to get good at setting and using bookmarks in your IDE, and however else you manage so much complexity in one place.

Unity builds are good for release builds. When you're developing, they suck. If you want to change, compile, debug, forget it. A large project could take hours. You can parallelize your builds by compiling individual files at the same time, but you have just 1 file, and it could take hours if it were big enough.

So that's the value of incremental builds and individual source files, parallel jobs, and recompiling only the files that changed. Linking is longer, but linking is never as long as compiling. You use an incremental build for a fast development cycle, then a unity build for release.

There are other reasons not to put everything in headers, and it has some to do with needlessly duplicating work, which can make for longer compile times, but that shit gets complicated. Headers are for types, declarations, and linkage between translation units.","<div class=""md""><p>Well, as you&#39;ve read from the one link to SO, headers aren&#39;t compiled, sources are. So if anything, why not write everything into one source file?</p>

<p>Well, there&#39;s this thing called a &quot;Unity Build&quot;. The whole program is one source file. Typically, how this is done, is the program is written in many source files, but they are included into a single source file, and that file is compiled.</p>

<p>The include macro is dumb, it&#39;s just an in-place copy in the memory buffer. Indeed, it was originally envisioned to be general purpose:</p>

<pre><code>int data [] = {
#include &quot;generated_data.dat&quot;
};
</code></pre>

<p>This is actually why array sizes can be omitted and initializer lists can have trailing commas. Thank you, C.</p>

<p>The tricky part with unity builds is getting everything in one source file in the right order. As you may know by now, things need to be declared, you need complete types before the compiler can determine the size of dependent types.</p>

<p>Then the problem is can the compiler handle a single input that can be several million lines of code? The result is a singly long compile time, essentially no link time, and highly optimized whole-program object code.</p>

<p>Still, many source files are used rather than one, because it&#39;s easier to manage all the source code when organized that way. You can always write everything into one single source file, and use your IDE to handle navigation for you, but it&#39;s still tricky to manage - you have to get good at setting and using bookmarks in your IDE, and however else you manage so much complexity in one place.</p>

<p>Unity builds are good for release builds. When you&#39;re developing, they suck. If you want to change, compile, debug, forget it. A large project could take hours. You can parallelize your builds by compiling individual files at the same time, but you have just 1 file, and it could take hours if it were big enough.</p>

<p>So that&#39;s the value of incremental builds and individual source files, parallel jobs, and recompiling only the files that changed. Linking is longer, but linking is never as long as compiling. You use an incremental build for a fast development cycle, then a unity build for release.</p>

<p>There are other reasons not to put everything in headers, and it has some to do with needlessly duplicating work, which can make for longer compile times, but that shit gets complicated. Headers are for types, declarations, and linkage between translation units.</p>
</div>",1603922959.0,,False,gaffn9k,False,t3_jjopan,t3_jjopan,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gaffn9k/,2,False,5,False,jjopan,Cplusplus,t5_2qh6x
1076,sessamekesh,"Lots of good answers already, I'll add two I don't already see around deployment:

First, it allows you to distribute your headers without having to distribute your source code. You provide the headers for your API and a pre-built library. This is really common - for example your graphics drivers do this - you have OpenGL and DirectX12 headers, but the implementations are proprietary.

It also allows you to do some tricky things in cross platform development. I recently have been building a project that targets Windows, Linux, and WebAssembly targets. Window creation and application lifecycle all can go through a common interface, but the implementation will be different on each platform. I can maintain one CPP file for the AppBase class on each platform I support and switch between them at build time instead of having to rely on a gillion preprocessor guards everywhere.","<div class=""md""><p>Lots of good answers already, I&#39;ll add two I don&#39;t already see around deployment:</p>

<p>First, it allows you to distribute your headers without having to distribute your source code. You provide the headers for your API and a pre-built library. This is really common - for example your graphics drivers do this - you have OpenGL and DirectX12 headers, but the implementations are proprietary.</p>

<p>It also allows you to do some tricky things in cross platform development. I recently have been building a project that targets Windows, Linux, and WebAssembly targets. Window creation and application lifecycle all can go through a common interface, but the implementation will be different on each platform. I can maintain one CPP file for the AppBase class on each platform I support and switch between them at build time instead of having to rely on a gillion preprocessor guards everywhere.</p>
</div>",1603933434.0,,False,gag0z8l,False,t3_jjopan,t3_jjopan,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gag0z8l/,1,False,5,False,jjopan,Cplusplus,t5_2qh6x
1077,truthb0mb3,"You want to do the exact opposite.  
  
Google pImpl and/or once you get into object-oriented design mostly the interface is specified in the header and the class implementation goes in the .cpp. The header shouldn't even know the name of it; have a non-member function create the object and return an interface pointer to it.  
  
Everything you put in the header becomes part of your contract of what you will do and implement. Ruthlessly minimize it.  
Examples of putting constants or non-member declarations and other crap in header files were created by people that do not know what they are doing. (And all of this holds for C a well not just C++.)","<div class=""md""><p>You want to do the exact opposite.  </p>

<p>Google pImpl and/or once you get into object-oriented design mostly the interface is specified in the header and the class implementation goes in the .cpp. The header shouldn&#39;t even know the name of it; have a non-member function create the object and return an interface pointer to it.  </p>

<p>Everything you put in the header becomes part of your contract of what you will do and implement. Ruthlessly minimize it.<br/>
Examples of putting constants or non-member declarations and other crap in header files were created by people that do not know what they are doing. (And all of this holds for C a well not just C++.)</p>
</div>",1603946162.0,,1603946402.0,gaglojt,False,t3_jjopan,t3_jjopan,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gaglojt/,1,False,2,False,jjopan,Cplusplus,t5_2qh6x
1078,C2471,"A few reasons -
When you implement a function entirely in a .h file, you cant use that function in two places without it being declared inline. This means that every place you call that function, essentially the compiler just copy pastes the code of the function into that point in the calling routine. 

This will increase your compile time because the same function is compiled once for every call essentially. Additionally it will make your binaries larger. 

Splitting into a h and cpp means the compiler compiles the cpp implementations once, and then the linker goes through and joins up, essentially saying ""you called foo, this is the part of the compiled code that contains a function called foo with the same args and return type""

Also, if you don't do this, incremental builds are longer. If you just do a make, the compiler will know which parts of the cpp code haven't changed since it last ran, and use the last version. If you don't split, all your stuff is inside, so it essentially has to recompile every function that is called in a routine that is changed. 

The style thing is a bit more than just style - it's quite useful to be able to go see the api of a function. If you're making a library, its much easier to head just a header vs searching a 5000 line file for the function you want. 

Some things have to be in a header file only- for example a template function cant be split into a header and cpp file.","<div class=""md""><p>A few reasons -
When you implement a function entirely in a .h file, you cant use that function in two places without it being declared inline. This means that every place you call that function, essentially the compiler just copy pastes the code of the function into that point in the calling routine. </p>

<p>This will increase your compile time because the same function is compiled once for every call essentially. Additionally it will make your binaries larger. </p>

<p>Splitting into a h and cpp means the compiler compiles the cpp implementations once, and then the linker goes through and joins up, essentially saying &quot;you called foo, this is the part of the compiled code that contains a function called foo with the same args and return type&quot;</p>

<p>Also, if you don&#39;t do this, incremental builds are longer. If you just do a make, the compiler will know which parts of the cpp code haven&#39;t changed since it last ran, and use the last version. If you don&#39;t split, all your stuff is inside, so it essentially has to recompile every function that is called in a routine that is changed. </p>

<p>The style thing is a bit more than just style - it&#39;s quite useful to be able to go see the api of a function. If you&#39;re making a library, its much easier to head just a header vs searching a 5000 line file for the function you want. </p>

<p>Some things have to be in a header file only- for example a template function cant be split into a header and cpp file.</p>
</div>",1603896618.0,,False,gadvp9c,False,t3_jjopan,t3_jjopan,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gadvp9c/,1,False,4,False,jjopan,Cplusplus,t5_2qh6x
1079,zostercr,fuck u spez,"<div class=""md""><p>fuck u spez</p>
</div>",1603900145.0,,1690170082.0,gae2zfu,False,t3_jjopan,t3_jjopan,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gae2zfu/,1,False,2,False,jjopan,Cplusplus,t5_2qh6x
1080,upper_bound,"One other thing to add.

Beyond technical reasons, it's simply just nice to have declarations separate from implementations.

I would highly encourage everyone to view headers as a guide/road-map/documentation for how your code should be used. The point of a header is to be included/used elsewhere, after all.

This holds especially true for large and complex projects.

Many IDEs these days support collapsing/expanding code blocks, but a good old header file is still my preferred method for glancing at the high level interface for how included code is intended to be used.

Further, a well written header will take care to organize the order and grouping of methods, variables, and everything else to convey meaning. The primary methods should be up top, less common functionality burried down below. Methods used in conjunction can be grouped together. Maybe it makes sense to put accessors together. Maybe it makes sense to put accessors/getter pairs together.

Much like you'd put effort and thought into how to organize a table or contents or summary page, you should treat your header the same. In a perfect world, your interface is so well crafted and the header so clear that no one would ever need to reference the cpp at all </hyperbole>","<div class=""md""><p>One other thing to add.</p>

<p>Beyond technical reasons, it&#39;s simply just nice to have declarations separate from implementations.</p>

<p>I would highly encourage everyone to view headers as a guide/road-map/documentation for how your code should be used. The point of a header is to be included/used elsewhere, after all.</p>

<p>This holds especially true for large and complex projects.</p>

<p>Many IDEs these days support collapsing/expanding code blocks, but a good old header file is still my preferred method for glancing at the high level interface for how included code is intended to be used.</p>

<p>Further, a well written header will take care to organize the order and grouping of methods, variables, and everything else to convey meaning. The primary methods should be up top, less common functionality burried down below. Methods used in conjunction can be grouped together. Maybe it makes sense to put accessors together. Maybe it makes sense to put accessors/getter pairs together.</p>

<p>Much like you&#39;d put effort and thought into how to organize a table or contents or summary page, you should treat your header the same. In a perfect world, your interface is so well crafted and the header so clear that no one would ever need to reference the cpp at all &lt;/hyperbole&gt;</p>
</div>",1603902577.0,,1603922996.0,gae871p,False,t3_jjopan,t3_jjopan,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gae871p/,2,False,2,False,jjopan,Cplusplus,t5_2qh6x
1081,TheDevilsAdvokaat,"Also, instead of using member variables named _name or _health I did this:

    Hero::Hero(string name,int health)
    {
	    Hero::name = name;
	    Hero::health = health;
    }

Is this a good or bad idea? It is a little extra typing, but it means I can look at code with variables like ""name"" or ""health"" instead of ""_name"" or ""_health""","<div class=""md""><p>Also, instead of using member variables named _name or _health I did this:</p>

<pre><code>Hero::Hero(string name,int health)
{
    Hero::name = name;
    Hero::health = health;
}
</code></pre>

<p>Is this a good or bad idea? It is a little extra typing, but it means I can look at code with variables like &quot;name&quot; or &quot;health&quot; instead of &quot;_name&quot; or &quot;_health&quot;</p>
</div>",1603896018.0,,False,gaduiyr,True,t3_jjopan,t3_jjopan,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gaduiyr/,3,False,1,False,jjopan,Cplusplus,t5_2qh6x
1082,,because... that would be terrible.,"<div class=""md""><p>because... that would be terrible.</p>
</div>",1603897586.0,,False,gadxmuz,False,t3_jjopan,t3_jjopan,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gadxmuz/,0,False,-5,False,jjopan,Cplusplus,t5_2qh6x
1083,TheDevilsAdvokaat,"Got it, this is exactly what I was looking for.

Thank you.","<div class=""md""><p>Got it, this is exactly what I was looking for.</p>

<p>Thank you.</p>
</div>",1603900833.0,,False,gae4g4z,True,t3_jjopan,t1_gadvg6j,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gae4g4z/,0,False,5,False,jjopan,Cplusplus,t5_2qh6x
1084,TheDevilsAdvokaat,"This is very interesting, had no idea poeple were doing it.

A unity build....

For now though I will stick with multiple source files.... I expect to be doing a LOT of changes as a noob...","<div class=""md""><p>This is very interesting, had no idea poeple were doing it.</p>

<p>A unity build....</p>

<p>For now though I will stick with multiple source files.... I expect to be doing a LOT of changes as a noob...</p>
</div>",1603926671.0,,False,gafooxe,True,t3_jjopan,t1_gaffn9k,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gafooxe/,0,False,1,False,jjopan,Cplusplus,t5_2qh6x
1085,TiggerOni,"Another reason for using multiple source files is if you're working on a project with other people.  In this case it's very easy for person A to work on fileA.cpp, and person B to work on fileB.cpp without getting in each other's way.  Having more than one person working on a single file at the same time always carries a risk of having a source code merge not go cleanly.","<div class=""md""><p>Another reason for using multiple source files is if you&#39;re working on a project with other people.  In this case it&#39;s very easy for person A to work on fileA.cpp, and person B to work on fileB.cpp without getting in each other&#39;s way.  Having more than one person working on a single file at the same time always carries a risk of having a source code merge not go cleanly.</p>
</div>",1605654787.0,,False,gcnvhj8,False,t3_jjopan,t1_gaffn9k,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gcnvhj8/,0,False,1,False,jjopan,Cplusplus,t5_2qh6x
1086,TheDevilsAdvokaat,"Hmm this is also a really interesting. So people get your headers but not your source code...very handy.

And I see what you mean about cross platform development too.","<div class=""md""><p>Hmm this is also a really interesting. So people get your headers but not your source code...very handy.</p>

<p>And I see what you mean about cross platform development too.</p>
</div>",1603959584.0,,False,gagzb4d,True,t3_jjopan,t1_gag0z8l,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gagzb4d/,0,False,2,False,jjopan,Cplusplus,t5_2qh6x
1087,TheDevilsAdvokaat,"I have to say I'm attracted to the idea of it and some of the commenters on here *are* doing it.

But I'm going to try doing what the ""norm"" is. That will make it easier for me to understand other people's code, and apparently it's better for compilation too.","<div class=""md""><p>I have to say I&#39;m attracted to the idea of it and some of the commenters on here <em>are</em> doing it.</p>

<p>But I&#39;m going to try doing what the &quot;norm&quot; is. That will make it easier for me to understand other people&#39;s code, and apparently it&#39;s better for compilation too.</p>
</div>",1603959852.0,,False,gagzjm2,True,t3_jjopan,t1_gaglojt,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gagzjm2/,0,False,1,False,jjopan,Cplusplus,t5_2qh6x
1088,TheDevilsAdvokaat,I see. Makes compilation times longer. Thanks!,"<div class=""md""><p>I see. Makes compilation times longer. Thanks!</p>
</div>",1603900869.0,,False,gae4itr,True,t3_jjopan,t1_gadvp9c,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gae4itr/,0,False,1,False,jjopan,Cplusplus,t5_2qh6x
1089,TheDevilsAdvokaat,"Some people have said it can make compilation longer.

So  I guess I will stick to two files, like everyone else.

But it's interesting to hear some people ARE just dong header files.","<div class=""md""><p>Some people have said it can make compilation longer.</p>

<p>So  I guess I will stick to two files, like everyone else.</p>

<p>But it&#39;s interesting to hear some people ARE just dong header files.</p>
</div>",1603901056.0,,False,gae4x70,True,t3_jjopan,t1_gae2zfu,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gae4x70/,1,False,1,False,jjopan,Cplusplus,t5_2qh6x
1090,TheDevilsAdvokaat,I think you have a point here. For small stuff yeah it might seem redundant; for really complex things it might be very useful.,"<div class=""md""><p>I think you have a point here. For small stuff yeah it might seem redundant; for really complex things it might be very useful.</p>
</div>",1603926484.0,,False,gafocri,True,t3_jjopan,t1_gae871p,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gafocri/,0,False,1,False,jjopan,Cplusplus,t5_2qh6x
1091,TheDevilsAdvokaat,I think you have a point here. For small stuff yeah it might seem redundant; for really complex things it might be very useful.,"<div class=""md""><p>I think you have a point here. For small stuff yeah it might seem redundant; for really complex things it might be very useful.</p>
</div>",1603926462.0,,False,gafoaec,True,t3_jjopan,t1_gae871p,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gafoaec/,0,False,1,False,jjopan,Cplusplus,t5_2qh6x
1092,jedwardsol,"Use a member initialiser list

    Hero::Hero(string name,int health) : name{std::move(name)}, health{health}
    {
    }


When the class member and the parameter have the same name,  this does the right thing.","<div class=""md""><p>Use a member initialiser list</p>

<pre><code>Hero::Hero(string name,int health) : name{std::move(name)}, health{health}
{
}
</code></pre>

<p>When the class member and the parameter have the same name,  this does the right thing.</p>
</div>",1603897355.0,,False,gadx68e,False,t3_jjopan,t1_gaduiyr,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gadx68e/,1,False,6,False,jjopan,Cplusplus,t5_2qh6x
1093,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1603903681.0,,1606868367.0,gaealy1,False,t3_jjopan,t1_gaduiyr,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gaealy1/,1,False,3,False,jjopan,Cplusplus,t5_2qh6x
1094,upper_bound,"I'm not even sure your example compiles/works; I've never seen it used for non-static members in 15+ years in the language

  
If your intent is to be explicit that the variables are member variables, use `this`

    Hero::Hero(string name,int health) {
        this->name = name;
        this->health = health;
    }

Most coding styles generally opt to only use `this` when absolutely required, and rely on naming conventions if the author desires to make local and member variables easier to identify (examples, ""\_"", ""m\_"", Upper/lower-case first letter, etc.)","<div class=""md""><p>I&#39;m not even sure your example compiles/works; I&#39;ve never seen it used for non-static members in 15+ years in the language</p>

<p>If your intent is to be explicit that the variables are member variables, use <code>this</code></p>

<pre><code>Hero::Hero(string name,int health) {
    this-&gt;name = name;
    this-&gt;health = health;
}
</code></pre>

<p>Most coding styles generally opt to only use <code>this</code> when absolutely required, and rely on naming conventions if the author desires to make local and member variables easier to identify (examples, &quot;_&quot;, &quot;m_&quot;, Upper/lower-case first letter, etc.)</p>
</div>",1603897299.0,,False,gadx28v,False,t3_jjopan,t1_gaduiyr,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gadx28v/,1,False,4,False,jjopan,Cplusplus,t5_2qh6x
1095,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1603903484.0,,1606868368.0,gaea6ea,False,t3_jjopan,t1_gae4x70,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gaea6ea/,1,False,2,False,jjopan,Cplusplus,t5_2qh6x
1096,BlueSky4200,std::move is slightly over the top here. Compiler will optimize it anyway.,"<div class=""md""><p>std::move is slightly over the top here. Compiler will optimize it anyway.</p>
</div>",1603910387.0,,False,gaep6vp,False,t3_jjopan,t1_gadx68e,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gaep6vp/,1,False,0,False,jjopan,Cplusplus,t5_2qh6x
1097,TheDevilsAdvokaat,Hmm ...I'll think about that..,"<div class=""md""><p>Hmm ...I&#39;ll think about that..</p>
</div>",1603926548.0,,False,gafohc5,True,t3_jjopan,t1_gaealy1,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gafohc5/,0,False,1,False,jjopan,Cplusplus,t5_2qh6x
1098,TheDevilsAdvokaat,"It actually does work and compile in visual studio 2019.

But I prefer ""this."" as you showed. 

Thank you I have changed over.","<div class=""md""><p>It actually does work and compile in visual studio 2019.</p>

<p>But I prefer &quot;this.&quot; as you showed. </p>

<p>Thank you I have changed over.</p>
</div>",1603900920.0,,False,gae4mpk,True,t3_jjopan,t1_gadx28v,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gae4mpk/,0,False,2,False,jjopan,Cplusplus,t5_2qh6x
1099,TheDevilsAdvokaat,"So people are doing it!

Thanks...","<div class=""md""><p>So people are doing it!</p>

<p>Thanks...</p>
</div>",1603926496.0,,False,gafodvl,True,t3_jjopan,t1_gaea6ea,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gafodvl/,1,False,1,False,jjopan,Cplusplus,t5_2qh6x
1100,jedwardsol,"No it's not and no it won't.

https://godbolt.org/z/a149Wc","<div class=""md""><p>No it&#39;s not and no it won&#39;t.</p>

<p><a href=""https://godbolt.org/z/a149Wc"">https://godbolt.org/z/a149Wc</a></p>
</div>",1603911122.0,,False,gaeqr9n,False,t3_jjopan,t1_gaep6vp,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gaeqr9n/,0,False,3,False,jjopan,Cplusplus,t5_2qh6x
1101,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1603943246.0,,1606868367.0,gaghm30,False,t3_jjopan,t1_gafodvl,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gaghm30/,1,False,2,False,jjopan,Cplusplus,t5_2qh6x
1102,TheDevilsAdvokaat,"Apparently you're not the only one.

There have been a lot of interesting answers about this.","<div class=""md""><p>Apparently you&#39;re not the only one.</p>

<p>There have been a lot of interesting answers about this.</p>
</div>",1603959751.0,,False,gagzggv,True,t3_jjopan,t1_gaghm30,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gagzggv/,1,False,1,False,jjopan,Cplusplus,t5_2qh6x
1103,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1603985693.0,,1606868366.0,gahzgwy,False,t3_jjopan,t1_gagzggv,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gahzgwy/,1,False,2,False,jjopan,Cplusplus,t5_2qh6x
1104,TheDevilsAdvokaat,"Another good reason for me to stick to the standard then.

Thanks!","<div class=""md""><p>Another good reason for me to stick to the standard then.</p>

<p>Thanks!</p>
</div>",1603988345.0,,False,gai5427,True,t3_jjopan,t1_gahzgwy,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gai5427/,1,False,1,False,jjopan,Cplusplus,t5_2qh6x
1105,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1603988590.0,,1606868364.0,gai5n3p,False,t3_jjopan,t1_gai5427,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gai5n3p/,1,False,2,False,jjopan,Cplusplus,t5_2qh6x
1106,TheDevilsAdvokaat,"Thank you. I'll keep it in mind.

I may try it for a test.","<div class=""md""><p>Thank you. I&#39;ll keep it in mind.</p>

<p>I may try it for a test.</p>
</div>",1603997860.0,,False,gairtjc,True,t3_jjopan,t1_gai5n3p,/r/Cplusplus/comments/jjopan/noob_question_why_not_just_use_h_files_and_no_cpp/gairtjc/,0,False,1,False,jjopan,Cplusplus,t5_2qh6x
1107,realestLink,"Experts systems are so cool, but not so common. Nice to see one on here. 👍","<div class=""md""><p>Experts systems are so cool, but not so common. Nice to see one on here. 👍</p>
</div>",1558674986.0,,False,eolqy6p,False,t3_bscxpl,t3_bscxpl,/r/Cplusplus/comments/bscxpl/i_created_a_chatbot_from_scratch_in_c_based_on/eolqy6p/,1,False,3,False,bscxpl,Cplusplus,t5_2qh6x
1108,arjun1001,Thanks!,"<div class=""md""><p>Thanks!</p>
</div>",1558711784.0,,False,eonga8x,True,t3_bscxpl,t1_eolqy6p,/r/Cplusplus/comments/bscxpl/i_created_a_chatbot_from_scratch_in_c_based_on/eonga8x/,0,False,2,False,bscxpl,Cplusplus,t5_2qh6x
1109,meancoffeebeans,"11/10 trolling and I salute you for it.  This had me laughing.  

I too dream of an operating system written in C.  It will be a technical marvel.","<div class=""md""><p>11/10 trolling and I salute you for it.  This had me laughing.  </p>

<p>I too dream of an operating system written in C.  It will be a technical marvel.</p>
</div>",1642467467.0,,False,ht43uxo,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht43uxo/,1,False,61,False,s6fhxj,Cplusplus,t5_2qh6x
1110,,"I stopped reading after this line. ""I am very skilled at HTML programming, one of the most challenging languages out there!""","<div class=""md""><p>I stopped reading after this line. &quot;I am very skilled at HTML programming, one of the most challenging languages out there!&quot;</p>
</div>",1642467202.0,,False,ht438jc,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht438jc/,3,False,52,False,s6fhxj,Cplusplus,t5_2qh6x
1111,khleedril,You spend your talents wisely.,"<div class=""md""><p>You spend your talents wisely.</p>
</div>",1642455993.0,,False,ht3c7jz,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht3c7jz/,0,False,17,False,s6fhxj,Cplusplus,t5_2qh6x
1112,CheckeeShoes,All of these problems will be addressed in the next standard of C++ so you need not worry,"<div class=""md""><p>All of these problems will be addressed in the next standard of C++ so you need not worry</p>
</div>",1642457214.0,,False,ht3fbzn,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht3fbzn/,0,False,10,False,s6fhxj,Cplusplus,t5_2qh6x
1113,,This is the first time I've ever seen a programming related copy pasta. I think you've started something beautiful.,"<div class=""md""><p>This is the first time I&#39;ve ever seen a programming related copy pasta. I think you&#39;ve started something beautiful.</p>
</div>",1642471571.0,,False,ht4dg60,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht4dg60/,0,False,8,False,s6fhxj,Cplusplus,t5_2qh6x
1114,DasFrebier,took me a bit to to realize that youve written a beautiful shitpost,"<div class=""md""><p>took me a bit to to realize that youve written a beautiful shitpost</p>
</div>",1642456881.0,,False,ht3ehlk,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht3ehlk/,1,False,15,False,s6fhxj,Cplusplus,t5_2qh6x
1115,mdgagne87,Wait till C+2 is released.,"<div class=""md""><p>Wait till C+2 is released.</p>
</div>",1642466017.0,,False,ht40gmq,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht40gmq/,1,False,7,False,s6fhxj,Cplusplus,t5_2qh6x
1116,khedoros,lol,"<div class=""md""><p>lol</p>
</div>",1642455543.0,,False,ht3b1il,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht3b1il/,0,False,13,False,s6fhxj,Cplusplus,t5_2qh6x
1117,Sad-Grapefruit9996,Interesting read!,"<div class=""md""><p>Interesting read!</p>
</div>",1642456595.0,,False,ht3drkb,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht3drkb/,1,False,5,False,s6fhxj,Cplusplus,t5_2qh6x
1118,jtwalder,"Tool me way to long to realize this wasnt for real, got up to the C joke, and just thought the OP was just bad at research.","<div class=""md""><p>Tool me way to long to realize this wasnt for real, got up to the C joke, and just thought the OP was just bad at research.</p>
</div>",1642484503.0,,False,ht55o0g,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht55o0g/,1,False,3,False,s6fhxj,Cplusplus,t5_2qh6x
1119,atamicbomb,"In a serious note, is C++ faster? I’ve heard competing things and my understanding is in theory C is faster and in practice C++ is faster people the compiler optimization is better than most users can optimize C","<div class=""md""><p>In a serious note, is C++ faster? I’ve heard competing things and my understanding is in theory C is faster and in practice C++ is faster people the compiler optimization is better than most users can optimize C</p>
</div>",1642485618.0,,False,ht57ler,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht57ler/,2,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1120,Middlewarian,"I've been working on an on-line code C++ code generator for over 20 years.  In a smash-and-grab ""culture,"" it's difficult to overestimate the importance of services, especially free services.","<div class=""md""><p>I&#39;ve been working on an on-line code C++ code generator for over 20 years.  In a smash-and-grab &quot;culture,&quot; it&#39;s difficult to overestimate the importance of services, especially free services.</p>
</div>",1642521480.0,,False,ht6ufww,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht6ufww/,0,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1121,EatMyShortsPig,"I'm barely starting my C++ journey and hang out around here just to get acquainted with terms and the types of questions people ask.

Read the whole thing and then found out it was ""troll"" via comments.

Now I am re-reading to see if I can identify what the trolly aspects are.","<div class=""md""><p>I&#39;m barely starting my C++ journey and hang out around here just to get acquainted with terms and the types of questions people ask.</p>

<p>Read the whole thing and then found out it was &quot;troll&quot; via comments.</p>

<p>Now I am re-reading to see if I can identify what the trolly aspects are.</p>
</div>",1642530055.0,,False,ht7hjwf,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht7hjwf/,1,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1122,DanielMcLaury,">I'm a first year programming student at an Ivy League school

so is it UPenn or Dartmouth?","<div class=""md""><blockquote>
<p>I&#39;m a first year programming student at an Ivy League school</p>
</blockquote>

<p>so is it UPenn or Dartmouth?</p>
</div>",1642540926.0,,False,ht8b3gm,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht8b3gm/,0,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1123,,"A C++ copypasta, is finally here.","<div class=""md""><p>A C++ copypasta, is finally here.</p>
</div>",1642543642.0,,False,ht8ih7p,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht8ih7p/,0,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1124,,"Got immediately pissed off at “Hello Gentlemen, I’m a first year programming student at an Ivy League School…”","<div class=""md""><p>Got immediately pissed off at “Hello Gentlemen, I’m a first year programming student at an Ivy League School…”</p>
</div>",1642729555.0,,False,htjgqjl,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/htjgqjl/,1,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1125,RolandMT32,"I see that this is a humorous parody post, but I'm not sure I entirely get it..  For instance, I guess that ""glasses"" is in reference to ""classes"", but what is the significance of ""glasses""?  Also, the claim that C++ predates assembly ...

Just not sure if there's something I'm missing..?","<div class=""md""><p>I see that this is a humorous parody post, but I&#39;m not sure I entirely get it..  For instance, I guess that &quot;glasses&quot; is in reference to &quot;classes&quot;, but what is the significance of &quot;glasses&quot;?  Also, the claim that C++ predates assembly ...</p>

<p>Just not sure if there&#39;s something I&#39;m missing..?</p>
</div>",1642456843.0,,False,ht3ee33,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht3ee33/,2,False,3,False,s6fhxj,Cplusplus,t5_2qh6x
1126,ShinnyCaptian,"I stopped reading after ""ivy league school"" just gonna assume troll? Which is annoying because I hate C++ so much.","<div class=""md""><p>I stopped reading after &quot;ivy league school&quot; just gonna assume troll? Which is annoying because I hate C++ so much.</p>
</div>",1643292639.0,,False,hufun1s,False,t3_s6fhxj,t3_s6fhxj,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/hufun1s/,1,False,1,False,s6fhxj,Cplusplus,t5_2qh6x
1127,MattTheFlash,"I can't claim I wrote it, it's from the now-defunct [adequacy.org](https://adequacy.org) by the legendary Egg Troll. 

I did update the Visual Basic to Visual Basic for Applications. I was surprised it still exists in some form. This text is like 25 years old.","<div class=""md""><p>I can&#39;t claim I wrote it, it&#39;s from the now-defunct <a href=""https://adequacy.org"">adequacy.org</a> by the legendary Egg Troll. </p>

<p>I did update the Visual Basic to Visual Basic for Applications. I was surprised it still exists in some form. This text is like 25 years old.</p>
</div>",1642468174.0,,False,ht45gtp,True,t3_s6fhxj,t1_ht43uxo,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht45gtp/,1,False,18,False,s6fhxj,Cplusplus,t5_2qh6x
1128,d0rf47,literally cant tell if op is trolling in the post this line legit made me lol,"<div class=""md""><p>literally cant tell if op is trolling in the post this line legit made me lol</p>
</div>",1642468790.0,,False,ht46wm2,False,t3_s6fhxj,t1_ht438jc,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht46wm2/,0,False,17,False,s6fhxj,Cplusplus,t5_2qh6x
1129,MattTheFlash,You can bring a horse to water but you can't stay in the kitchen,"<div class=""md""><p>You can bring a horse to water but you can&#39;t stay in the kitchen</p>
</div>",1642468038.0,,False,ht455mm,True,t3_s6fhxj,t1_ht438jc,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht455mm/,1,False,12,False,s6fhxj,Cplusplus,t5_2qh6x
1130,jk_luigi,"They talked about still learning VBA in school and I went along with it, they talked about moving into C++ and I thought it was weird seeing how this post is so long but they didn’t start the class.

THEN op mentioned “html, one of the most challenging languages of them all” and I knew this was a troll. 😹😹","<div class=""md""><p>They talked about still learning VBA in school and I went along with it, they talked about moving into C++ and I thought it was weird seeing how this post is so long but they didn’t start the class.</p>

<p>THEN op mentioned “html, one of the most challenging languages of them all” and I knew this was a troll. 😹😹</p>
</div>",1642497448.0,,False,ht5o5jy,False,t3_s6fhxj,t1_ht438jc,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht5o5jy/,0,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1131,MattTheFlash,A classic from adequacy.org which is now defunct,"<div class=""md""><p>A classic from adequacy.org which is now defunct</p>
</div>",1642457380.0,,False,ht3fr9m,True,t3_s6fhxj,t1_ht3ehlk,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht3fr9m/,0,False,5,False,s6fhxj,Cplusplus,t5_2qh6x
1132,MattTheFlash,you mean C+++,"<div class=""md""><p>you mean C+++</p>
</div>",1642472614.0,,False,ht4fyy6,True,t3_s6fhxj,t1_ht40gmq,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht4fyy6/,1,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1133,MattTheFlash,I'm very happy that I have been able to inform those who require guidance to master-level programming skills.,"<div class=""md""><p>I&#39;m very happy that I have been able to inform those who require guidance to master-level programming skills.</p>
</div>",1642468654.0,,False,ht46l55,True,t3_s6fhxj,t1_ht3drkb,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht46l55/,0,False,3,False,s6fhxj,Cplusplus,t5_2qh6x
1134,atamicbomb,"At saying html was a “hard programming language”, I knew it was a joke or he was an idiot","<div class=""md""><p>At saying html was a “hard programming language”, I knew it was a joke or he was an idiot</p>
</div>",1642485485.0,,False,ht57dcq,False,t3_s6fhxj,t1_ht55o0g,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht57dcq/,0,False,6,False,s6fhxj,Cplusplus,t5_2qh6x
1135,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1642492606.0,,False,ht5i00i,False,t3_s6fhxj,t1_ht57ler,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht5i00i/,1,False,3,False,s6fhxj,Cplusplus,t5_2qh6x
1136,MattTheFlash,I can assure you with OOPS methodology it becomes quite clear,"<div class=""md""><p>I can assure you with OOPS methodology it becomes quite clear</p>
</div>",1642487877.0,,False,ht5b7jq,True,t3_s6fhxj,t1_ht57ler,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht5b7jq/,1,False,1,False,s6fhxj,Cplusplus,t5_2qh6x
1137,MattTheFlash,I'm always happy to pass down my knowledge as a master coder and hacker to my lessers.,"<div class=""md""><p>I&#39;m always happy to pass down my knowledge as a master coder and hacker to my lessers.</p>
</div>",1642530775.0,,False,ht7jhxt,True,t3_s6fhxj,t1_ht7hjwf,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht7jhxt/,1,False,1,False,s6fhxj,Cplusplus,t5_2qh6x
1138,MattTheFlash,"Well look, you shouldn't be jealous of my master level coding and hacking skills. Just because I have a trust fund doesn't make me any different than a lesser programmer like yourself.","<div class=""md""><p>Well look, you shouldn&#39;t be jealous of my master level coding and hacking skills. Just because I have a trust fund doesn&#39;t make me any different than a lesser programmer like yourself.</p>
</div>",1642731480.0,,False,htjl5ks,True,t3_s6fhxj,t1_htjgqjl,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/htjl5ks/,0,False,1,False,s6fhxj,Cplusplus,t5_2qh6x
1139,khedoros,"> Just not sure if there's something I'm missing..?

You may be taking it too seriously?

> RolandMT32

Great. Now I'm listening to Ultima Underworld soundtrack comparisons.","<div class=""md""><blockquote>
<p>Just not sure if there&#39;s something I&#39;m missing..?</p>
</blockquote>

<p>You may be taking it too seriously?</p>

<blockquote>
<p>RolandMT32</p>
</blockquote>

<p>Great. Now I&#39;m listening to Ultima Underworld soundtrack comparisons.</p>
</div>",1642458084.0,,False,ht3hiqy,False,t3_s6fhxj,t1_ht3ee33,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht3hiqy/,0,False,4,False,s6fhxj,Cplusplus,t5_2qh6x
1140,easedownripley,"The narrator thinks they are an expert, but are unintentionally betraying their ignorance by revealing that they think classes are called glasses. Probably because they misheard it.","<div class=""md""><p>The narrator thinks they are an expert, but are unintentionally betraying their ignorance by revealing that they think classes are called glasses. Probably because they misheard it.</p>
</div>",1642460569.0,,False,ht3nnvf,False,t3_s6fhxj,t1_ht3ee33,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht3nnvf/,1,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1141,MattTheFlash,As a master programmer and hacker I can only provide you with breadcrumbs to point you in the right direction,"<div class=""md""><p>As a master programmer and hacker I can only provide you with breadcrumbs to point you in the right direction</p>
</div>",1643300186.0,,False,hugdlh8,True,t3_s6fhxj,t1_hufun1s,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/hugdlh8/,0,False,1,False,s6fhxj,Cplusplus,t5_2qh6x
1142,,"Ha! I nailed it. A copy pasta. 

I love that you posted it in this sub.","<div class=""md""><p>Ha! I nailed it. A copy pasta. </p>

<p>I love that you posted it in this sub.</p>
</div>",1642471657.0,,False,ht4dnks,False,t3_s6fhxj,t1_ht45gtp,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht4dnks/,0,False,3,False,s6fhxj,Cplusplus,t5_2qh6x
1143,Emmeeilop,A word of a true poet.,"<div class=""md""><p>A word of a true poet.</p>
</div>",1657481343.0,,False,ifmqsd3,False,t3_s6fhxj,t1_ht455mm,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ifmqsd3/,0,False,1,False,s6fhxj,Cplusplus,t5_2qh6x
1144,ISvengali,"Close, but its C++++","<div class=""md""><p>Close, but its C++++</p>
</div>",1642476752.0,,False,ht4pxlm,False,t3_s6fhxj,t1_ht4fyy6,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht4pxlm/,2,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1145,atamicbomb,Thank you!,"<div class=""md""><p>Thank you!</p>
</div>",1642512805.0,,False,ht6a36v,False,t3_s6fhxj,t1_ht5i00i,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht6a36v/,0,False,3,False,s6fhxj,Cplusplus,t5_2qh6x
1146,atamicbomb,Isn’t OOP simply an abstraction of procedural programming?,"<div class=""md""><p>Isn’t OOP simply an abstraction of procedural programming?</p>
</div>",1642512849.0,,False,ht6a6cc,False,t3_s6fhxj,t1_ht5b7jq,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht6a6cc/,1,False,1,False,s6fhxj,Cplusplus,t5_2qh6x
1147,EatMyShortsPig,"Haha very nice. I take it as a learning experience anyways, so thank you for the lesson!","<div class=""md""><p>Haha very nice. I take it as a learning experience anyways, so thank you for the lesson!</p>
</div>",1642530851.0,,False,ht7jp8k,False,t3_s6fhxj,t1_ht7jhxt,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht7jp8k/,0,False,1,False,s6fhxj,Cplusplus,t5_2qh6x
1148,MattTheFlash,How dare you. As a master programmer I find it both abhorrent and outrageous that you would claim to make such a statement.,"<div class=""md""><p>How dare you. As a master programmer I find it both abhorrent and outrageous that you would claim to make such a statement.</p>
</div>",1642468598.0,,False,ht46gf4,True,t3_s6fhxj,t1_ht3nnvf,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht46gf4/,0,False,6,False,s6fhxj,Cplusplus,t5_2qh6x
1149,Null_cz,"Yeah but you have the pluses written wrongly they are not four in a row, but rather arranged in a 2x2 grid, looking like

++

++

Making it
C#","<div class=""md""><p>Yeah but you have the pluses written wrongly they are not four in a row, but rather arranged in a 2x2 grid, looking like</p>

<p>++</p>

<p>++</p>

<p>Making it
C#</p>
</div>",1642507759.0,,1642507993.0,ht61iwo,False,t3_s6fhxj,t1_ht4pxlm,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht61iwo/,2,False,7,False,s6fhxj,Cplusplus,t5_2qh6x
1150,jtwalder,"These are syntax errors, its C+=2","<div class=""md""><p>These are syntax errors, its C+=2</p>
</div>",1642484444.0,,False,ht55kag,False,t3_s6fhxj,t1_ht4pxlm,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht55kag/,0,False,3,False,s6fhxj,Cplusplus,t5_2qh6x
1151,MattTheFlash,We are going over procedural programming next semester i expect it will be remedial since i am already a master level coder and hacker,"<div class=""md""><p>We are going over procedural programming next semester i expect it will be remedial since i am already a master level coder and hacker</p>
</div>",1642520703.0,,False,ht6sedx,True,t3_s6fhxj,t1_ht6a6cc,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht6sedx/,0,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1152,ISvengali,"
C#, as much as I like it, isnt really a child or replacement for C++.  Its missing too many things.  The biggest being RAII (using comes close but not quite close enough).  

So, C++'s replacement would be more C++, or (C++)++.","<div class=""md""><p>C#, as much as I like it, isnt really a child or replacement for C++.  Its missing too many things.  The biggest being RAII (using comes close but not quite close enough).  </p>

<p>So, C++&#39;s replacement would be more C++, or (C++)++.</p>
</div>",1642526804.0,,False,ht78n08,False,t3_s6fhxj,t1_ht61iwo,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/ht78n08/,0,False,2,False,s6fhxj,Cplusplus,t5_2qh6x
1153,ProgrammingDragon,"C#... Ha! That is just Mr. Gates WISH he could develop something new... And failed again... He copied Windows from Apple's, who stole it from Xerox. He attempted to put his name on C, with his attempt at C#. Then there was an attempt with java, with J#... Thank God that was fought over in the courts and he lost... Ahhh, Billy, when will you ever learn?","<div class=""md""><p>C#... Ha! That is just Mr. Gates WISH he could develop something new... And failed again... He copied Windows from Apple&#39;s, who stole it from Xerox. He attempted to put his name on C, with his attempt at C#. Then there was an attempt with java, with J#... Thank God that was fought over in the courts and he lost... Ahhh, Billy, when will you ever learn?</p>
</div>",1643268820.0,,False,hueuuxf,False,t3_s6fhxj,t1_ht61iwo,/r/Cplusplus/comments/s6fhxj/time_to_retire_c/hueuuxf/,0,False,1,False,s6fhxj,Cplusplus,t5_2qh6x
1154,Syracuss,"That's really sad, defacing a public programming resource just because of a religious attachment to a programming language.

I have never seen something so boorish, defacing a wiki targetted and maintained by professional people for free which just aims to be an information resource. I hope they are treated by others in their chosen career with as much care and respect as they display here.","<div class=""md""><p>That&#39;s really sad, defacing a public programming resource just because of a religious attachment to a programming language.</p>

<p>I have never seen something so boorish, defacing a wiki targetted and maintained by professional people for free which just aims to be an information resource. I hope they are treated by others in their chosen career with as much care and respect as they display here.</p>
</div>",1686906943.0,,False,jobwf5v,False,t3_14aiwqj,t3_14aiwqj,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jobwf5v/,0,False,57,False,14aiwqj,Cplusplus,t5_2qh6x
1155,plutoniator,Average unemployed rust programmer,"<div class=""md""><p>Average unemployed rust programmer</p>
</div>",1686890935.0,,False,jobcdr2,False,t3_14aiwqj,t3_14aiwqj,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jobcdr2/,0,False,72,False,14aiwqj,Cplusplus,t5_2qh6x
1156,,"I am looking at regex library right now and am shocked to see this as well.

https://preview.redd.it/4kizplgm4a6b1.png?width=1277&format=png&auto=webp&s=09014067dfcfb762c2c7d382e1c9ebaecdbf3f6f

(link: [https://en.cppreference.com/w/](https://en.cppreference.com/w/))  
What does that even mean!?","<div class=""md""><p>I am looking at regex library right now and am shocked to see this as well.</p>

<p><a href=""https://preview.redd.it/4kizplgm4a6b1.png?width=1277&amp;format=png&amp;auto=webp&amp;s=09014067dfcfb762c2c7d382e1c9ebaecdbf3f6f"">https://preview.redd.it/4kizplgm4a6b1.png?width=1277&amp;format=png&amp;auto=webp&amp;s=09014067dfcfb762c2c7d382e1c9ebaecdbf3f6f</a></p>

<p>(link: <a href=""https://en.cppreference.com/w/"">https://en.cppreference.com/w/</a>)<br/>
What does that even mean!?</p>
</div>",1686877489.0,,False,joanxq9,False,t3_14aiwqj,t3_14aiwqj,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/joanxq9/,1,False,25,False,14aiwqj,Cplusplus,t5_2qh6x
1157,DebuggingPanda,"As someone from the Rust community: sorry for this idiot. As other comments already said, this is just childish and stupid. I’m sure virtually everyone from the Rust community would agree that this is dumb.","<div class=""md""><p>As someone from the Rust community: sorry for this idiot. As other comments already said, this is just childish and stupid. I’m sure virtually everyone from the Rust community would agree that this is dumb.</p>
</div>",1686915364.0,,False,joc7hqx,False,t3_14aiwqj,t3_14aiwqj,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/joc7hqx/,1,False,28,False,14aiwqj,Cplusplus,t5_2qh6x
1158,Background_Newt_8065,"Where should he write elsewhere, given the little amount of production code using rust","<div class=""md""><p>Where should he write elsewhere, given the little amount of production code using rust</p>
</div>",1686909184.0,,False,jobyzy9,False,t3_14aiwqj,t3_14aiwqj,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jobyzy9/,0,False,9,False,14aiwqj,Cplusplus,t5_2qh6x
1159,Brigapes,This just seems extremely childish. Probably by some student who never worked a day in his life.,"<div class=""md""><p>This just seems extremely childish. Probably by some student who never worked a day in his life.</p>
</div>",1686909728.0,,False,jobznfx,False,t3_14aiwqj,t3_14aiwqj,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jobznfx/,0,False,18,False,14aiwqj,Cplusplus,t5_2qh6x
1160,FreeQuant,"This is pretty funny...

https://preview.redd.it/uh0ocdoj8a6b1.png?width=1921&format=png&auto=webp&s=2dd9d6dcf71e4ca124eaa5fa10501006cb752adf","<div class=""md""><p>This is pretty funny...</p>

<p><a href=""https://preview.redd.it/uh0ocdoj8a6b1.png?width=1921&amp;format=png&amp;auto=webp&amp;s=2dd9d6dcf71e4ca124eaa5fa10501006cb752adf"">https://preview.redd.it/uh0ocdoj8a6b1.png?width=1921&amp;format=png&amp;auto=webp&amp;s=2dd9d6dcf71e4ca124eaa5fa10501006cb752adf</a></p>
</div>",1686878735.0,,False,joaqdin,True,t3_14aiwqj,t3_14aiwqj,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/joaqdin/,1,False,14,False,14aiwqj,Cplusplus,t5_2qh6x
1161,Creapermann,It seems like it is fixed now again,"<div class=""md""><p>It seems like it is fixed now again</p>
</div>",1686891207.0,,False,jobcsnc,False,t3_14aiwqj,t3_14aiwqj,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jobcsnc/,0,False,9,False,14aiwqj,Cplusplus,t5_2qh6x
1162,Ikkepop,This is how wars are started...,"<div class=""md""><p>This is how wars are started...</p>
</div>",1686897154.0,,False,jobky0b,False,t3_14aiwqj,t3_14aiwqj,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jobky0b/,1,False,10,False,14aiwqj,Cplusplus,t5_2qh6x
1163,,[removed],"<div class=""md""><p>[removed]</p>
</div>",1686945620.0,,1686946350.0,joe30sw,False,t3_14aiwqj,t3_14aiwqj,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/joe30sw/,1,False,1,False,14aiwqj,Cplusplus,t5_2qh6x
1164,FreeQuant,It seems like the site was hacked or something.,"<div class=""md""><p>It seems like the site was hacked or something.</p>
</div>",1686877756.0,,False,joaogjl,True,t3_14aiwqj,t1_joanxq9,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/joaogjl/,1,False,24,False,14aiwqj,Cplusplus,t5_2qh6x
1165,Brigapes,"It concerns me people refering to ""rust community""

What community? It's a programming language, a tool. It's like saying a hammer community or a power drill community, i dont understand why there needs to be a community?","<div class=""md""><p>It concerns me people refering to &quot;rust community&quot;</p>

<p>What community? It&#39;s a programming language, a tool. It&#39;s like saying a hammer community or a power drill community, i dont understand why there needs to be a community?</p>
</div>",1686931592.0,,False,jod5pde,False,t3_14aiwqj,t1_joc7hqx,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jod5pde/,3,False,-6,False,14aiwqj,Cplusplus,t5_2qh6x
1166,,"In the meantime, I am going for:

[https://en.cppreference.com/w/Cppreference:Archives](https://en.cppreference.com/w/Cppreference:Archives)

To download out the archives first, just to be safe (suppose the link still works).","<div class=""md""><p>In the meantime, I am going for:</p>

<p><a href=""https://en.cppreference.com/w/Cppreference:Archives"">https://en.cppreference.com/w/Cppreference:Archives</a></p>

<p>To download out the archives first, just to be safe (suppose the link still works).</p>
</div>",1686879166.0,,False,joar78d,False,t3_14aiwqj,t1_joaqdin,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/joar78d/,0,False,17,False,14aiwqj,Cplusplus,t5_2qh6x
1167,Benilda-Key,"I am fine with a C++ versus Rust war, as long as it is fought with water guns or Nerf guns. Please no paint ball guns. I do not want to ruin my clothes. 

BTW, C++ will win.","<div class=""md""><p>I am fine with a C++ versus Rust war, as long as it is fought with water guns or Nerf guns. Please no paint ball guns. I do not want to ruin my clothes. </p>

<p>BTW, C++ will win.</p>
</div>",1686928186.0,,1687547415.0,jocxjf5,False,t3_14aiwqj,t1_jobky0b,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jocxjf5/,3,False,6,False,14aiwqj,Cplusplus,t5_2qh6x
1168,Cplusplus-ModTeam,"**Your submission has been removed.** This is because it was determined to be a nuisance and violated [Rule 1](https://www.reddit.com/r/Cplusplus/comments/122wnqy/rcplusplus_rule_updates/).

If you would like to discuss this action further or believe this removal was in error, please [message us through ModMail](https://www.reddit.com/message/compose?to=/r/Cplusplus).

~ CPlusPlus Moderation Team","<div class=""md""><p><strong>Your submission has been removed.</strong> This is because it was determined to be a nuisance and violated <a href=""https://www.reddit.com/r/Cplusplus/comments/122wnqy/rcplusplus_rule_updates/"">Rule 1</a>.</p>

<p>If you would like to discuss this action further or believe this removal was in error, please <a href=""https://www.reddit.com/message/compose?to=/r/Cplusplus"">message us through ModMail</a>.</p>

<p>~ CPlusPlus Moderation Team</p>
</div>",1686947209.0,moderator,False,joe6rmm,False,t3_14aiwqj,t1_joe30sw,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/joe6rmm/,0,False,2,False,14aiwqj,Cplusplus,t5_2qh6x
1169,FrancisStokes,It's a wiki so it's publicly editable,"<div class=""md""><p>It&#39;s a wiki so it&#39;s publicly editable</p>
</div>",1686893383.0,,False,jobfxpb,False,t3_14aiwqj,t1_joaogjl,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jobfxpb/,0,False,22,False,14aiwqj,Cplusplus,t5_2qh6x
1170,CJKay93,"> It concerns me people refering to ""rust community""

... he says in /r/Cplusplus...

> a community for 15 years","<div class=""md""><blockquote>
<p>It concerns me people refering to &quot;rust community&quot;</p>
</blockquote>

<p>... he says in <a href=""/r/Cplusplus"">/r/Cplusplus</a>...</p>

<blockquote>
<p>a community for 15 years</p>
</blockquote>
</div>",1686935943.0,,False,jodg635,False,t3_14aiwqj,t1_jod5pde,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jodg635/,1,False,10,False,14aiwqj,Cplusplus,t5_2qh6x
1171,SupermanLeRetour,What a weird stance to have.,"<div class=""md""><p>What a weird stance to have.</p>
</div>",1686936895.0,,False,jodigg5,False,t3_14aiwqj,t1_jod5pde,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jodigg5/,0,False,7,False,14aiwqj,Cplusplus,t5_2qh6x
1172,DebuggingPanda,"There doesn’t need to be a community, u are right. But there is, which contains a subset of people who are using Rust. Of course u don’t need to participate in any of that to use a tool like Rust or a hammer. But you can.","<div class=""md""><p>There doesn’t need to be a community, u are right. But there is, which contains a subset of people who are using Rust. Of course u don’t need to participate in any of that to use a tool like Rust or a hammer. But you can.</p>
</div>",1686933066.0,,False,jod99p6,False,t3_14aiwqj,t1_jod5pde,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jod99p6/,2,False,1,False,14aiwqj,Cplusplus,t5_2qh6x
1173,Middlewarian,"C++ has suffered losses to a number of languages, including Rust.  I've been pursuing on-line code generation as a way to help C++ regain some of ground it has lost over the years.","<div class=""md""><p>C++ has suffered losses to a number of languages, including Rust.  I&#39;ve been pursuing on-line code generation as a way to help C++ regain some of ground it has lost over the years.</p>
</div>",1686975131.0,,False,jofnre3,False,t3_14aiwqj,t1_jocxjf5,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jofnre3/,0,False,3,False,14aiwqj,Cplusplus,t5_2qh6x
1174,,Segmentation fault,"<div class=""md""><p>Segmentation fault</p>
</div>",1686942686.0,,False,jodw3kj,False,t3_14aiwqj,t1_jocxjf5,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jodw3kj/,0,False,4,False,14aiwqj,Cplusplus,t5_2qh6x
1175,,[removed],"<div class=""md""><p>[removed]</p>
</div>",1687407918.0,,False,jp1xydv,False,t3_14aiwqj,t1_jocxjf5,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jp1xydv/,1,False,1,False,14aiwqj,Cplusplus,t5_2qh6x
1176,Brigapes,"""community""

You are correct, we all hang out and talk about how great cpluplus is and circle jerk each other until we pass out","<div class=""md""><p>&quot;community&quot;</p>

<p>You are correct, we all hang out and talk about how great cpluplus is and circle jerk each other until we pass out</p>
</div>",1687173239.0,,False,joovxua,False,t3_14aiwqj,t1_jodg635,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/joovxua/,0,False,1,False,14aiwqj,Cplusplus,t5_2qh6x
1177,Dar_Mas,"if i am being honest the community is one of the few things preventing me from learning rust as they have been insufferable here and on SOF in my experience.

Do you have recommendations for drier documentation/learning materials like cpp reference for rust?","<div class=""md""><p>if i am being honest the community is one of the few things preventing me from learning rust as they have been insufferable here and on SOF in my experience.</p>

<p>Do you have recommendations for drier documentation/learning materials like cpp reference for rust?</p>
</div>",1686939635.0,,False,jodoye0,False,t3_14aiwqj,t1_jod99p6,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jodoye0/,0,False,2,False,14aiwqj,Cplusplus,t5_2qh6x
1178,Brigapes,"I have the problem with ""community"" aspect not the actual tool","<div class=""md""><p>I have the problem with &quot;community&quot; aspect not the actual tool</p>
</div>",1687173171.0,,False,joovugv,False,t3_14aiwqj,t1_jod99p6,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/joovugv/,0,False,1,False,14aiwqj,Cplusplus,t5_2qh6x
1179,Cplusplus-ModTeam,"**Your submission has been removed.** This is because a similar topic has been posted too recently and this was considered low effort and violated [Rule 2](https://www.reddit.com/r/Cplusplus/comments/122wnqy/rcplusplus_rule_updates/).

We encourage you to [search r/CPlusPlus](https://www.reddit.com/r/Cplusplus/search/) for topics related to your post/comment.

If you would like to discuss this action further or believe this removal was in error, please [message us through ModMail](https://www.reddit.com/message/compose?to=/r/Cplusplus).

~ CPlusPlus Moderation Team","<div class=""md""><p><strong>Your submission has been removed.</strong> This is because a similar topic has been posted too recently and this was considered low effort and violated <a href=""https://www.reddit.com/r/Cplusplus/comments/122wnqy/rcplusplus_rule_updates/"">Rule 2</a>.</p>

<p>We encourage you to <a href=""https://www.reddit.com/r/Cplusplus/search/"">search r/CPlusPlus</a> for topics related to your post/comment.</p>

<p>If you would like to discuss this action further or believe this removal was in error, please <a href=""https://www.reddit.com/message/compose?to=/r/Cplusplus"">message us through ModMail</a>.</p>

<p>~ CPlusPlus Moderation Team</p>
</div>",1687411261.0,moderator,False,jp236t2,False,t3_14aiwqj,t1_jp1xydv,/r/Cplusplus/comments/14aiwqj/cppreferencecom_saying_please_migrate_to_rust/jp236t2/,0,False,1,False,14aiwqj,Cplusplus,t5_2qh6x
1180,Shidell,"Cool demo!  


What take aways have you gleaned from the book and your experience in developing this demo? What surprised you? Didn't surprise you?  


Care to elaborate on the technology you're leveraging here? Is it purely CPU, or are you taking advantage of the GPU (even in non-DXR methods) to accelerate certain functions (for example, C++ AMP?)  


How much parallelization are you using? What sort of difference in performance do you see if you, for example, restrict it to single-threaded, or 2 threads, 4 threads, 8, etc.?  


I think this is particularly fascinating as I'm interested in looking for a method to accelerate ray tracing via a ""good enough"" approximation (vs. completely, accurately calculating each ray), which is massively processor intensive.   


Do you recommend the book?","<div class=""md""><p>Cool demo!  </p>

<p>What take aways have you gleaned from the book and your experience in developing this demo? What surprised you? Didn&#39;t surprise you?  </p>

<p>Care to elaborate on the technology you&#39;re leveraging here? Is it purely CPU, or are you taking advantage of the GPU (even in non-DXR methods) to accelerate certain functions (for example, C++ AMP?)  </p>

<p>How much parallelization are you using? What sort of difference in performance do you see if you, for example, restrict it to single-threaded, or 2 threads, 4 threads, 8, etc.?  </p>

<p>I think this is particularly fascinating as I&#39;m interested in looking for a method to accelerate ray tracing via a &quot;good enough&quot; approximation (vs. completely, accurately calculating each ray), which is massively processor intensive.   </p>

<p>Do you recommend the book?</p>
</div>",1560369005.0,,False,eqxgf6k,False,t3_bzqfpt,t3_bzqfpt,/r/Cplusplus/comments/bzqfpt/first_attempt_at_ray_tracing/eqxgf6k/,0,False,3,False,bzqfpt,Cplusplus,t5_2qh6x
1181,bloowper,"Woow, nie demo","<div class=""md""><p>Woow, nie demo</p>
</div>",1560618981.0,,False,er983u3,False,t3_bzqfpt,t3_bzqfpt,/r/Cplusplus/comments/bzqfpt/first_attempt_at_ray_tracing/er983u3/,0,False,1,False,bzqfpt,Cplusplus,t5_2qh6x
1182,bloowper,Where is the code :-: I'm blind,"<div class=""md""><p>Where is the code :-: I&#39;m blind</p>
</div>",1560619070.0,,False,er98a4o,False,t3_bzqfpt,t3_bzqfpt,/r/Cplusplus/comments/bzqfpt/first_attempt_at_ray_tracing/er98a4o/,0,False,1,False,bzqfpt,Cplusplus,t5_2qh6x
1183,XeroPoints,Should throw this to /r/cpp and maybe /r/gamedev communities as well.,"<div class=""md""><p>Should throw this to <a href=""/r/cpp"">/r/cpp</a> and maybe <a href=""/r/gamedev"">/r/gamedev</a> communities as well.</p>
</div>",1618804415.0,,False,gv1luhv,False,t3_mtiimw,t3_mtiimw,/r/Cplusplus/comments/mtiimw/skyrim_together_reborn_multiplayer_project/gv1luhv/,1,False,4,False,mtiimw,Cplusplus,t5_2qh6x
1184,derofim,Is it peer to peer solution or client to server? P2P has cheating issues.,"<div class=""md""><p>Is it peer to peer solution or client to server? P2P has cheating issues.</p>
</div>",1618952102.0,,False,gv8xye9,False,t3_mtiimw,t3_mtiimw,/r/Cplusplus/comments/mtiimw/skyrim_together_reborn_multiplayer_project/gv8xye9/,1,False,1,False,mtiimw,Cplusplus,t5_2qh6x
1185,Merlins_RP_Corner,"I posted this in CCP and they took it down but will definitely try the other, thank you so much!","<div class=""md""><p>I posted this in CCP and they took it down but will definitely try the other, thank you so much!</p>
</div>",1618823016.0,,False,gv28p98,True,t3_mtiimw,t1_gv1luhv,/r/Cplusplus/comments/mtiimw/skyrim_together_reborn_multiplayer_project/gv28p98/,1,False,3,False,mtiimw,Cplusplus,t5_2qh6x
1186,Merlins_RP_Corner,"Either solution has cheating issues. The nature of the project is focused on co-op playthroughs of Skyrim, and players still have access to console commands. Skyrim Together doesn’t moderate that. It will mostly be up to private servers to deal with that ✌🏼","<div class=""md""><p>Either solution has cheating issues. The nature of the project is focused on co-op playthroughs of Skyrim, and players still have access to console commands. Skyrim Together doesn’t moderate that. It will mostly be up to private servers to deal with that ✌🏼</p>
</div>",1618952426.0,,False,gv8yqi4,True,t3_mtiimw,t1_gv8xye9,/r/Cplusplus/comments/mtiimw/skyrim_together_reborn_multiplayer_project/gv8yqi4/,0,False,1,False,mtiimw,Cplusplus,t5_2qh6x
1187,XeroPoints,True I think CPP community has weird guidelines for posts. I will be following the project as I did play skyrim together for a week last year but encountered too many disconnects to be enjoyable with a mate. I may look at helping to code but I may not. Too many priorities and own projects.,"<div class=""md""><p>True I think CPP community has weird guidelines for posts. I will be following the project as I did play skyrim together for a week last year but encountered too many disconnects to be enjoyable with a mate. I may look at helping to code but I may not. Too many priorities and own projects.</p>
</div>",1618831791.0,,False,gv2ixhz,False,t3_mtiimw,t1_gv28p98,/r/Cplusplus/comments/mtiimw/skyrim_together_reborn_multiplayer_project/gv2ixhz/,1,False,2,False,mtiimw,Cplusplus,t5_2qh6x
1188,Merlins_RP_Corner,Of course! If you’re ever down to work on it just shoot me a message on Discord: Merlin#6019 and we can get you up to speed.,"<div class=""md""><p>Of course! If you’re ever down to work on it just shoot me a message on Discord: Merlin#6019 and we can get you up to speed.</p>
</div>",1618833543.0,,False,gv2lftq,True,t3_mtiimw,t1_gv2ixhz,/r/Cplusplus/comments/mtiimw/skyrim_together_reborn_multiplayer_project/gv2lftq/,0,False,1,False,mtiimw,Cplusplus,t5_2qh6x
1189,Ren_Lol,"My first project was a clock, alarm clock, stopwatch, and timer. Then implementing it in a simple switch statement shell was the first project I attempted. Next I suggest trying to make an address book using AVL or DLL data structures and try to keep the Big O notation as low as you can in your insert, deletion and traversal. Then make an ATM/Banking System that allows for deposit, withdraws, balance transfers, and use a ADT to store the customer's information (Again if you want to challenge yourself use the lowest Big O). Good low level challenges.","<div class=""md""><p>My first project was a clock, alarm clock, stopwatch, and timer. Then implementing it in a simple switch statement shell was the first project I attempted. Next I suggest trying to make an address book using AVL or DLL data structures and try to keep the Big O notation as low as you can in your insert, deletion and traversal. Then make an ATM/Banking System that allows for deposit, withdraws, balance transfers, and use a ADT to store the customer&#39;s information (Again if you want to challenge yourself use the lowest Big O). Good low level challenges.</p>
</div>",1519793314.0,,False,duy2lb8,False,t3_80sllf,t3_80sllf,/r/Cplusplus/comments/80sllf/c_projects_for_beginners/duy2lb8/,0,False,8,False,80sllf,Cplusplus,t5_2qh6x
1190,cubs5105,"http://www.cplusplus.com/forum/articles/12974/
This link should help you find what you’re looking for","<div class=""md""><p><a href=""http://www.cplusplus.com/forum/articles/12974/"">http://www.cplusplus.com/forum/articles/12974/</a>
This link should help you find what you’re looking for</p>
</div>",1519789175.0,,False,duxz1u2,False,t3_80sllf,t3_80sllf,/r/Cplusplus/comments/80sllf/c_projects_for_beginners/duxz1u2/,0,False,6,False,80sllf,Cplusplus,t5_2qh6x
1191,BoringHusband,Create a socket class from which you can build simple client/server and server/server applications and test it to destruction. It will not only teach you C++ but a good part of how the underlying system works in the area of networking.,"<div class=""md""><p>Create a socket class from which you can build simple client/server and server/server applications and test it to destruction. It will not only teach you C++ but a good part of how the underlying system works in the area of networking.</p>
</div>",1519796897.0,,False,duy53fz,False,t3_80sllf,t3_80sllf,/r/Cplusplus/comments/80sllf/c_projects_for_beginners/duy53fz/,0,False,4,False,80sllf,Cplusplus,t5_2qh6x
1192,FrozenFirebat,"http://www.codeabbey.com/ -- I learned programming using this site and google... the easiest solution to each successive problem will require you to use a technique that you likely haven't used in previous problems...  
  
For a little bit extra challenge / also make coding the exercises faster -- After about 7-8 problems, I realized that the Input and Output methods were always the same, but what you did with the data changed... so I researched how to read, manipulate, and write data to/from files, and I would just paste the input data into a txt file, run the program, which would output the answers into another txt file. All I had to do was change how the data was manipulated... which I did by just editing a class that contained that method.","<div class=""md""><p><a href=""http://www.codeabbey.com/"">http://www.codeabbey.com/</a> -- I learned programming using this site and google... the easiest solution to each successive problem will require you to use a technique that you likely haven&#39;t used in previous problems...  </p>

<p>For a little bit extra challenge / also make coding the exercises faster -- After about 7-8 problems, I realized that the Input and Output methods were always the same, but what you did with the data changed... so I researched how to read, manipulate, and write data to/from files, and I would just paste the input data into a txt file, run the program, which would output the answers into another txt file. All I had to do was change how the data was manipulated... which I did by just editing a class that contained that method.</p>
</div>",1519796618.0,,False,duy4wq3,False,t3_80sllf,t3_80sllf,/r/Cplusplus/comments/80sllf/c_projects_for_beginners/duy4wq3/,0,False,3,False,80sllf,Cplusplus,t5_2qh6x
1193,Spiderboydk,"If you like math, then the exercises on https://projecteuler.net/ might be of interest to you.","<div class=""md""><p>If you like math, then the exercises on <a href=""https://projecteuler.net/"">https://projecteuler.net/</a> might be of interest to you.</p>
</div>",1519851458.0,,False,duzb1la,False,t3_80sllf,t3_80sllf,/r/Cplusplus/comments/80sllf/c_projects_for_beginners/duzb1la/,0,False,2,False,80sllf,Cplusplus,t5_2qh6x
1194,rodrigocfd,An app which reads/writes names and phone numbers in a plain TXT file.,"<div class=""md""><p>An app which reads/writes names and phone numbers in a plain TXT file.</p>
</div>",1519828817.0,,False,duymbhb,False,t3_80sllf,t3_80sllf,/r/Cplusplus/comments/80sllf/c_projects_for_beginners/duymbhb/,0,False,1,False,80sllf,Cplusplus,t5_2qh6x
1195,takaci,a roguelike,"<div class=""md""><p>a roguelike</p>
</div>",1526916554.0,,False,dzc40jv,False,t3_80sllf,t3_80sllf,/r/Cplusplus/comments/80sllf/c_projects_for_beginners/dzc40jv/,0,False,1,False,80sllf,Cplusplus,t5_2qh6x
1196,,[deleted],"<div class=""md""><p>[deleted]</p>
</div>",1668852851.0,,False,iwylh8z,False,t3_yz81c9,t3_yz81c9,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/iwylh8z/,1,False,31,False,yz81c9,Cplusplus,t5_2qh6x
1197,no-sig-available,"Statistics...

I used to work for a company with lots of COBOL developers. Vacancies were never advertized, because COBOL developers aged 50+ just don't read ads.

You have to recruit in some other ways.","<div class=""md""><p>Statistics...</p>

<p>I used to work for a company with lots of COBOL developers. Vacancies were never advertized, because COBOL developers aged 50+ just don&#39;t read ads.</p>

<p>You have to recruit in some other ways.</p>
</div>",1668854915.0,,False,iwynqyu,False,t3_yz81c9,t3_yz81c9,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/iwynqyu/,0,False,23,False,yz81c9,Cplusplus,t5_2qh6x
1198,srynearson1,"Don’t know where you’re looking, because every time I search it seem all jobs require you to know all programming languages and frameworks for 5+ years","<div class=""md""><p>Don’t know where you’re looking, because every time I search it seem all jobs require you to know all programming languages and frameworks for 5+ years</p>
</div>",1668869179.0,,False,iwz97v6,False,t3_yz81c9,t3_yz81c9,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/iwz97v6/,0,False,10,False,yz81c9,Cplusplus,t5_2qh6x
1199,flautzr,"My automation company here in Berlin is desperately looking for c++ devs. If someone here is interested, send me a message","<div class=""md""><p>My automation company here in Berlin is desperately looking for c++ devs. If someone here is interested, send me a message</p>
</div>",1668887898.0,,False,ix0g2in,False,t3_yz81c9,t3_yz81c9,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/ix0g2in/,2,False,5,False,yz81c9,Cplusplus,t5_2qh6x
1200,TomDuhamel,"It's good that you are trying to find a job as a C++ programmer, because statistics is not your thing. The chart doesn't say anything about C++ being less popular in the USA, it just says that there are less openings. This might be bad for you, but it's a positive for the economy in your country.","<div class=""md""><p>It&#39;s good that you are trying to find a job as a C++ programmer, because statistics is not your thing. The chart doesn&#39;t say anything about C++ being less popular in the USA, it just says that there are less openings. This might be bad for you, but it&#39;s a positive for the economy in your country.</p>
</div>",1668852294.0,,False,iwykuzr,False,t3_yz81c9,t3_yz81c9,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/iwykuzr/,2,False,15,False,yz81c9,Cplusplus,t5_2qh6x
1201,__satanic__panic__,"Have you ever tried to google ""most popular programming languages""? 

Perhaps add the word ""chart"" to that google search?","<div class=""md""><p>Have you ever tried to google &quot;most popular programming languages&quot;? </p>

<p>Perhaps add the word &quot;chart&quot; to that google search?</p>
</div>",1668851892.0,,False,iwykeml,False,t3_yz81c9,t3_yz81c9,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/iwykeml/,0,False,3,False,yz81c9,Cplusplus,t5_2qh6x
1202,accuracy_frosty,As a C++ programmer going through college in Canada this gives me hope lol,"<div class=""md""><p>As a C++ programmer going through college in Canada this gives me hope lol</p>
</div>",1668887072.0,,False,ix0e5b4,False,t3_yz81c9,t3_yz81c9,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/ix0e5b4/,0,False,2,False,yz81c9,Cplusplus,t5_2qh6x
1203,Syracuss,"Depending on the job, it's not really advertised, you get scouted. Aside from my first job, I've never seen or even applied for an ad, it's always been recruiters reaching out to me.","<div class=""md""><p>Depending on the job, it&#39;s not really advertised, you get scouted. Aside from my first job, I&#39;ve never seen or even applied for an ad, it&#39;s always been recruiters reaching out to me.</p>
</div>",1668863694.0,,False,iwyzav8,False,t3_yz81c9,t3_yz81c9,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/iwyzav8/,0,False,1,False,yz81c9,Cplusplus,t5_2qh6x
1204,kittenhello99,"As a nuclear engineering student, I'm surprised they don't rename this major to c++ engineer...","<div class=""md""><p>As a nuclear engineering student, I&#39;m surprised they don&#39;t rename this major to c++ engineer...</p>
</div>",1668935664.0,,False,ix2vtk9,False,t3_yz81c9,t1_iwylh8z,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/ix2vtk9/,1,False,4,False,yz81c9,Cplusplus,t5_2qh6x
1205,javs194,Berlin has so many c++ postings lol,"<div class=""md""><p>Berlin has so many c++ postings lol</p>
</div>",1669970954.0,,False,iylo961,False,t3_yz81c9,t1_ix0g2in,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/iylo961/,0,False,1,False,yz81c9,Cplusplus,t5_2qh6x
1206,pratman242,Salary?,"<div class=""md""><p>Salary?</p>
</div>",1671137349.0,,False,j0ddjmr,False,t3_yz81c9,t1_ix0g2in,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/j0ddjmr/,1,False,1,False,yz81c9,Cplusplus,t5_2qh6x
1207,rodrigocfd,"> It's good that you are trying to find a job as a C++ programmer, because statistics is not your thing.

I chuckled.","<div class=""md""><blockquote>
<p>It&#39;s good that you are trying to find a job as a C++ programmer, because statistics is not your thing.</p>
</blockquote>

<p>I chuckled.</p>
</div>",1668858164.0,,False,iwyrjxp,False,t3_yz81c9,t1_iwykuzr,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/iwyrjxp/,0,False,11,False,yz81c9,Cplusplus,t5_2qh6x
1208,AlumiuN,"Not to mention that it sounds like the only data they have is from Linkedin which, unless it has exceptionally consistent adoption rates across the world, is unlikely to be a reliable source for international job markets as a whole.","<div class=""md""><p>Not to mention that it sounds like the only data they have is from Linkedin which, unless it has exceptionally consistent adoption rates across the world, is unlikely to be a reliable source for international job markets as a whole.</p>
</div>",1668854721.0,,False,iwynj49,False,t3_yz81c9,t1_iwykuzr,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/iwynj49/,0,False,8,False,yz81c9,Cplusplus,t5_2qh6x
1209,PrestonBannister,"OK, so this is somewhat disquieting. C++ and nuclear engineering is not a combination that I hoped to see. (And I do hope we make more use of nuclear power.)

Is this for design and modelling - more the theory side? Or is this for operational software - where safety is a primary concern?","<div class=""md""><p>OK, so this is somewhat disquieting. C++ and nuclear engineering is not a combination that I hoped to see. (And I do hope we make more use of nuclear power.)</p>

<p>Is this for design and modelling - more the theory side? Or is this for operational software - where safety is a primary concern?</p>
</div>",1669576103.0,,False,iy03q2e,False,t3_yz81c9,t1_ix2vtk9,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/iy03q2e/,0,False,2,False,yz81c9,Cplusplus,t5_2qh6x
1210,flautzr,"Obviously that depends on your skills, experience etc...but potentially something between 50 - 80k (my guess, I only know my own). Additionally a really nice company with interesting challenges, good atmosphere in an awesome city.","<div class=""md""><p>Obviously that depends on your skills, experience etc...but potentially something between 50 - 80k (my guess, I only know my own). Additionally a really nice company with interesting challenges, good atmosphere in an awesome city.</p>
</div>",1671141887.0,,False,j0dp4kc,False,t3_yz81c9,t1_j0ddjmr,/r/Cplusplus/comments/yz81c9/usa_lagging_for_c_jobs/j0dp4kc/,0,False,1,False,yz81c9,Cplusplus,t5_2qh6x
1211,,"There tends to be 1 way to succeed.  But many ways to fail.

So 0 tends to be the unique ""succeded"" code.

And non-zero codes are the near-infinite ways you can go wrong.","<div class=""md""><p>There tends to be 1 way to succeed.  But many ways to fail.</p>

<p>So 0 tends to be the unique &quot;succeded&quot; code.</p>

<p>And non-zero codes are the near-infinite ways you can go wrong.</p>
</div>",1664925914.0,,False,ir311oq,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir311oq/,2,False,64,False,xvticy,Cplusplus,t5_2qh6x
1212,QuentinUK,No news is good news.,"<div class=""md""><p>No news is good news.</p>
</div>",1664925518.0,,False,ir305mp,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir305mp/,1,False,38,False,xvticy,Cplusplus,t5_2qh6x
1213,flyingron,"This is a UNIXism.   ZERO means success, anything else is an error code on the failure.","<div class=""md""><p>This is a UNIXism.   ZERO means success, anything else is an error code on the failure.</p>
</div>",1664926935.0,,False,ir339x7,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir339x7/,1,False,22,False,xvticy,Cplusplus,t5_2qh6x
1214,D0ntLetTheCreatureIn,https://en.wikipedia.org/wiki/Exit_status,"<div class=""md""><p><a href=""https://en.wikipedia.org/wiki/Exit_status"">https://en.wikipedia.org/wiki/Exit_status</a></p>
</div>",1664925417.0,,False,ir2zxus,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir2zxus/,0,False,10,False,xvticy,Cplusplus,t5_2qh6x
1215,TheSkiGeek,"You're not returning a boolean true/false.  You're returning a numeric status code.  Convention on UNIX/POSIX is that for this kind of thing, returning 0 means ""success"" and any nonzero value is some kind of error.  `errno` works similarly, on a POSIX system all the defined error values will be nonzero.

There's nothing saying you *must* follow this convention, but if you write command line tools that don't do this you'll confuse people who try to use them.

Technically you should use EXIT_SUCCESS and EXIT_FAILURE if you aren't returning specific values, they should map to whatever the platform you compiled for expects as 'success' and some kind of 'generic failure'.","<div class=""md""><p>You&#39;re not returning a boolean true/false.  You&#39;re returning a numeric status code.  Convention on UNIX/POSIX is that for this kind of thing, returning 0 means &quot;success&quot; and any nonzero value is some kind of error.  <code>errno</code> works similarly, on a POSIX system all the defined error values will be nonzero.</p>

<p>There&#39;s nothing saying you <em>must</em> follow this convention, but if you write command line tools that don&#39;t do this you&#39;ll confuse people who try to use them.</p>

<p>Technically you should use EXIT_SUCCESS and EXIT_FAILURE if you aren&#39;t returning specific values, they should map to whatever the platform you compiled for expects as &#39;success&#39; and some kind of &#39;generic failure&#39;.</p>
</div>",1664946458.0,,1664946653.0,ir45fv7,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir45fv7/,0,False,19,False,xvticy,Cplusplus,t5_2qh6x
1216,EstablishmentBig7956,"It's like asking, where there any errors, 0 no","<div class=""md""><p>It&#39;s like asking, where there any errors, 0 no</p>
</div>",1664930193.0,,False,ir3a96z,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir3a96z/,1,False,6,False,xvticy,Cplusplus,t5_2qh6x
1217,android_queen,"Because it’s not a C++ thing!

The return value from main isn’t sending that value to another part of the program. It’s sending it back out to the operating system. You can think about it as the return value for the program (called the exit status). The operating system isn’t looking for a Boolean value. It’s looking for a meaningful status code. By convention, 0 means success, and anything else (usually negative) means failure. The value tells you what *kind* of failure, though this is less standard and often requires explicit documentation.","<div class=""md""><p>Because it’s not a C++ thing!</p>

<p>The return value from main isn’t sending that value to another part of the program. It’s sending it back out to the operating system. You can think about it as the return value for the program (called the exit status). The operating system isn’t looking for a Boolean value. It’s looking for a meaningful status code. By convention, 0 means success, and anything else (usually negative) means failure. The value tells you what <em>kind</em> of failure, though this is less standard and often requires explicit documentation.</p>
</div>",1664927640.0,,False,ir34se0,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir34se0/,0,False,8,False,xvticy,Cplusplus,t5_2qh6x
1218,,"This is C++ son, we don’t have falsey values, we have true or false.","<div class=""md""><p>This is C++ son, we don’t have falsey values, we have true or false.</p>
</div>",1664942572.0,,False,ir3z9xi,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir3z9xi/,1,False,4,False,xvticy,Cplusplus,t5_2qh6x
1219,Dan13l_N,"This is leftover from days where functions were returning error codes. 0 meant ""no errors"". Many functions are like that, for example `bind()` in [Berkeley sockets API](https://man.openbsd.org/bind.2).

I don't know when exactly the convention originated, but it's likely something quite old, before 1970's.","<div class=""md""><p>This is leftover from days where functions were returning error codes. 0 meant &quot;no errors&quot;. Many functions are like that, for example <code>bind()</code> in <a href=""https://man.openbsd.org/bind.2"">Berkeley sockets API</a>.</p>

<p>I don&#39;t know when exactly the convention originated, but it&#39;s likely something quite old, before 1970&#39;s.</p>
</div>",1664963448.0,,False,ir4pzuq,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir4pzuq/,1,False,4,False,xvticy,Cplusplus,t5_2qh6x
1220,killerHELIX,"Exit codes aren't just limited to 0 and 1 boolean values. Since you can go beyond that, you could think as 0 as the first entry in an array, where any numbers beyond that map to a specific error. Nice for debugging.

https://stackoverflow.com/a/2933855","<div class=""md""><p>Exit codes aren&#39;t just limited to 0 and 1 boolean values. Since you can go beyond that, you could think as 0 as the first entry in an array, where any numbers beyond that map to a specific error. Nice for debugging.</p>

<p><a href=""https://stackoverflow.com/a/2933855"">https://stackoverflow.com/a/2933855</a></p>
</div>",1664925631.0,,False,ir30ew2,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir30ew2/,0,False,2,False,xvticy,Cplusplus,t5_2qh6x
1221,dpacker780,"Think of exit code as an enumeration rather than true false, the more common practice, though you see exit(0) or return 0 often is to use EXIT_SUCCESS or EXIT_FAILURE. Or whatever convention is used by the OS.","<div class=""md""><p>Think of exit code as an enumeration rather than true false, the more common practice, though you see exit(0) or return 0 often is to use EXIT_SUCCESS or EXIT_FAILURE. Or whatever convention is used by the OS.</p>
</div>",1664946184.0,,False,ir4517t,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir4517t/,0,False,2,False,xvticy,Cplusplus,t5_2qh6x
1222,Capa-riccia,0 makes sense as “I have nothing to report”.,"<div class=""md""><p>0 makes sense as “I have nothing to report”.</p>
</div>",1664979929.0,,False,ir5jce8,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir5jce8/,0,False,2,False,xvticy,Cplusplus,t5_2qh6x
1223,mkvalor,"Because, although the values are the same, the concept of a boolean type and an OS return code are two distinct and unrelated things.

Kind of like how 0° Fahrenheit is not related to $0 in a bank account.","<div class=""md""><p>Because, although the values are the same, the concept of a boolean type and an OS return code are two distinct and unrelated things.</p>

<p>Kind of like how 0° Fahrenheit is not related to $0 in a bank account.</p>
</div>",1665009565.0,,False,ir7msvf,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir7msvf/,0,False,2,False,xvticy,Cplusplus,t5_2qh6x
1224,CjKing2k,"0 is considered to be false in conditional expressions, but it considered as ""Success"" in error reporting. Shells such as bash and cmd interpret the return value of main() as an error number, so 0 is ""Success"" and anything other than 0 is an error.","<div class=""md""><p>0 is considered to be false in conditional expressions, but it considered as &quot;Success&quot; in error reporting. Shells such as bash and cmd interpret the return value of main() as an error number, so 0 is &quot;Success&quot; and anything other than 0 is an error.</p>
</div>",1664925523.0,,False,ir3062y,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir3062y/,1,False,2,False,xvticy,Cplusplus,t5_2qh6x
1225,scalablecory,"It's not uncommon to see 0 used for ""success"".

In x86, comparing against 0 is slightly more efficient than other numbers. I don't know if this is the reason, but I've sometimes wondered how ancient CPUs and C patterns molded each-other and if this might be such a case.","<div class=""md""><p>It&#39;s not uncommon to see 0 used for &quot;success&quot;.</p>

<p>In x86, comparing against 0 is slightly more efficient than other numbers. I don&#39;t know if this is the reason, but I&#39;ve sometimes wondered how ancient CPUs and C patterns molded each-other and if this might be such a case.</p>
</div>",1664925801.0,,False,ir30soq,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir30soq/,1,False,1,False,xvticy,Cplusplus,t5_2qh6x
1226,slapnuttz,It means there were 0 errors. That is why main returns and int not a bool,"<div class=""md""><p>It means there were 0 errors. That is why main returns and int not a bool</p>
</div>",1664925530.0,,False,ir306m0,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir306m0/,1,False,-8,False,xvticy,Cplusplus,t5_2qh6x
1227,TheDevilsAdvokaat,Because anything else tended to be an error code.,"<div class=""md""><p>Because anything else tended to be an error code.</p>
</div>",1664932798.0,,False,ir3fwbb,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir3fwbb/,0,False,1,False,xvticy,Cplusplus,t5_2qh6x
1228,deelowe,"This isn't the right interpretation of what's going on. Let me clarify:

1) The return value is an int, not a bool. So true/false doesn't make sense here.

2) C/C++ doesn't interpret the return value. It's simply being passed on to the OS

3) Interpreting a return value of zero as success is a POSIX (OS) thing, not C/C++

4) POSIX states 0 is success and **anything else** is a failure. This is so that unique failure codes can be created and handled appropriately.

5) There is nothing stopping an OS from expecting main return values to be character strings or any other data type.","<div class=""md""><p>This isn&#39;t the right interpretation of what&#39;s going on. Let me clarify:</p>

<p>1) The return value is an int, not a bool. So true/false doesn&#39;t make sense here.</p>

<p>2) C/C++ doesn&#39;t interpret the return value. It&#39;s simply being passed on to the OS</p>

<p>3) Interpreting a return value of zero as success is a POSIX (OS) thing, not C/C++</p>

<p>4) POSIX states 0 is success and <strong>anything else</strong> is a failure. This is so that unique failure codes can be created and handled appropriately.</p>

<p>5) There is nothing stopping an OS from expecting main return values to be character strings or any other data type.</p>
</div>",1664996018.0,,False,ir6oj5w,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir6oj5w/,0,False,1,False,xvticy,Cplusplus,t5_2qh6x
1229,retsotrembla,"0 - The error detection system failed

to detect any errors.

     

As opposed to returning an actual `errno`","<div class=""md""><p>0 - The error detection system failed</p>

<p>to detect any errors.</p>

<pre><code> 
</code></pre>

<p>As opposed to returning an actual <code>errno</code></p>
</div>",1665004024.0,,False,ir79nkk,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir79nkk/,0,False,1,False,xvticy,Cplusplus,t5_2qh6x
1230,Dev-Sec_emb,Daamnn... This thread turned philosophical...,"<div class=""md""><p>Daamnn... This thread turned philosophical...</p>
</div>",1665412015.0,,False,irrj077,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/irrj077/,0,False,1,False,xvticy,Cplusplus,t5_2qh6x
1231,gsdayton,"Main returns an error code, not a Boolean. 0 means “no error code”.  On Unix-like systems an actual error number from errno.h may be returned which the shell may interpret, while other operating systems will have other bit patterns, which their command shells may interpret.","<div class=""md""><p>Main returns an error code, not a Boolean. 0 means “no error code”.  On Unix-like systems an actual error number from errno.h may be returned which the shell may interpret, while other operating systems will have other bit patterns, which their command shells may interpret.</p>
</div>",1666561886.0,,False,itigt85,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/itigt85/,0,False,1,False,xvticy,Cplusplus,t5_2qh6x
1232,wishper77,"I always interpret the return of the main as ""did I fail?"", with this interpretation a false mean ""everything is ok'","<div class=""md""><p>I always interpret the return of the main as &quot;did I fail?&quot;, with this interpretation a false mean &quot;everything is ok&#39;</p>
</div>",1667053953.0,,False,iu917kw,False,t3_xvticy,t3_xvticy,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/iu917kw/,0,False,1,False,xvticy,Cplusplus,t5_2qh6x
1233,hubhub,"All happy families are alike, but every unhappy family is unhappy in its own way (Leo Tolstoy, Anna Karenina, 1878)","<div class=""md""><p>All happy families are alike, but every unhappy family is unhappy in its own way (Leo Tolstoy, Anna Karenina, 1878)</p>
</div>",1664950495.0,,False,ir4azzq,False,t3_xvticy,t1_ir311oq,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir4azzq/,0,False,14,False,xvticy,Cplusplus,t5_2qh6x
1234,gtrman571,So basically because zero is neither positive or negative.,"<div class=""md""><p>So basically because zero is neither positive or negative.</p>
</div>",1665022098.0,,False,ir8cgzz,True,t3_xvticy,t1_ir311oq,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir8cgzz/,0,False,1,False,xvticy,Cplusplus,t5_2qh6x
1235,IQueryVisiC,"But an action is considered code smell in csharp. Why would I launch an async process if I don’t want something back from it? If I want synchronous code, why don’t I link to a dynamic library instead?","<div class=""md""><p>But an action is considered code smell in csharp. Why would I launch an async process if I don’t want something back from it? If I want synchronous code, why don’t I link to a dynamic library instead?</p>
</div>",1664961934.0,,False,ir4o9hr,False,t3_xvticy,t1_ir305mp,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir4o9hr/,0,False,-3,False,xvticy,Cplusplus,t5_2qh6x
1236,more_exercise,"That doesn't really answer the question (or, at least begs for a followup). Since Unix is
[""Written in
C and assembly language""](https://en.wikipedia.org/wiki/Unix), why did Unix deviate from the convention of its implementation language? Why is this a UNIX-ism?","<div class=""md""><p>That doesn&#39;t really answer the question (or, at least begs for a followup). Since Unix is
<a href=""https://en.wikipedia.org/wiki/Unix"">&quot;Written in
C and assembly language&quot;</a>, why did Unix deviate from the convention of its implementation language? Why is this a UNIX-ism?</p>
</div>",1664985472.0,,False,ir5x3h9,False,t3_xvticy,t1_ir339x7,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir5x3h9/,2,False,0,False,xvticy,Cplusplus,t5_2qh6x
1237,IQueryVisiC,Error count. Length of error message,"<div class=""md""><p>Error count. Length of error message</p>
</div>",1664961671.0,,False,ir4nyus,False,t3_xvticy,t1_ir3a96z,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir4nyus/,1,False,1,False,xvticy,Cplusplus,t5_2qh6x
1238,Drugbird,Falsey values are values that can be converted to false. Like 0 or nullptr.,"<div class=""md""><p>Falsey values are values that can be converted to false. Like 0 or nullptr.</p>
</div>",1664976469.0,,False,ir5bgfx,False,t3_xvticy,t1_ir3z9xi,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir5bgfx/,1,False,2,False,xvticy,Cplusplus,t5_2qh6x
1239,third_declension,"> 0 meant ""no errors""

The IBM mainframes of the 1960's did this.","<div class=""md""><blockquote>
<p>0 meant &quot;no errors&quot;</p>
</blockquote>

<p>The IBM mainframes of the 1960&#39;s did this.</p>
</div>",1664981826.0,,False,ir5nwca,False,t3_xvticy,t1_ir4pzuq,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir5nwca/,0,False,3,False,xvticy,Cplusplus,t5_2qh6x
1240,IQueryVisiC,Unix invented both this shell and the Clanguage,"<div class=""md""><p>Unix invented both this shell and the Clanguage</p>
</div>",1664961702.0,,False,ir4o04h,False,t3_xvticy,t1_ir3062y,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir4o04h/,0,False,2,False,xvticy,Cplusplus,t5_2qh6x
1241,IQueryVisiC,C was invented on pdp. It is really a shame that they had no fast rep or loop instruction for string processing.,"<div class=""md""><p>C was invented on pdp. It is really a shame that they had no fast rep or loop instruction for string processing.</p>
</div>",1664961794.0,,False,ir4o3tr,False,t3_xvticy,t1_ir30soq,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir4o3tr/,0,False,1,False,xvticy,Cplusplus,t5_2qh6x
1242,dmc_2930,">It means there were 0 errors. That is why main returns and int not a bool

So if it returns -1 there were -1 errors?

main can return any integer value. Lots of times, 0 means everything was okay, but that's not always the case, and any program can return whatever it wants to mean success.

Conventionally, that value is zero, but it doesn't have to be.","<div class=""md""><blockquote>
<p>It means there were 0 errors. That is why main returns and int not a bool</p>
</blockquote>

<p>So if it returns -1 there were -1 errors?</p>

<p>main can return any integer value. Lots of times, 0 means everything was okay, but that&#39;s not always the case, and any program can return whatever it wants to mean success.</p>

<p>Conventionally, that value is zero, but it doesn&#39;t have to be.</p>
</div>",1664937705.0,,False,ir3q6ub,False,t3_xvticy,t1_ir306m0,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir3q6ub/,0,False,2,False,xvticy,Cplusplus,t5_2qh6x
1243,flyingron,"I think you misunderstood what I am saying.   Both UNIX and C behave the same interpretation of exit codes.   The return from main goes straight to the exit system call.    SUCCESS = 0, Failure = something else.    This in turn goes to the shell which most processes are started from which has the quaint construct of 0 (or in fact, nothing) being true, and anything else false.","<div class=""md""><p>I think you misunderstood what I am saying.   Both UNIX and C behave the same interpretation of exit codes.   The return from main goes straight to the exit system call.    SUCCESS = 0, Failure = something else.    This in turn goes to the shell which most processes are started from which has the quaint construct of 0 (or in fact, nothing) being true, and anything else false.</p>
</div>",1664994293.0,,False,ir6k1ig,False,t3_xvticy,t1_ir5x3h9,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir6k1ig/,1,False,4,False,xvticy,Cplusplus,t5_2qh6x
1244,mredding,Because Unix is not C.,"<div class=""md""><p>Because Unix is not C.</p>
</div>",1664992619.0,,False,ir6fq1p,False,t3_xvticy,t1_ir5x3h9,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir6fq1p/,0,False,1,False,xvticy,Cplusplus,t5_2qh6x
1245,EstablishmentBig7956,"The number? 

As you can write a function and give it any number you want to for a return value. 

If it's in numbers print out to the screen then that's usually an error code for looking up to see what happened, instead of printing it out and telling the user. 

Error count, length of error message, is that a logical assumption or documented?","<div class=""md""><p>The number? </p>

<p>As you can write a function and give it any number you want to for a return value. </p>

<p>If it&#39;s in numbers print out to the screen then that&#39;s usually an error code for looking up to see what happened, instead of printing it out and telling the user. </p>

<p>Error count, length of error message, is that a logical assumption or documented?</p>
</div>",1664970206.0,,False,ir4ze9t,False,t3_xvticy,t1_ir4nyus,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir4ze9t/,1,False,1,False,xvticy,Cplusplus,t5_2qh6x
1246,,"Indeed, I’m familiar with the concept. My reply was an off handed comment about the way c++ evaluates Boolean expressions in the scope of static typing vs JavaScripts (where the falsey concept originates)","<div class=""md""><p>Indeed, I’m familiar with the concept. My reply was an off handed comment about the way c++ evaluates Boolean expressions in the scope of static typing vs JavaScripts (where the falsey concept originates)</p>
</div>",1664982095.0,,False,ir5okk1,False,t3_xvticy,t1_ir5bgfx,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir5okk1/,0,False,2,False,xvticy,Cplusplus,t5_2qh6x
1247,more_exercise,Ah - your thrust was closer to the distinction between exit codes (0=success) and truthy-ness (0=false). And that C also believes in exit codes. Got it,"<div class=""md""><p>Ah - your thrust was closer to the distinction between exit codes (0=success) and truthy-ness (0=false). And that C also believes in exit codes. Got it</p>
</div>",1665005723.0,,False,ir7dslr,False,t3_xvticy,t1_ir6k1ig,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ir7dslr/,0,False,1,False,xvticy,Cplusplus,t5_2qh6x
1248,IQueryVisiC,">any number you want

Usually that leads to longer code. And sometimes users don't read up the documentation. If you and the users do the logical thing, it just works. If you do what you want, it probably fails and people need to dig out the documentation.

Some libraries have weird choice of order of parameters. Then there is the sign in the sort function, which I feel is wrong.","<div class=""md""><blockquote>
<p>any number you want</p>
</blockquote>

<p>Usually that leads to longer code. And sometimes users don&#39;t read up the documentation. If you and the users do the logical thing, it just works. If you do what you want, it probably fails and people need to dig out the documentation.</p>

<p>Some libraries have weird choice of order of parameters. Then there is the sign in the sort function, which I feel is wrong.</p>
</div>",1665149244.0,,False,irehird,False,t3_xvticy,t1_ir4ze9t,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/irehird/,1,False,1,False,xvticy,Cplusplus,t5_2qh6x
1249,EstablishmentBig7956,"It really depends on the use of the software, if think, like Apple IOS giving error codes that no one knows what they are, call support and their first solution is buy new cables of theirs then OS, reinstall the OS and see if that fixes it. 

Hardware error codes specifically for the hardware where there is actually a set of rules for what code means what so you code that into the software, or visa versa, having to keep well written documentation for what the return code means. 

If it's coders preference already knowing that you return value isn't to be printed out to the screen and just utilized for what to do with whatever code is returned in order to deal with whatever operation needs to be done next. 

It really doesn't matter what numbers they're using, but if it's open source code then chance is someone else maybe looking at it, so comments should be added. 

Keeping ones head about them and not just using multiple digits, just keep it as simple as possible to get the software to work as it should. 

Working for someone else, then the coder may have company restrictions on everything they write. 

I was just stating a fact about what can be done with return in a function. What someone else does with it is entirely up to them.","<div class=""md""><p>It really depends on the use of the software, if think, like Apple IOS giving error codes that no one knows what they are, call support and their first solution is buy new cables of theirs then OS, reinstall the OS and see if that fixes it. </p>

<p>Hardware error codes specifically for the hardware where there is actually a set of rules for what code means what so you code that into the software, or visa versa, having to keep well written documentation for what the return code means. </p>

<p>If it&#39;s coders preference already knowing that you return value isn&#39;t to be printed out to the screen and just utilized for what to do with whatever code is returned in order to deal with whatever operation needs to be done next. </p>

<p>It really doesn&#39;t matter what numbers they&#39;re using, but if it&#39;s open source code then chance is someone else maybe looking at it, so comments should be added. </p>

<p>Keeping ones head about them and not just using multiple digits, just keep it as simple as possible to get the software to work as it should. </p>

<p>Working for someone else, then the coder may have company restrictions on everything they write. </p>

<p>I was just stating a fact about what can be done with return in a function. What someone else does with it is entirely up to them.</p>
</div>",1665149968.0,,False,ireiy1w,False,t3_xvticy,t1_irehird,/r/Cplusplus/comments/xvticy/if_0_is_considered_a_falsy_value_then_why_does/ireiy1w/,0,False,1,False,xvticy,Cplusplus,t5_2qh6x
1250,bargle0,"This is a pretty reasonable list:

https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list

I can't provide much personal guidance WRT to introductory material, since I first started learning C++ eons ago (with bad books).

The main thing to remember is that C++ is brutal, complicated, and unforgiving. There is going to be a lot of failure, and it will be extremely hard to figure out why some times. Along the way, your son will also want to learn how to use things like debuggers, profilers, and other specialized tools (like things that detect memory leaks). I'm familiar with Linux/UNIX, so I can't really tell you any Windows-specific information about that.

Here's an idea:

Have your son write an actual physical letter to Bethesda. They may respond with some suggestions of their own, particularly with respect to game programming. For example, some of the general advice for C++ programming (*""use smart pointers whenever possible""*) may not apply for game programming (since smart pointers introduce overhead that games try to avoid). Even if they don't respond, writing a business letter is a good exercise in its own right.","<div class=""md""><p>This is a pretty reasonable list:</p>

<p><a href=""https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list"">https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list</a></p>

<p>I can&#39;t provide much personal guidance WRT to introductory material, since I first started learning C++ eons ago (with bad books).</p>

<p>The main thing to remember is that C++ is brutal, complicated, and unforgiving. There is going to be a lot of failure, and it will be extremely hard to figure out why some times. Along the way, your son will also want to learn how to use things like debuggers, profilers, and other specialized tools (like things that detect memory leaks). I&#39;m familiar with Linux/UNIX, so I can&#39;t really tell you any Windows-specific information about that.</p>

<p>Here&#39;s an idea:</p>

<p>Have your son write an actual physical letter to Bethesda. They may respond with some suggestions of their own, particularly with respect to game programming. For example, some of the general advice for C++ programming (<em>&quot;use smart pointers whenever possible&quot;</em>) may not apply for game programming (since smart pointers introduce overhead that games try to avoid). Even if they don&#39;t respond, writing a business letter is a good exercise in its own right.</p>
</div>",1530043493.0,,False,e1c7tga,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1c7tga/,2,False,25,False,8u2xdb,Cplusplus,t5_2qh6x
1251,unknownmat,"It's tough to recommend C++ to a beginner. It is a very complicated language with a lot of accidental complexity. C++ was the language chosen by my university for the intro course (this was before C++11), and the class wound up wasting half its time just learning about the various nooks and crannies of the language. I strongly believe that C++ was responsible for weeding out half of my classmates who just couldn't handle the difficulty of the language on top of a traditional CS curriculum.

If your boy mostly just wants to write games, there are great libraries and frameworks out there for languages like Python that are much more beginner friend. I strongly recommend starting there. He can have graphics and input working in a day or two, and have a halfway decent game within a week or two. Python is a powerful language in its own right - it is not ""watered-down"" in any sense if this is something your boy would be worried about (c.f. QBasic that I learned on). He can always go back and learn C++ once he understands programming basics - this way he's not trying to learn both the language AND the programming at the same time.

That said, if your boy is interested in getting down to the metal (for performance, or just for his own understanding), then a language like C++ is a good tool for that. If this is what truly motivates him, then he is unlikely to be satisfied with working in a high-level language like Python. In this case, I recommend that you find a good modern book on game programming in C++ aimed at beginners - hopefully one that will explain some of the trickier C++ concepts along the way. Unfortunately, all the books that I once learned-from are out-of-date now, so I cannot make any specific recommendations. I recommend against a general-purpose ""learn C++"" style book (except as a reference, perhaps) because I think that it is much easier to learn any language as a byproduct of achieving some objective rather than as an explicit objective in itself.

EDIT: Minor fixes","<div class=""md""><p>It&#39;s tough to recommend C++ to a beginner. It is a very complicated language with a lot of accidental complexity. C++ was the language chosen by my university for the intro course (this was before C++11), and the class wound up wasting half its time just learning about the various nooks and crannies of the language. I strongly believe that C++ was responsible for weeding out half of my classmates who just couldn&#39;t handle the difficulty of the language on top of a traditional CS curriculum.</p>

<p>If your boy mostly just wants to write games, there are great libraries and frameworks out there for languages like Python that are much more beginner friend. I strongly recommend starting there. He can have graphics and input working in a day or two, and have a halfway decent game within a week or two. Python is a powerful language in its own right - it is not &quot;watered-down&quot; in any sense if this is something your boy would be worried about (c.f. QBasic that I learned on). He can always go back and learn C++ once he understands programming basics - this way he&#39;s not trying to learn both the language AND the programming at the same time.</p>

<p>That said, if your boy is interested in getting down to the metal (for performance, or just for his own understanding), then a language like C++ is a good tool for that. If this is what truly motivates him, then he is unlikely to be satisfied with working in a high-level language like Python. In this case, I recommend that you find a good modern book on game programming in C++ aimed at beginners - hopefully one that will explain some of the trickier C++ concepts along the way. Unfortunately, all the books that I once learned-from are out-of-date now, so I cannot make any specific recommendations. I recommend against a general-purpose &quot;learn C++&quot; style book (except as a reference, perhaps) because I think that it is much easier to learn any language as a byproduct of achieving some objective rather than as an explicit objective in itself.</p>

<p>EDIT: Minor fixes</p>
</div>",1530044073.0,,1530044271.0,e1c8j3n,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1c8j3n/,0,False,12,False,8u2xdb,Cplusplus,t5_2qh6x
1252,Ryancor,"I would start taking it a step at time, c++ can get real complicated real fast, and due to its learning curve, it can almost turn off people from programming all together. Python or ruby is a good way to learn OOP, python has a good amount of GUI libraries that your son could use as well. ","<div class=""md""><p>I would start taking it a step at time, c++ can get real complicated real fast, and due to its learning curve, it can almost turn off people from programming all together. Python or ruby is a good way to learn OOP, python has a good amount of GUI libraries that your son could use as well. </p>
</div>",1530043535.0,,False,e1c7vcr,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1c7vcr/,0,False,9,False,8u2xdb,Cplusplus,t5_2qh6x
1253,Ikkepop,"My first programming language when I was about 11-12 years old was basic, however i quickly dropped that and went for pascal and assembly, and less then a year after that, grabbed C, and then C++, quickly after that. By the age of 14-15 I was solving some pretty hard problems in programming contests using C++. Maybe C++ isn't the greatest beginner language, but with enough curiosity and stubbornness it's definitely doable. His main advantage is that he is very young, the brain adapts really fast at that age.   
The main obstacle in learning any kind of systems programming language is understanding how the machine works, hence, Assembly has really helped me, once things like pointers came. If he wants to do C++ then don't try to start with Python or anything like that, as it'll make grasping low level constructs lot harder later (he will have to unlearn some things).  Maybe you could get him some Arduino kits and tutorials that go with them so he can understand computers bit better and perhaps pickup some basic C","<div class=""md""><p>My first programming language when I was about 11-12 years old was basic, however i quickly dropped that and went for pascal and assembly, and less then a year after that, grabbed C, and then C++, quickly after that. By the age of 14-15 I was solving some pretty hard problems in programming contests using C++. Maybe C++ isn&#39;t the greatest beginner language, but with enough curiosity and stubbornness it&#39;s definitely doable. His main advantage is that he is very young, the brain adapts really fast at that age.<br/>
The main obstacle in learning any kind of systems programming language is understanding how the machine works, hence, Assembly has really helped me, once things like pointers came. If he wants to do C++ then don&#39;t try to start with Python or anything like that, as it&#39;ll make grasping low level constructs lot harder later (he will have to unlearn some things).  Maybe you could get him some Arduino kits and tutorials that go with them so he can understand computers bit better and perhaps pickup some basic C</p>
</div>",1530044462.0,,False,e1c9068,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1c9068/,0,False,8,False,8u2xdb,Cplusplus,t5_2qh6x
1254,Rockin_Croc,"My first programming experience was in college with C++, and it definitely took me a while to understand it. But, programming isn’t something that comes naturally to me, and it might for your son. So I would say let him try it, and if it doesn’t work out or he gets discouraged he can always try another language or wait until he’s older","<div class=""md""><p>My first programming experience was in college with C++, and it definitely took me a while to understand it. But, programming isn’t something that comes naturally to me, and it might for your son. So I would say let him try it, and if it doesn’t work out or he gets discouraged he can always try another language or wait until he’s older</p>
</div>",1530043039.0,,False,e1c78jw,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1c78jw/,0,False,3,False,8u2xdb,Cplusplus,t5_2qh6x
1255,macnor,My intro programming class I took about 5 years ago used the earlier edition of [this book](https://www.amazon.com/Starting-Out-Control-Structures-Objects/dp/0134498372/ref=sr_1_1?s=books&ie=UTF8&qid=1530054289&sr=1-1&refinements=p_lbr_one_browse-bin%3ATony+Gaddis). I didn't have any programming experience prior (I was an adult in college though) and found it to be one of the better programming books I had to use in college. The edition I used didn't cover a bunch of object-oriented programming or modern C++ but personally I think that's fine if you're just starting to program. It's more of an intro to programming book that happens to use C++ which I think might actually be better for your son.,"<div class=""md""><p>My intro programming class I took about 5 years ago used the earlier edition of <a href=""https://www.amazon.com/Starting-Out-Control-Structures-Objects/dp/0134498372/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1530054289&amp;sr=1-1&amp;refinements=p_lbr_one_browse-bin%3ATony+Gaddis"">this book</a>. I didn&#39;t have any programming experience prior (I was an adult in college though) and found it to be one of the better programming books I had to use in college. The edition I used didn&#39;t cover a bunch of object-oriented programming or modern C++ but personally I think that&#39;s fine if you&#39;re just starting to program. It&#39;s more of an intro to programming book that happens to use C++ which I think might actually be better for your son.</p>
</div>",1530054644.0,,False,e1ck1hv,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1ck1hv/,0,False,3,False,8u2xdb,Cplusplus,t5_2qh6x
1256,SalamosaurusRex,"Personally, when I was his age I started with Java. I went through a very similar phase as it seems he is, except for me it was Minecraft and Mojang. Although C++ is definitely a tougher language, it is totally doable to learn. While your son and I are two very different people, when I was his age I was fixated on Java and basically was unswayed from it, something he may possibly feel. At the time, I actually did not want to ever pick up another language (considering we're here on a C++ subreddit, this mindset obviously didn't last long XD), again he may not feel this way but what I'm trying to say is that if he really wants to learn C++, I don't feel like there's a need to push him to something easier. No matter what he does, he's going to learn to teach himself, a very very valuable thing to be able to do, and is going to mentally mature. His ability to learn is really more dependent on his motivation and interest than anything. When I was his age, I would go through on and off periods of learning, so I would work on it for some time then lose interest and maybe pick it back up again. I feel like this is something to be expected from someone so young. In terms of resources, when I was his age I found reading books on the subject matter a little hard and easy to lose focus, even though I was interested in it. (hell, I even feel that a little to this day).  I actually started learning off of video tutorials on Udemy. While I am not experienced enough to really decide whether it was a good resource, the guy I learned from was John Purcell. He does both Java and C++ tutorials (mainly Java). Since I tried to help start a high school programming club this year, I was able to get codes to get all of his courses for free. (I say tried because this year we didn't get far). You could take a look at his courses here: [https://caveofprogramming.teachable.com/courses](https://caveofprogramming.teachable.com/courses)  and if he likes them I would be perfectly willing to give you a code or let him use the ones I already bought. Java made learning C++ very very easy for me. Instead of ""C++ for complete beginners"" it was ""C++ for Java developers"" and I think I picked up the basics in a few days. (Bear in mind it doesn't matter where you start because once you get one language, it makes learning others really quick). But to sum up, if he's more motivated for C++, I wouldn't push him any other way since motivation + interest is really the driving forced behind self-teaching. Last thing to bear in mind is while this is what I did, I am still very young and inexperienced, I'm not even sure where I'll end up, so what I think is good may not really be best according to professionals or those with many years of experience.","<div class=""md""><p>Personally, when I was his age I started with Java. I went through a very similar phase as it seems he is, except for me it was Minecraft and Mojang. Although C++ is definitely a tougher language, it is totally doable to learn. While your son and I are two very different people, when I was his age I was fixated on Java and basically was unswayed from it, something he may possibly feel. At the time, I actually did not want to ever pick up another language (considering we&#39;re here on a C++ subreddit, this mindset obviously didn&#39;t last long XD), again he may not feel this way but what I&#39;m trying to say is that if he really wants to learn C++, I don&#39;t feel like there&#39;s a need to push him to something easier. No matter what he does, he&#39;s going to learn to teach himself, a very very valuable thing to be able to do, and is going to mentally mature. His ability to learn is really more dependent on his motivation and interest than anything. When I was his age, I would go through on and off periods of learning, so I would work on it for some time then lose interest and maybe pick it back up again. I feel like this is something to be expected from someone so young. In terms of resources, when I was his age I found reading books on the subject matter a little hard and easy to lose focus, even though I was interested in it. (hell, I even feel that a little to this day).  I actually started learning off of video tutorials on Udemy. While I am not experienced enough to really decide whether it was a good resource, the guy I learned from was John Purcell. He does both Java and C++ tutorials (mainly Java). Since I tried to help start a high school programming club this year, I was able to get codes to get all of his courses for free. (I say tried because this year we didn&#39;t get far). You could take a look at his courses here: <a href=""https://caveofprogramming.teachable.com/courses"">https://caveofprogramming.teachable.com/courses</a>  and if he likes them I would be perfectly willing to give you a code or let him use the ones I already bought. Java made learning C++ very very easy for me. Instead of &quot;C++ for complete beginners&quot; it was &quot;C++ for Java developers&quot; and I think I picked up the basics in a few days. (Bear in mind it doesn&#39;t matter where you start because once you get one language, it makes learning others really quick). But to sum up, if he&#39;s more motivated for C++, I wouldn&#39;t push him any other way since motivation + interest is really the driving forced behind self-teaching. Last thing to bear in mind is while this is what I did, I am still very young and inexperienced, I&#39;m not even sure where I&#39;ll end up, so what I think is good may not really be best according to professionals or those with many years of experience.</p>
</div>",1530055232.0,,False,e1ckmaq,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1ckmaq/,0,False,3,False,8u2xdb,Cplusplus,t5_2qh6x
1257,,just teach your son how to use Stackoverflow,"<div class=""md""><p>just teach your son how to use Stackoverflow</p>
</div>",1530050987.0,,False,e1cgbn6,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1cgbn6/,0,False,5,False,8u2xdb,Cplusplus,t5_2qh6x
1258,rafleury,"Who cares if he is right?  If he is motivated and finds it fun to learn c++ first, then I say encourage it fully!  This nonsense about it being too hard is coming at it from the wrong view point I think.  He doesn’t have to know c++ completely to have fun and learn new things.","<div class=""md""><p>Who cares if he is right?  If he is motivated and finds it fun to learn c++ first, then I say encourage it fully!  This nonsense about it being too hard is coming at it from the wrong view point I think.  He doesn’t have to know c++ completely to have fun and learn new things.</p>
</div>",1530047878.0,,False,e1ccy0z,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1ccy0z/,0,False,5,False,8u2xdb,Cplusplus,t5_2qh6x
1259,State_,"C++ is a good first language to learn, as if he learns that he can learn anything.

But it might be too much for an 11 year old. I'm not entirely sure. Might be better to start him of on C and then move to C++ IMO, as C has much simpler concepts, and he can focus on what's going on underneath.

If that's too much for him, just start with python I guess.","<div class=""md""><p>C++ is a good first language to learn, as if he learns that he can learn anything.</p>

<p>But it might be too much for an 11 year old. I&#39;m not entirely sure. Might be better to start him of on C and then move to C++ IMO, as C has much simpler concepts, and he can focus on what&#39;s going on underneath.</p>

<p>If that&#39;s too much for him, just start with python I guess.</p>
</div>",1530055880.0,,False,e1cl9p2,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1cl9p2/,2,False,2,False,8u2xdb,Cplusplus,t5_2qh6x
1260,Aleriya,"If you can find a summer camp or kid's programming club or some way for him to be paired with a teacher, that would be best. It's certainly possible to teach yourself, but it's less frustrating when you have a teacher who can also guide you to good habits.

Some cities have youth programs that teach programming.

Another consideration would be encouraging him to learn as much math as possible. Game development is one of the more math-heavy fields inside CS.

I started writing C++ at his age because I wanted to make video games, too. It's doable. The hard part is when you get stuck and there is no one to help you get unstuck.","<div class=""md""><p>If you can find a summer camp or kid&#39;s programming club or some way for him to be paired with a teacher, that would be best. It&#39;s certainly possible to teach yourself, but it&#39;s less frustrating when you have a teacher who can also guide you to good habits.</p>

<p>Some cities have youth programs that teach programming.</p>

<p>Another consideration would be encouraging him to learn as much math as possible. Game development is one of the more math-heavy fields inside CS.</p>

<p>I started writing C++ at his age because I wanted to make video games, too. It&#39;s doable. The hard part is when you get stuck and there is no one to help you get unstuck.</p>
</div>",1530049953.0,,False,e1cf7xn,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1cf7xn/,0,False,2,False,8u2xdb,Cplusplus,t5_2qh6x
1261,DefNotaZombie,"He is right. C++ should be the first language people learn. It is the hurdle, and once you jump over it, other languages are easier (except functional languages). Furthermore, C++ is still a very important language if someone wants to write code that runs quickly (which, if you do anything close to hardware, you ought to)

A lot of people will reccomend a scripting language as a beginner language, and they're wrong. C++ forces the student to think about memory allocation and pointers, qualities that languages like Java/C# cover up, not to mention scripting languages.

TL;DR It's better to start with a complex language if you're committed to learning to program.","<div class=""md""><p>He is right. C++ should be the first language people learn. It is the hurdle, and once you jump over it, other languages are easier (except functional languages). Furthermore, C++ is still a very important language if someone wants to write code that runs quickly (which, if you do anything close to hardware, you ought to)</p>

<p>A lot of people will reccomend a scripting language as a beginner language, and they&#39;re wrong. C++ forces the student to think about memory allocation and pointers, qualities that languages like Java/C# cover up, not to mention scripting languages.</p>

<p>TL;DR It&#39;s better to start with a complex language if you&#39;re committed to learning to program.</p>
</div>",1530123620.0,,False,e1e5u1u,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1e5u1u/,0,False,1,False,8u2xdb,Cplusplus,t5_2qh6x
1262,,"I would recommend not learning C++ as a beginner or at 11 years old.  It's a downright difficult language.  There are professional programmers who have been using C++ for decades that don't really understand it.  It's very easy to crash your program or get a compiler error that's just incomprehensible.  It's also a large and difficult to learn programming language that I generally don't recommend to anyone unless they really need it whether they're a new programmer or not.

He's probably read that they use C++ at Bethesda, which is a given since just about every single game developer uses C++.  However, there are much easier places to *start* even if that's not where he ends up.  I suggest he learn Unity.  Unity is a game engine that will allow him to create games without the years of toil to even learn the language before he can make anything ""good.""  And it's not cheating or a program for kids that kinds of lets them put some things on the screen, it's a full-features game engine which you program in a real programming language: C#.  C#, despite the similar name, is orders of magnitude simpler to learn and use than C++.  An 11 year old can learn C#, I'm sure of it.  There are also ridiculous amounts of tutorials and courses about Unity on sites like Youtube and Udemy so he'll have plenty of things to follow along.

And this is not locking him into a path either.  There are some other engines like Construct I could recommend, but those engines have such a strange way of doing things that they're bordering on a specialized skill that isn't very useful in other places.  Unity uses C#, a real programming language and will teach him skills he can transfer to other languages and endeavors in the future.  Starting with a higher level language like C# teaches the fundamentals of programming before throwing him into the deep end of C++, the things he learns with Unity and C# will all be useful things going forward.

The other route, the bottom up route, is probably not recommended for an 11 year old either.  It's a difficult, studious road that'll have him learning C and studying computer science, languages and algorithms before moving onto C++.  This is the route you might take in a university, and it's not an easy one.  Unless your son is really, really persistent and driven then I wouldn't recommend that at 11 years old.","<div class=""md""><p>I would recommend not learning C++ as a beginner or at 11 years old.  It&#39;s a downright difficult language.  There are professional programmers who have been using C++ for decades that don&#39;t really understand it.  It&#39;s very easy to crash your program or get a compiler error that&#39;s just incomprehensible.  It&#39;s also a large and difficult to learn programming language that I generally don&#39;t recommend to anyone unless they really need it whether they&#39;re a new programmer or not.</p>

<p>He&#39;s probably read that they use C++ at Bethesda, which is a given since just about every single game developer uses C++.  However, there are much easier places to <em>start</em> even if that&#39;s not where he ends up.  I suggest he learn Unity.  Unity is a game engine that will allow him to create games without the years of toil to even learn the language before he can make anything &quot;good.&quot;  And it&#39;s not cheating or a program for kids that kinds of lets them put some things on the screen, it&#39;s a full-features game engine which you program in a real programming language: C#.  C#, despite the similar name, is orders of magnitude simpler to learn and use than C++.  An 11 year old can learn C#, I&#39;m sure of it.  There are also ridiculous amounts of tutorials and courses about Unity on sites like Youtube and Udemy so he&#39;ll have plenty of things to follow along.</p>

<p>And this is not locking him into a path either.  There are some other engines like Construct I could recommend, but those engines have such a strange way of doing things that they&#39;re bordering on a specialized skill that isn&#39;t very useful in other places.  Unity uses C#, a real programming language and will teach him skills he can transfer to other languages and endeavors in the future.  Starting with a higher level language like C# teaches the fundamentals of programming before throwing him into the deep end of C++, the things he learns with Unity and C# will all be useful things going forward.</p>

<p>The other route, the bottom up route, is probably not recommended for an 11 year old either.  It&#39;s a difficult, studious road that&#39;ll have him learning C and studying computer science, languages and algorithms before moving onto C++.  This is the route you might take in a university, and it&#39;s not an easy one.  Unless your son is really, really persistent and driven then I wouldn&#39;t recommend that at 11 years old.</p>
</div>",1530839368.0,,False,e1v6gi2,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1v6gi2/,0,False,1,False,8u2xdb,Cplusplus,t5_2qh6x
1263,squeezyphresh,"Funny, I was thinking of applying to Bethesda myself.

Depends on what he has already done. C++ might be a bit of a jump if he hasn't done any object oriented programming. Object oriented programming can get confusing if you're just starting out, so having to worry about memory management on top of isn't super ideal. It sounds like he's really interested in game development... Maybe he'd be more interested in learning how to use a game engine. Unreal uses C++, but Unity uses C# and is generally a better choice for beginners.","<div class=""md""><p>Funny, I was thinking of applying to Bethesda myself.</p>

<p>Depends on what he has already done. C++ might be a bit of a jump if he hasn&#39;t done any object oriented programming. Object oriented programming can get confusing if you&#39;re just starting out, so having to worry about memory management on top of isn&#39;t super ideal. It sounds like he&#39;s really interested in game development... Maybe he&#39;d be more interested in learning how to use a game engine. Unreal uses C++, but Unity uses C# and is generally a better choice for beginners.</p>
</div>",1530042774.0,,False,e1c6vso,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1c6vso/,0,False,1,False,8u2xdb,Cplusplus,t5_2qh6x
1264,lazyubertoad,"> My question is - is he right to jump straight into C++?

This is very hard. He needs to jump to non-visual programming language first.  
Probably he'll need to write some console only applications to get familiar with the language and stuff.  
Then the key to success is to get the appropriate game engine, simple enough for him to use. I advise taking your question to r/gamedev and ask for the game/graphics engine for him to use. And don't really stick to C++.

I only can think of glut+OpenGL couple, and he could use just C for that and not C++, and that couple itself won't require any C++ knowledge, while he'll be able to use any amount of C++. Googling glut and OpenGL basic tutorials and books and everything should do the trick. Albeit, it is low level and somewhat limited and might require some way more advanced math. It is natural to get bored and overwhelmed by all that for some 11-year-old.","<div class=""md""><blockquote>
<p>My question is - is he right to jump straight into C++?</p>
</blockquote>

<p>This is very hard. He needs to jump to non-visual programming language first.<br/>
Probably he&#39;ll need to write some console only applications to get familiar with the language and stuff.<br/>
Then the key to success is to get the appropriate game engine, simple enough for him to use. I advise taking your question to <a href=""/r/gamedev"">r/gamedev</a> and ask for the game/graphics engine for him to use. And don&#39;t really stick to C++.</p>

<p>I only can think of glut+OpenGL couple, and he could use just C for that and not C++, and that couple itself won&#39;t require any C++ knowledge, while he&#39;ll be able to use any amount of C++. Googling glut and OpenGL basic tutorials and books and everything should do the trick. Albeit, it is low level and somewhat limited and might require some way more advanced math. It is natural to get bored and overwhelmed by all that for some 11-year-old.</p>
</div>",1530045719.0,,False,e1cahc0,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1cahc0/,0,False,1,False,8u2xdb,Cplusplus,t5_2qh6x
1265,,"Only thing I can say is, don’t doubt your kid on anything they want to do. You won’t ever lead him down the wrong path.

Coming from a kid/grown up who’s parents doubted him on almost anything.

The far reaches of space is the limit!","<div class=""md""><p>Only thing I can say is, don’t doubt your kid on anything they want to do. You won’t ever lead him down the wrong path.</p>

<p>Coming from a kid/grown up who’s parents doubted him on almost anything.</p>

<p>The far reaches of space is the limit!</p>
</div>",1530051875.0,,False,e1ch8pu,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1ch8pu/,0,False,1,False,8u2xdb,Cplusplus,t5_2qh6x
1266,HavokVA,I would start him off with a more forgiving language. Maybe Python or Java and then let him progress to C++. Another positive about starting with either Java or Python is that high school AP coding classes and intro college courses usually teach in Java/Python.,"<div class=""md""><p>I would start him off with a more forgiving language. Maybe Python or Java and then let him progress to C++. Another positive about starting with either Java or Python is that high school AP coding classes and intro college courses usually teach in Java/Python.</p>
</div>",1530122826.0,,False,e1e4u0n,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1e4u0n/,0,False,0,False,8u2xdb,Cplusplus,t5_2qh6x
1267,hop_along_quixote,"Have him try this maybe:

http://lazyfoo.net/tutorials/SDL/index.php#Hello%20SDL","<div class=""md""><p>Have him try this maybe:</p>

<p><a href=""http://lazyfoo.net/tutorials/SDL/index.php#Hello%20SDL"">http://lazyfoo.net/tutorials/SDL/index.php#Hello%20SDL</a></p>
</div>",1530064971.0,,False,e1ctz71,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1ctz71/,0,False,-1,False,8u2xdb,Cplusplus,t5_2qh6x
1268,gusty9,"If he is going to jump right into c++ maybe have him do something with unreal engine so he can see things happen with the code he writes. I personally would recommend something like java/kotlin/swift and have him start with mobile stuff, as that can be far easier to grasp. ","<div class=""md""><p>If he is going to jump right into c++ maybe have him do something with unreal engine so he can see things happen with the code he writes. I personally would recommend something like java/kotlin/swift and have him start with mobile stuff, as that can be far easier to grasp. </p>
</div>",1530069584.0,,False,e1cxy12,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1cxy12/,0,False,-1,False,8u2xdb,Cplusplus,t5_2qh6x
1269,flarn2006,"I suggest introducing him to JavaScript first. It's an easier-to-learn language that has similar syntax, and you can do a lot with it. Just to get him used to text-based programming languages first. Once he's comfortable with that, I suggest introducing him to C. It'll give a lot of background that's necessary for understanding parts of C++.","<div class=""md""><p>I suggest introducing him to JavaScript first. It&#39;s an easier-to-learn language that has similar syntax, and you can do a lot with it. Just to get him used to text-based programming languages first. Once he&#39;s comfortable with that, I suggest introducing him to C. It&#39;ll give a lot of background that&#39;s necessary for understanding parts of C++.</p>
</div>",1530063387.0,,False,e1csh41,False,t3_8u2xdb,t3_8u2xdb,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1csh41/,0,False,-4,False,8u2xdb,Cplusplus,t5_2qh6x
1270,ZorbaTHut,"For what it's worth, ""use smart pointers whenever possible"" *absolutely* applies to game programming; most game code isn't performance-sensitive. Yes, there are some chunks that are, and avoiding smart pointers there is a good idea, but in general they're A-OK and even strongly recommended.","<div class=""md""><p>For what it&#39;s worth, &quot;use smart pointers whenever possible&quot; <em>absolutely</em> applies to game programming; most game code isn&#39;t performance-sensitive. Yes, there are some chunks that are, and avoiding smart pointers there is a good idea, but in general they&#39;re A-OK and even strongly recommended.</p>
</div>",1531512264.0,,False,e2c79dv,False,t3_8u2xdb,t1_e1c7tga,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e2c79dv/,1,False,3,False,8u2xdb,Cplusplus,t5_2qh6x
1271,totoro27,.,"<div class=""md""><p>.</p>
</div>",1531237136.0,,False,e24s0w2,False,t3_8u2xdb,t1_e1c7tga,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e24s0w2/,0,False,1,False,8u2xdb,Cplusplus,t5_2qh6x
1272,2uantum,"If he doesn't want to start with Java or python, this is the way to go. He doesnt need to worry about object oriented design right now. It's important he grasps the basics such as functions and pointers before he moves on to more advanced OO concepts.","<div class=""md""><p>If he doesn&#39;t want to start with Java or python, this is the way to go. He doesnt need to worry about object oriented design right now. It&#39;s important he grasps the basics such as functions and pointers before he moves on to more advanced OO concepts.</p>
</div>",1530058789.0,,False,e1co3m2,False,t3_8u2xdb,t1_e1cl9p2,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1co3m2/,0,False,2,False,8u2xdb,Cplusplus,t5_2qh6x
1273,mrexodia,I don’t think c++ is a problem for a dedicated 11 year old.,"<div class=""md""><p>I don’t think c++ is a problem for a dedicated 11 year old.</p>
</div>",1530109277.0,,False,e1dnt0m,False,t3_8u2xdb,t1_e1cl9p2,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e1dnt0m/,0,False,1,False,8u2xdb,Cplusplus,t5_2qh6x
1274,bargle0,"Thanks for the reply! I don't do game programming, so I'm not familiar with the common practice.

For my own edification, is there a published guide of good practice for C++ game programming?","<div class=""md""><p>Thanks for the reply! I don&#39;t do game programming, so I&#39;m not familiar with the common practice.</p>

<p>For my own edification, is there a published guide of good practice for C++ game programming?</p>
</div>",1531512913.0,,False,e2c812d,False,t3_8u2xdb,t1_e2c79dv,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e2c812d/,1,False,1,False,8u2xdb,Cplusplus,t5_2qh6x
1275,ZorbaTHut,"I honestly don't know of one, sorry to say; experienced game programmers tend to be a lot busier writing games than writing books. There's no shortage of introduction and tutorial books, but they tend to stop before reaching anything that an experienced non-game-programmer wouldn't already know.","<div class=""md""><p>I honestly don&#39;t know of one, sorry to say; experienced game programmers tend to be a lot busier writing games than writing books. There&#39;s no shortage of introduction and tutorial books, but they tend to stop before reaching anything that an experienced non-game-programmer wouldn&#39;t already know.</p>
</div>",1531514538.0,,False,e2c9y2e,False,t3_8u2xdb,t1_e2c812d,/r/Cplusplus/comments/8u2xdb/youngest_showing_interest_in_c/e2c9y2e/,0,False,1,False,8u2xdb,Cplusplus,t5_2qh6x
1276,dvali,"There are no special requirements for programming unless you are writing extremely large complex programs, or using a super heavy IDE, or making a game or something.

Any laptop will do. I do a lot of prototyping at work and I regularly write, compile, and run code on a Raspberry Pi.","<div class=""md""><p>There are no special requirements for programming unless you are writing extremely large complex programs, or using a super heavy IDE, or making a game or something.</p>

<p>Any laptop will do. I do a lot of prototyping at work and I regularly write, compile, and run code on a Raspberry Pi.</p>
</div>",1646436072.0,,False,hzdrk2b,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzdrk2b/,1,False,35,False,t6tpbi,Cplusplus,t5_2qh6x
1277,Sechura,"Not a Samsung Galaxy Book Go.  If I didn't love the absurd battery life on it I would have returned it, lasts ~16 hours in with Firefox and vscode running the entire time and charges back to 100% in about an hour.  Its just finding anything that works on Windows ARM64 is a huge headache and even compiling from source for this os/arch combo is often an afterthought for the developers.","<div class=""md""><p>Not a Samsung Galaxy Book Go.  If I didn&#39;t love the absurd battery life on it I would have returned it, lasts ~16 hours in with Firefox and vscode running the entire time and charges back to 100% in about an hour.  Its just finding anything that works on Windows ARM64 is a huge headache and even compiling from source for this os/arch combo is often an afterthought for the developers.</p>
</div>",1646448151.0,,False,hzeiw13,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzeiw13/,0,False,6,False,t6tpbi,Cplusplus,t5_2qh6x
1278,shashwahpple,"Generally speaking unless you're working on extremely complex applications or something like game development you can really get away with any half decent laptop. 

You can go for business laptops, performance laptops, everyone loves the ThinkPad models and for good reason.

Depending on the use case of the applications you're developing you may be inclined to move towards MacBooks, I'd advise against this as you're locked into the Apple environment. 
Windows is essentially the first choice for a lot of people thanks to how popular it is, especially for beginners, and with the Windows subsystem for Linux you can develop and run Linux apps but of course if you're going to be developing mostly for Linux it's preferable that you either get a laptop that already supports Linux or a laptop that you would be happy to install a Linux distro onto and with a dedicated Linux distro you can also run a virtual machine for Windows apps.

Overall I'd say take some time to look at the specs that you want and find something with those specs that you like, and for regular development you want to focus on RAM and CPU performance, for something like game development you want something with a sufficient graphics card.

The main thing I recommend is to find something you like that feels right for you and doesn't break the bank because you'd hate to spend thousands of dollars on a laptop specifically for one purpose to end up discovering a couple months later that it's the wrong laptop, or worse that you're no longer interested in development","<div class=""md""><p>Generally speaking unless you&#39;re working on extremely complex applications or something like game development you can really get away with any half decent laptop. </p>

<p>You can go for business laptops, performance laptops, everyone loves the ThinkPad models and for good reason.</p>

<p>Depending on the use case of the applications you&#39;re developing you may be inclined to move towards MacBooks, I&#39;d advise against this as you&#39;re locked into the Apple environment. 
Windows is essentially the first choice for a lot of people thanks to how popular it is, especially for beginners, and with the Windows subsystem for Linux you can develop and run Linux apps but of course if you&#39;re going to be developing mostly for Linux it&#39;s preferable that you either get a laptop that already supports Linux or a laptop that you would be happy to install a Linux distro onto and with a dedicated Linux distro you can also run a virtual machine for Windows apps.</p>

<p>Overall I&#39;d say take some time to look at the specs that you want and find something with those specs that you like, and for regular development you want to focus on RAM and CPU performance, for something like game development you want something with a sufficient graphics card.</p>

<p>The main thing I recommend is to find something you like that feels right for you and doesn&#39;t break the bank because you&#39;d hate to spend thousands of dollars on a laptop specifically for one purpose to end up discovering a couple months later that it&#39;s the wrong laptop, or worse that you&#39;re no longer interested in development</p>
</div>",1646456983.0,,False,hzf0lox,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzf0lox/,0,False,6,False,t6tpbi,Cplusplus,t5_2qh6x
1279,khedoros,"Over the past 19 years, I've owned: An IBM Thinkpad (2003-2009), Lenovo netbook (2009-2011), Sager gaming laptop (2011-2016), Lenovo ruggedized netbook (2015-now), and HP Envy (2016-now). I've used a variety of Dell and Lenovo machines professionally, in the second half of that time.

Common threads among those machines are that they were bought online,  customized to my needs at the time, bought around the midrange available at the time, and chosen partly because they're upgradeable to expand their lifespans. Buy to use for years; replace when they stop filling your needs (or drop dead).","<div class=""md""><p>Over the past 19 years, I&#39;ve owned: An IBM Thinkpad (2003-2009), Lenovo netbook (2009-2011), Sager gaming laptop (2011-2016), Lenovo ruggedized netbook (2015-now), and HP Envy (2016-now). I&#39;ve used a variety of Dell and Lenovo machines professionally, in the second half of that time.</p>

<p>Common threads among those machines are that they were bought online,  customized to my needs at the time, bought around the midrange available at the time, and chosen partly because they&#39;re upgradeable to expand their lifespans. Buy to use for years; replace when they stop filling your needs (or drop dead).</p>
</div>",1646432951.0,,False,hzdjz1k,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzdjz1k/,0,False,4,False,t6tpbi,Cplusplus,t5_2qh6x
1280,PlayboySkeleton,"Literally anything. Like actually any modern laptop. Get a super super low end one, and it will work just fine for programming and emails and word documents.","<div class=""md""><p>Literally anything. Like actually any modern laptop. Get a super super low end one, and it will work just fine for programming and emails and word documents.</p>
</div>",1646491533.0,,False,hzgfckh,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzgfckh/,0,False,5,False,t6tpbi,Cplusplus,t5_2qh6x
1281,__nullptr_t,"A mac or linux machine. If you value your time more than your money, a mac can be worth it. Linux is closer to what you'll need to get used to for cloud stuff.

If you want to do video game programming windows might make more sense.","<div class=""md""><p>A mac or linux machine. If you value your time more than your money, a mac can be worth it. Linux is closer to what you&#39;ll need to get used to for cloud stuff.</p>

<p>If you want to do video game programming windows might make more sense.</p>
</div>",1646440232.0,,False,hze194o,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hze194o/,1,False,7,False,t6tpbi,Cplusplus,t5_2qh6x
1282,CausticTitan,"Honestly screen quality and keyboard quality are underated considerations. I like my HP Spectre, but IMO any laptop that docks to 2nd and third monitors will do well for you","<div class=""md""><p>Honestly screen quality and keyboard quality are underated considerations. I like my HP Spectre, but IMO any laptop that docks to 2nd and third monitors will do well for you</p>
</div>",1646502732.0,,False,hzh4x8q,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzh4x8q/,0,False,2,False,t6tpbi,Cplusplus,t5_2qh6x
1283,CJKay93,Base spec MacBook Air is the best development machine I ever owned.,"<div class=""md""><p>Base spec MacBook Air is the best development machine I ever owned.</p>
</div>",1646443378.0,,False,hze8afk,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hze8afk/,1,False,4,False,t6tpbi,Cplusplus,t5_2qh6x
1284,,"I know you're asking about computers, not operating systems, but I'll still comment. I prefer Windows because using the Windows Subsystem for Linux (WSL) gives me access to C++ on both Windows and Linux (letting me write and test OS-specific code). Which, to be fair, can be done on any OS using a virtual machine, but I really like the feel of WSL and how it integrates with VSCode.","<div class=""md""><p>I know you&#39;re asking about computers, not operating systems, but I&#39;ll still comment. I prefer Windows because using the Windows Subsystem for Linux (WSL) gives me access to C++ on both Windows and Linux (letting me write and test OS-specific code). Which, to be fair, can be done on any OS using a virtual machine, but I really like the feel of WSL and how it integrates with VSCode.</p>
</div>",1646461871.0,,False,hzf8oa2,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzf8oa2/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1285,bakuninsawhisshadow,"MacBook Pro, XPS Series

A lot of programmers like thinkpads but I haven’t programmed on them myself","<div class=""md""><p>MacBook Pro, XPS Series</p>

<p>A lot of programmers like thinkpads but I haven’t programmed on them myself</p>
</div>",1646447019.0,,False,hzegcz9,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzegcz9/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1286,azswcowboy,"Get as much RAM — 32G to 64G — as you can afford, that’s the key to faster compiles. Ignore the ‘fastest processor’, it’s irrelevant largely.  I’d also seriously consider a Framework laptop (I don’t own one yet) as it is highly configurable, repairable, and upgradable.","<div class=""md""><p>Get as much RAM — 32G to 64G — as you can afford, that’s the key to faster compiles. Ignore the ‘fastest processor’, it’s irrelevant largely.  I’d also seriously consider a Framework laptop (I don’t own one yet) as it is highly configurable, repairable, and upgradable.</p>
</div>",1646451756.0,,False,hzeqhav,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzeqhav/,1,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1287,AllScatteredLeaves,"I like working with MacOS for programming. But I have to say I really dislike MacBook keyboards. Nearly every MacBook I've owned in the past 15 years (maybe about 5 of them in that period?) has had an inconsistent or downright faulty keyboard and /or ends up with a delaminating screen too. Kind of frustrating but the folks in my field all use MacOS so it makes life easier overall to follow suit. If I wasn't stuck to this OS, I'd jump to a framework laptop I reckon.","<div class=""md""><p>I like working with MacOS for programming. But I have to say I really dislike MacBook keyboards. Nearly every MacBook I&#39;ve owned in the past 15 years (maybe about 5 of them in that period?) has had an inconsistent or downright faulty keyboard and /or ends up with a delaminating screen too. Kind of frustrating but the folks in my field all use MacOS so it makes life easier overall to follow suit. If I wasn&#39;t stuck to this OS, I&#39;d jump to a framework laptop I reckon.</p>
</div>",1646480903.0,,1646481102.0,hzfxu85,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzfxu85/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1288,Middlewarian,"I like Dell Latitudes.  A year ago I checked into getting something newer, but couldn't find one that I liked as much.   From what I could tell all the brands were cutting corners even on their high-end models.","<div class=""md""><p>I like Dell Latitudes.  A year ago I checked into getting something newer, but couldn&#39;t find one that I liked as much.   From what I could tell all the brands were cutting corners even on their high-end models.</p>
</div>",1646496035.0,,False,hzgp471,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzgp471/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1289,Imaginary_Rub2578,"Almost all google searches for ""good laptops for programming"" place Apple Macbook M1 Pro on top or Acer Aspire 5 Slim Laptop","<div class=""md""><p>Almost all google searches for &quot;good laptops for programming&quot; place Apple Macbook M1 Pro on top or Acer Aspire 5 Slim Laptop</p>
</div>",1646539487.0,,False,hzjbz66,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzjbz66/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1290,open_risk,"You'd want a decent sized screen to facilitate working with large codebases inside an IDE

A good keyboard for comfortable typing of lots of curly brackets

Lots of memory because you can only drink so much coffee waiting for the code to compile

Number of cores might also give you some speedup of compilation (but unless you write parallel / concurrent code, not of execution time)

If you run linux on it, check for driver availability. Eventually mainstream models get supported but it can be frustrating if you need to re-compile your wifi driver with every kernel update

A dvd writer means you can easily backup your precious code on physical medium

Last but not least, replaceable battery, repairability and upgradability means that if you get familiar and productive with your choice you dont have to go through this again in a couple of years

Good luck and happy cpp coding!","<div class=""md""><p>You&#39;d want a decent sized screen to facilitate working with large codebases inside an IDE</p>

<p>A good keyboard for comfortable typing of lots of curly brackets</p>

<p>Lots of memory because you can only drink so much coffee waiting for the code to compile</p>

<p>Number of cores might also give you some speedup of compilation (but unless you write parallel / concurrent code, not of execution time)</p>

<p>If you run linux on it, check for driver availability. Eventually mainstream models get supported but it can be frustrating if you need to re-compile your wifi driver with every kernel update</p>

<p>A dvd writer means you can easily backup your precious code on physical medium</p>

<p>Last but not least, replaceable battery, repairability and upgradability means that if you get familiar and productive with your choice you dont have to go through this again in a couple of years</p>

<p>Good luck and happy cpp coding!</p>
</div>",1646638008.0,,False,hzofmts,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzofmts/,1,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1291,SBennett13,"My personal laptop is a Dell XPS 15. Best laptop I've ever owned. I'm not an Apple guy so no MacBook. Dual booting W10 and Ubuntu20 LTS.

That being said, it is way overkill for the majority of my personal projects. You can get away with an i5 and 16 GB of RAM and not break the bank","<div class=""md""><p>My personal laptop is a Dell XPS 15. Best laptop I&#39;ve ever owned. I&#39;m not an Apple guy so no MacBook. Dual booting W10 and Ubuntu20 LTS.</p>

<p>That being said, it is way overkill for the majority of my personal projects. You can get away with an i5 and 16 GB of RAM and not break the bank</p>
</div>",1646806905.0,,False,hzxxx1h,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzxxx1h/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1292,,[removed],"<div class=""md""><p>[removed]</p>
</div>",1651993274.0,,False,i7rscn7,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/i7rscn7/,1,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1293,jameskkchau,"Decision is entirely based on who you're developing for. Truly I tell you, do not program for fun. In 2022, the programming model has shifted away from object oriented back to the services model of the 1980's when you separate the what from the how, this is called the microservices architecture which requires your laptop to have speedy performance and connection because your laptop requests as well as responds to other machines through http, even for gaming.","<div class=""md""><p>Decision is entirely based on who you&#39;re developing for. Truly I tell you, do not program for fun. In 2022, the programming model has shifted away from object oriented back to the services model of the 1980&#39;s when you separate the what from the how, this is called the microservices architecture which requires your laptop to have speedy performance and connection because your laptop requests as well as responds to other machines through http, even for gaming.</p>
</div>",1664648553.0,,False,iqnj05n,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/iqnj05n/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1294,decfin,What is best laptop lightweight high performance lean version to learn python,"<div class=""md""><p>What is best laptop lightweight high performance lean version to learn python</p>
</div>",1678576578.0,,False,jbv3hrj,False,t3_t6tpbi,t3_t6tpbi,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/jbv3hrj/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1295,moru0011,BS. Need 32gb ram for debugging a cluster + Fe + app locally. Needs to support 2 hi res monitors. Should not run hot under load,"<div class=""md""><p>BS. Need 32gb ram for debugging a cluster + Fe + app locally. Needs to support 2 hi res monitors. Should not run hot under load</p>
</div>",1672166475.0,,False,j1visld,False,t3_t6tpbi,t1_hzdrk2b,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/j1visld/,1,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1296,CausticTitan,"Windows is incredibly common for C++ development. It works just fine and increases their ""off the shelf"" options.","<div class=""md""><p>Windows is incredibly common for C++ development. It works just fine and increases their &quot;off the shelf&quot; options.</p>
</div>",1646502891.0,,False,hzh5b0i,False,t3_t6tpbi,t1_hze194o,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzh5b0i/,1,False,3,False,t6tpbi,Cplusplus,t5_2qh6x
1297,EdgyQuant,Make sure it’s an M1 and not an intel,"<div class=""md""><p>Make sure it’s an M1 and not an intel</p>
</div>",1646506069.0,,False,hzhcrpg,False,t3_t6tpbi,t1_hze8afk,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzhcrpg/,1,False,3,False,t6tpbi,Cplusplus,t5_2qh6x
1298,EsotericLife,"Can you explain this a little bit? I thought compilation was slow because of how wide the transfer was, not depth. So extra ram doesn’t speed it up much, but more cores to split load really does afaik","<div class=""md""><p>Can you explain this a little bit? I thought compilation was slow because of how wide the transfer was, not depth. So extra ram doesn’t speed it up much, but more cores to split load really does afaik</p>
</div>",1655360871.0,,False,icjxgwx,False,t3_t6tpbi,t1_hzeqhav,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/icjxgwx/,1,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1299,codingqquestions,Nice one but you got any recommendations that fits the points mentioned and is also in the budget of £500 to £900?,"<div class=""md""><p>Nice one but you got any recommendations that fits the points mentioned and is also in the budget of £500 to £900?</p>
</div>",1659937530.0,,False,ijeoyh4,False,t3_t6tpbi,t1_hzofmts,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/ijeoyh4/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1300,mistersprinkles1983,"You really love giving incorrect and incomplete information on Reddit dude. Been going through your profile. This post is outright nonsense. Lenovo Laptops are no faster or better than a similarly spec'd laptop from another company. Lenovo does not make the fastest laptops in the world and actually, their lower end models are not the best quality in terms of build quality and fit and finish in my opinion.

To say ""Lenovo laptops are best for programming"" is a complete nonsense statement with no basis in reality whatsoever. It is an untrue and nonsensical, unprovable statement.","<div class=""md""><p>You really love giving incorrect and incomplete information on Reddit dude. Been going through your profile. This post is outright nonsense. Lenovo Laptops are no faster or better than a similarly spec&#39;d laptop from another company. Lenovo does not make the fastest laptops in the world and actually, their lower end models are not the best quality in terms of build quality and fit and finish in my opinion.</p>

<p>To say &quot;Lenovo laptops are best for programming&quot; is a complete nonsense statement with no basis in reality whatsoever. It is an untrue and nonsensical, unprovable statement.</p>
</div>",1652699381.0,,False,i8t12qp,False,t3_t6tpbi,t1_i7rscn7,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/i8t12qp/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1301,dvali,"""Need""

Plus I already said ""unless you have particular requirements that demand more performance"", in so many words.","<div class=""md""><p>&quot;Need&quot;</p>

<p>Plus I already said &quot;unless you have particular requirements that demand more performance&quot;, in so many words.</p>
</div>",1672949960.0,,False,j33ib1z,False,t3_t6tpbi,t1_j1visld,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/j33ib1z/,1,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1302,__nullptr_t,"I agree it's common, I just can't give it a recommendation unless you're specifically interested in PC games or desktop apps.

Clang is my favorite compiler to work with by a long shot, using Vim or VSCode on a *nix OS of some sort. Running code with thread sanitizer and memory sanitizer makes debugging much simpler, and it does a good job of adhering to the standard. Code written on windows can be a pain to run anywhere else.","<div class=""md""><p>I agree it&#39;s common, I just can&#39;t give it a recommendation unless you&#39;re specifically interested in PC games or desktop apps.</p>

<p>Clang is my favorite compiler to work with by a long shot, using Vim or VSCode on a *nix OS of some sort. Running code with thread sanitizer and memory sanitizer makes debugging much simpler, and it does a good job of adhering to the standard. Code written on windows can be a pain to run anywhere else.</p>
</div>",1646533330.0,,False,hzizxdu,False,t3_t6tpbi,t1_hzh5b0i,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/hzizxdu/,0,False,3,False,t6tpbi,Cplusplus,t5_2qh6x
1303,hellofriend19,"I’ve had some niche issues getting some libraries (SDL_image) to work with my MacBook’s M1 Pro, but it only took me a day to sort out.","<div class=""md""><p>I’ve had some niche issues getting some libraries (SDL_image) to work with my MacBook’s M1 Pro, but it only took me a day to sort out.</p>
</div>",1646858873.0,,False,i00pi9h,False,t3_t6tpbi,t1_hzhcrpg,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/i00pi9h/,1,False,2,False,t6tpbi,Cplusplus,t5_2qh6x
1304,azswcowboy,"Wow, old thread. In my experience gcc especially, likes to use a lot of memory when compiling. On any modern laptop you’re likely going to have multiple compiles simultaneously to use all those cores they come with. If you don’t have enough memory the machine will swap and effectively slow things down. Also, those 50 browser tabs 🥴 on stack overflow/cpp reference/GitHub take a bunch of memory so you might swap just because of other stuff in the background if there’s not enough physical memory.","<div class=""md""><p>Wow, old thread. In my experience gcc especially, likes to use a lot of memory when compiling. On any modern laptop you’re likely going to have multiple compiles simultaneously to use all those cores they come with. If you don’t have enough memory the machine will swap and effectively slow things down. Also, those 50 browser tabs 🥴 on stack overflow/cpp reference/GitHub take a bunch of memory so you might swap just because of other stuff in the background if there’s not enough physical memory.</p>
</div>",1655380479.0,,False,ickli29,False,t3_t6tpbi,t1_icjxgwx,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/ickli29/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1305,MiserableYesterday9,"Hey there! It seems like you might have some specific requirements for your programming needs. While any laptop can technically work for programming, if you're working with a cluster and need 32gb of RAM for debugging, you might want to consider a laptop with higher specs. It's also worth looking for a laptop that can support multiple high-resolution monitors and won't overheat under load. Best of luck finding the right laptop for you!","<div class=""md""><p>Hey there! It seems like you might have some specific requirements for your programming needs. While any laptop can technically work for programming, if you&#39;re working with a cluster and need 32gb of RAM for debugging, you might want to consider a laptop with higher specs. It&#39;s also worth looking for a laptop that can support multiple high-resolution monitors and won&#39;t overheat under load. Best of luck finding the right laptop for you!</p>
</div>",1679238093.0,,False,jctuu6y,False,t3_t6tpbi,t1_j33ib1z,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/jctuu6y/,1,False,2,False,t6tpbi,Cplusplus,t5_2qh6x
1306,EdgyQuant,"That may be true, the C++ I’ve written on my M1 is CLI stuff with few dependencies.  My main point was that my base spec intel 2020 MBA is ridiculously slow.  Meanwhile my 2020 M1 Mac mini is amazing and as fast/faster than my 8 core RYZEN with 32gb of ram and a dedicated GPU","<div class=""md""><p>That may be true, the C++ I’ve written on my M1 is CLI stuff with few dependencies.  My main point was that my base spec intel 2020 MBA is ridiculously slow.  Meanwhile my 2020 M1 Mac mini is amazing and as fast/faster than my 8 core RYZEN with 32gb of ram and a dedicated GPU</p>
</div>",1646871357.0,,False,i01kjce,False,t3_t6tpbi,t1_i00pi9h,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/i01kjce/,1,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1307,alexmijowastaken,Are you clippy,"<div class=""md""><p>Are you clippy</p>
</div>",1679239458.0,,False,jcty29w,False,t3_t6tpbi,t1_jctuu6y,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/jcty29w/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1308,rainning0513,R9?,"<div class=""md""><p>R9?</p>
</div>",1653929101.0,,False,iak8ii0,False,t3_t6tpbi,t1_i01kjce,/r/Cplusplus/comments/t6tpbi/what_are_some_good_laptops_for_programming/iak8ii0/,0,False,1,False,t6tpbi,Cplusplus,t5_2qh6x
1309,,The best thing to do is keep writing larger and larger projects. Also subscribing to c++ blogs such as fluentcpp will help you learn more over time,"<div class=""md""><p>The best thing to do is keep writing larger and larger projects. Also subscribing to c++ blogs such as fluentcpp will help you learn more over time</p>
</div>",1646641253.0,,False,hzojq2n,False,t3_t8jx1s,t3_t8jx1s,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hzojq2n/,0,False,26,False,t8jx1s,Cplusplus,t5_2qh6x
1310,mredding,"With each order of magnitude, you need new skills and abstractions to manage the complexity of ever larger software projects. How you THINK about a 10 line program, vs. a 1000 line, vs. a 100,000, vs. 1m LOC... You can't understand how the whole program works, line for line, as that size increases. You can't find your way around. So you have to break the program up into files and modules and patterns and idioms and algorithms. From the top down. How you think has to change.

I support a product for 5 years now that... Frankly, I've never looked at `main`. I've no idea how the thing starts. I cannot express to you the vast emptiness in my heart that is the fucks I have to give about that. It's a big complex piece of software and the general consensus is that no one in the company actually understands how it works. There are vast unknowns and things that constantly surprise us when we go delving into a new-old section of code that no one in the company today has ever looked at before, all the original authors are retired or moved on.

And that's alright. That's been my experience literally everywhere. Even the places we had original authors, they just can't remember. Nor should they - the source code speaks for itself, so that they don't have to remember.

If you want to dive in, then take a look at an open source project that you actually use, something you actually give a damn about, then go look at it's ticket system. Go ahead and take the time to sort through the thing, and try to find a chore or a bug that's rated or seems simple enough, something that says ""When I do X, I get Y, but I expected Z."" Look for a bug that basically lays out what's wrong and what needs to be done to fix it. Then go and do that. You need to develop the skill that is ignoring 98% of all the source code, finding the bit you need to work on, setting a breakpoint, actually hitting it, reproducing the issue stated, and fixing just that piece. And fix it with the minimal change possible. Don't refactor the whole module, don't change the naming convention, don't improve any other little bit of code that isn't the solution to the ticket. Oh, you found a stupid `for` loop that could be better replaced with `std::copy`? Submit a ticket for it. Then fix that. Track the work.

The other thing is that the maintainers are people! EMAIL THEIR ASSES. Be all like, hey, I wanna get involved, I'm new, and I don't want to bite off more than I can chew. Can you help me with a noob ticket? I was looking at this one, and this is what I think about it. Is that about right? Could you instead suggest a ticket and some pointers that might be better?

My employer's product is open source and is part of a big FOSS family you've heard of. All of us principle maintainers, any one of us would take the time out of our day to get you sorted. It would actually be exciting for the team here, because not every FOSS project is uber collaborative like the Linux kernel.

A lot of gigs are maintenance roles. A lot of software is established. I have not seen too much greenfield development in my career, and honestly, greenfield development is not the most exciting stuff, and I've done enough startups to know I'll never do another one again.

If you don't use the software yourself, then there just isn't the motivation to get involved. Ok, so you've picked some random-ass FOSS and run the test suite; you gonna... step into any of that code in the debugger? No, because what's the point? And being a pointless exercise adds to the confusion. But if you USE the software, then how it works directly affects your use of that software. And by getting involved, you're improving your use of that software. It's a positive feedback loop.","<div class=""md""><p>With each order of magnitude, you need new skills and abstractions to manage the complexity of ever larger software projects. How you THINK about a 10 line program, vs. a 1000 line, vs. a 100,000, vs. 1m LOC... You can&#39;t understand how the whole program works, line for line, as that size increases. You can&#39;t find your way around. So you have to break the program up into files and modules and patterns and idioms and algorithms. From the top down. How you think has to change.</p>

<p>I support a product for 5 years now that... Frankly, I&#39;ve never looked at <code>main</code>. I&#39;ve no idea how the thing starts. I cannot express to you the vast emptiness in my heart that is the fucks I have to give about that. It&#39;s a big complex piece of software and the general consensus is that no one in the company actually understands how it works. There are vast unknowns and things that constantly surprise us when we go delving into a new-old section of code that no one in the company today has ever looked at before, all the original authors are retired or moved on.</p>

<p>And that&#39;s alright. That&#39;s been my experience literally everywhere. Even the places we had original authors, they just can&#39;t remember. Nor should they - the source code speaks for itself, so that they don&#39;t have to remember.</p>

<p>If you want to dive in, then take a look at an open source project that you actually use, something you actually give a damn about, then go look at it&#39;s ticket system. Go ahead and take the time to sort through the thing, and try to find a chore or a bug that&#39;s rated or seems simple enough, something that says &quot;When I do X, I get Y, but I expected Z.&quot; Look for a bug that basically lays out what&#39;s wrong and what needs to be done to fix it. Then go and do that. You need to develop the skill that is ignoring 98% of all the source code, finding the bit you need to work on, setting a breakpoint, actually hitting it, reproducing the issue stated, and fixing just that piece. And fix it with the minimal change possible. Don&#39;t refactor the whole module, don&#39;t change the naming convention, don&#39;t improve any other little bit of code that isn&#39;t the solution to the ticket. Oh, you found a stupid <code>for</code> loop that could be better replaced with <code>std::copy</code>? Submit a ticket for it. Then fix that. Track the work.</p>

<p>The other thing is that the maintainers are people! EMAIL THEIR ASSES. Be all like, hey, I wanna get involved, I&#39;m new, and I don&#39;t want to bite off more than I can chew. Can you help me with a noob ticket? I was looking at this one, and this is what I think about it. Is that about right? Could you instead suggest a ticket and some pointers that might be better?</p>

<p>My employer&#39;s product is open source and is part of a big FOSS family you&#39;ve heard of. All of us principle maintainers, any one of us would take the time out of our day to get you sorted. It would actually be exciting for the team here, because not every FOSS project is uber collaborative like the Linux kernel.</p>

<p>A lot of gigs are maintenance roles. A lot of software is established. I have not seen too much greenfield development in my career, and honestly, greenfield development is not the most exciting stuff, and I&#39;ve done enough startups to know I&#39;ll never do another one again.</p>

<p>If you don&#39;t use the software yourself, then there just isn&#39;t the motivation to get involved. Ok, so you&#39;ve picked some random-ass FOSS and run the test suite; you gonna... step into any of that code in the debugger? No, because what&#39;s the point? And being a pointless exercise adds to the confusion. But if you USE the software, then how it works directly affects your use of that software. And by getting involved, you&#39;re improving your use of that software. It&#39;s a positive feedback loop.</p>
</div>",1646668205.0,,False,hzpr4lb,False,t3_t8jx1s,t3_t8jx1s,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hzpr4lb/,1,False,15,False,t8jx1s,Cplusplus,t5_2qh6x
1311,forgottenqueue,Also it takes a while to understand a new project. Especially if it uses unfamiliar libraries.  Even if you were an expert on the language it’s not like you can just look at any code for 10 minutes and know what’s happening.,"<div class=""md""><p>Also it takes a while to understand a new project. Especially if it uses unfamiliar libraries.  Even if you were an expert on the language it’s not like you can just look at any code for 10 minutes and know what’s happening.</p>
</div>",1646642086.0,,False,hzokqfg,False,t3_t8jx1s,t3_t8jx1s,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hzokqfg/,0,False,12,False,t8jx1s,Cplusplus,t5_2qh6x
1312,SentnicarDr,"Projects projects projects, thats how you i learned every one of my languages tbh","<div class=""md""><p>Projects projects projects, thats how you i learned every one of my languages tbh</p>
</div>",1646641470.0,,False,hzojzgr,False,t3_t8jx1s,t3_t8jx1s,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hzojzgr/,1,False,9,False,t8jx1s,Cplusplus,t5_2qh6x
1313,no-sig-available,"Perhaps try some other projects?  :-)

Some open source projects are not exactly exemplary nice code, but - for various reasons - contain odd workarounds for ancient compilers. That can make it extremely hard to read.

Also I guess your goal is not to be able to read C++, but to write it. Then *that* is what you need to practice. 

Reading other's code can sometimes make you realize that it is a good solution to some problem. But if you haven't run into that specific problem in your own code earlier, you might not see how this is a solution.","<div class=""md""><p>Perhaps try some other projects?  :-)</p>

<p>Some open source projects are not exactly exemplary nice code, but - for various reasons - contain odd workarounds for ancient compilers. That can make it extremely hard to read.</p>

<p>Also I guess your goal is not to be able to read C++, but to write it. Then <em>that</em> is what you need to practice. </p>

<p>Reading other&#39;s code can sometimes make you realize that it is a good solution to some problem. But if you haven&#39;t run into that specific problem in your own code earlier, you might not see how this is a solution.</p>
</div>",1646649370.0,,1646649739.0,hzotdrw,False,t3_t8jx1s,t3_t8jx1s,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hzotdrw/,0,False,3,False,t8jx1s,Cplusplus,t5_2qh6x
1314,pandamonium87,Be sure to learn modern C++ (post 11),"<div class=""md""><p>Be sure to learn modern C++ (post 11)</p>
</div>",1646679381.0,,False,hzqjtzg,False,t3_t8jx1s,t3_t8jx1s,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hzqjtzg/,1,False,2,False,t8jx1s,Cplusplus,t5_2qh6x
1315,EdgyQuant,"Write a bunch of C++, it doesn’t matter what the project is","<div class=""md""><p>Write a bunch of C++, it doesn’t matter what the project is</p>
</div>",1646691307.0,,False,hzreu8y,False,t3_t8jx1s,t3_t8jx1s,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hzreu8y/,0,False,2,False,t8jx1s,Cplusplus,t5_2qh6x
1316,lieddersturme,"for (size\_t i = 0; i < YouWantLearnCpp.size() ; i++)

std::unique\_ptr<Project> project = std::make\_unique<Project>();","<div class=""md""><p>for (size_t i = 0; i &lt; YouWantLearnCpp.size() ; i++)</p>

<p>std::unique_ptr&lt;Project&gt; project = std::make_unique&lt;Project&gt;();</p>
</div>",1646705840.0,,False,hzsbppn,False,t3_t8jx1s,t3_t8jx1s,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hzsbppn/,0,False,2,False,t8jx1s,Cplusplus,t5_2qh6x
1317,Middlewarian,I just keep [asking for help](https://www.reddit.com/r/codereview/comments/qo8yq3/c_programs/).   I'm glad to have both closed and open-source code.   With closed-source code I can use the latest features available and it doesn't have to be portable.,"<div class=""md""><p>I just keep <a href=""https://www.reddit.com/r/codereview/comments/qo8yq3/c_programs/"">asking for help</a>.   I&#39;m glad to have both closed and open-source code.   With closed-source code I can use the latest features available and it doesn&#39;t have to be portable.</p>
</div>",1646667150.0,,False,hzpolar,False,t3_t8jx1s,t3_t8jx1s,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hzpolar/,0,False,1,False,t8jx1s,Cplusplus,t5_2qh6x
1318,forgottenqueue,"You’ve made me think, where is main in my program. I’ve not seen it in years :)","<div class=""md""><p>You’ve made me think, where is main in my program. I’ve not seen it in years :)</p>
</div>",1646766526.0,,False,hzvh1f1,False,t3_t8jx1s,t1_hzpr4lb,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hzvh1f1/,0,False,3,False,t8jx1s,Cplusplus,t5_2qh6x
1319,Laxn_pander,The sad truth.,"<div class=""md""><p>The sad truth.</p>
</div>",1646728007.0,,False,hztd2zj,False,t3_t8jx1s,t1_hzojzgr,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hztd2zj/,0,False,2,False,t8jx1s,Cplusplus,t5_2qh6x
1320,Laxn_pander,"Though, it doesn’t hurt to know your way around traditional pointers. It’s just too important to know how references and raw pointers work, if you ever want to work with other libraries.","<div class=""md""><p>Though, it doesn’t hurt to know your way around traditional pointers. It’s just too important to know how references and raw pointers work, if you ever want to work with other libraries.</p>
</div>",1646728176.0,,False,hztdaah,False,t3_t8jx1s,t1_hzqjtzg,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hztdaah/,1,False,1,False,t8jx1s,Cplusplus,t5_2qh6x
1321,pandamonium87,"You can learn pointers and references also in modern c++ (which in the end is the right way to code in C++). You don't need to use C functionalities.

isocpp is a good starting point","<div class=""md""><p>You can learn pointers and references also in modern c++ (which in the end is the right way to code in C++). You don&#39;t need to use C functionalities.</p>

<p>isocpp is a good starting point</p>
</div>",1646728447.0,,False,hztdlw1,False,t3_t8jx1s,t1_hztdaah,/r/Cplusplus/comments/t8jx1s/how_to_master_c/hztdlw1/,0,False,1,False,t8jx1s,Cplusplus,t5_2qh6x
